{"version":3,"file":"index.js","sources":["../../../react-recycling/index.js","../src/lib/TypeForm.js","../src/lib/TypeRender.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/Select.js","../src/Types/Object.js","../src/Types/Array.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types.js","../src/Schema/Schema.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema/Render.js","../src/index.js"],"sourcesContent":["import React from 'react';\n\n\nexport default class RecycledComponent extends React.Component {\n  constructor(props, context, updater) {\n    // parent\n    super(props, context, updater)\n\n    // setup state with the cycle returns\n    this.state = this.cycle(props, true)\n  }\n\n  componentDidUpdate(props, state) {\n    // execute parent\n    if(super.componentDidUpdate) super.componentDidUpdate(props, state)\n\n    // props have changed\n    var changed = false\n    for(var a in props) {\n      // all types are compared exept functions\n      // which changes at any round\n      if(typeof props[a] !== \"function\" && props[a] !== this.props[a]) {\n        changed = true\n        break\n      }\n    }\n\n    // something need to be updated inside this component\n    if (changed === true) {\n      // recycling the state of the component\n      const ret = this.cycle(this.props, false)\n      if(ret && typeof ret === \"object\") this.setState(ret)\n    }\n  }\n\n  // the famous cycling function\n  cycle(props, first) {\n    return({})\n  }\n}","import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props.schema !== props.schema) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n    \n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      options: {}\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) {\n      this.schema = {}\n      return (state)\n    }\n\n    state.help = this.schema.$help;\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n\n    // if (props.verify === true) {\n    //   this.verify(props.value, (ret) => {\n    //     this.state = { ...this.state, ...ret }\n    //   })\n    // }\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        \n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    if(!this.handler) {\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: \"No Handler on verifier\"\n      }))\n    }\n    \n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  Col,\n  Row,\n  Form,\n  Input\n} from \"antd\";\n\nexport default class FieldifyTypeRender extends RecycledComponent {\n\n  cycle(props) {\n    const state = {\n      schema: props.schema,\n      value: props.value,\n      injected: props.injected\n    }\n\n    return (state)\n  }\n\n  subRender(children) {\n\n    if(this.state.injected === true) {\n      return (\n        <Form.Item\n          label={this.state.schema.$doc}\n          hasFeedback={true}\n          validateStatus=\"success\"\n          style={{ marginBottom: \"0px\" }}\n          wrapperCol={{ sm: 24 }}\n        >\n          {children}\n        </Form.Item>\n      )\n    }\n    return (\n      <Form.Item\n        label={this.state.schema.$doc}\n        hasFeedback={true}\n        validateStatus=\"success\"\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n\n  render() {\n    return (this.subRender(\n      <div style={{ width: \"100%\" }}>\n        {this.state.value}\n      </div>\n    ));\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\n/* <div class=\"ant-form-item-control-input\">\n  <div class=\"ant-form-item-control-input-content\">\n    <input type=\"text\" class=\"ant-input\" value=\"vdvfsdvfdsvfds\" style=\"width: 100%;\">\n      </div><span class=\"ant-form-item-children-icon\">\n        <span role=\"img\" aria-label=\"check-circle\" class=\"anticon anticon-check-circle\">\n          <svg viewBox=\"64 64 896 896\" focusable=\"false\" class=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\">\n              </path>\n              </svg>\n              </span>\n              </span>\n              </div> */\n\n\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm,\n  Render: StringRender,\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(state.value && typeof state.value === \"object\") {\n      var final = \"\"\n\n      if(state.value.first) final += state.value.first\n      if(state.value.last) final += \" \"+state.value.last\n\n      state.value = final.trim()\n    }\n    return(state)\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n  Render: NameRender,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailRender extends TypeRender {\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm,\n  Render: EmailRender\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm,\n  Render: NumberRender\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input placeholder=\"Checkbox of characters\" />\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Checkbox min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(typeof state.value === \"string\") {\n\n      if(props.schema.$options && props.schema.$options.items) {\n        const ptr = props.schema.$options.items\n        if(ptr[state.value]) state.value = ptr[state.value]\n      }\n    }\n    return(state)\n  }\n\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm,\n  Render: SelectRender\n}\n\n\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ObjectClass extends fieldifyType {\n}\n\n\nexport default {\n  code: \"Object\",\n  description: \"Nested Sub Object\",\n  class: ObjectClass\n}\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\nclass ArrayClass extends fieldifyType {\n  configuration () {\n    return ({\n      min: {\n        $doc: 'Minimum of items',\n        $required: false,\n        $type: 'Number'\n      },\n      max: {\n        $doc: 'Maximun of items',\n        $required: false,\n        $type: 'Number'\n      }\n    })\n  }\n}\n\nexport default {\n  code: \"Array\",\n  description: \"Array\",\n  class: ArrayClass\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types, input as FieldifyInput } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVRender extends TypeRender {\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value\n      })\n    }\n    return (ds)\n  }\n\n\n  render() {\n    const columns = [\n      {\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        dataIndex: 'value',\n        key: 'value',\n      }\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.subRender(<div>\n      <Table\n        showHeader={false}\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm,\n  Render: KVRender\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport Select from \"./Types/Select\"\nimport Object from \"./Types/Object\"\nimport Array from \"./Types/Array\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Checkbox,\n  Object,\n  Array,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  compile(schema) {\n    // process normal compilation\n    super.compile(schema);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\n\nexport class FieldifySchemaForm extends RecycledComponent {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n\n  }\n\n  cycle(props, first) {\n\n    const state = {}\n\n    // compile the schema\n    state.rawSchema = props.schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(state.rawSchema)\n\n    // create an input instance\n    // console.log(\"rawInput\", state.rawInput === props.rawInput)\n    state.rawInput = props.input\n    state.input = new FieldifyInput(state.schema)\n    state.input.setValue(props.input)\n\n    state.inputValue = state.input.getValue()\n    state.verify = props.verify || false\n\n    state.reactive = this.update(state.schema, state.inputValue, state.verify);\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    return (state)\n  }\n\n  getValue() {\n    return (this.state.input.getValue())\n  }\n\n  clickAddArray(line) {\n    this.state.input.set(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      reactive: this.update(this.state.schema, _value, false)\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.state.input.remove(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      reactive: this.update(this.state.schema, _value, false)\n    })\n  }\n\n  setValue(line, value) {\n    if (!this.state.input) return;\n\n    this.state.input.set(line, value)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value\n    })\n  }\n\n  update(root, input, verify) {\n    const follower = (schema, schematized, input, ret, line) => {\n      line = line || \"\"\n\n      utils.orderedRead(schema, (index, item) => {\n\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        const schematizedSrc = schematized[source.$_key];\n        const sourceSchematized = { ...Array.isArray(schematizedSrc) ? schematizedSrc[0] : schematizedSrc };\n\n        const inputPtr = input ? input[source.$_key] : null;\n        const lineKey = line + \".\" + source.$_key;\n\n        if (source.$_array === true) {\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            },\n            {\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            },\n          ];\n          const dataSource = []\n\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          if (source.$_nested === true) {\n            var inputPtr2 = input[source.$_key]\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[source.$_key] = [];\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const child = [];\n              follower(source, sourceSchematized, value, child, key);\n\n              dataSource.push({\n                key,\n                form: child,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n          }\n          else if (source.$type) {\n            delete sourceSchematized.$doc; // source is cloned\n            const TypeForm = source.$type.Form;\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[item.$_key] = [];\n              inputPtr2 = input[item.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              dataSource.push({\n                key,\n                form: <TypeForm\n                  schema={sourceSchematized}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n          }\n\n          ret.push(<Form.Item key={source.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                {inputPtr2 ?\n                  <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                    <span><PlusIcon /></span>\n                  </span>\n                  : null}\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n\n        }\n        else {\n          if (source.$_nested === true) {\n            const child = [];\n            follower(source, sourceSchematized, inputPtr, child, lineKey);\n\n            ret.push(<div key={source.$_wire} className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$doc}>\n                {child}\n              </Card>\n            </div>);\n          }\n          else if (item.$type) {\n            const TypeForm = item.$type.Form;\n\n            ret.push(<TypeForm\n              schema={sourceSchematized}\n              value={inputPtr}\n              key={source.$_wire}\n              verify={verify}\n              user={this.props.user}\n              onChange={(schema, value) => this.setValue(lineKey, value)}\n\n              // reference errors\n              onError={(error, message) => {\n                if (error === true) {\n                  this.references[source.$_wire] = message;\n                }\n                else {\n                  const ref = this.references[source.$_wire];\n                  if (ref) {\n                    delete this.references[source.$_wire];\n                  }\n                }\n              }}\n            />);\n          }\n        }\n      });\n      return (ret);\n    };\n\n    const ret = [];\n    follower(\n      root.handler.schema,\n      root.handlerSchematized.schema,\n      input,\n      ret\n    );\n    return (ret);\n  }\n\n  render() {\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Form\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n// build all available types\nconst allTypes = {}\nconst allTypesNoArray = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n  if (a !== \"Array\") {\n    allTypesNoArray[a] = Types[a].description\n  }\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true,\n    $position: 10\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: \"Select\",\n    $required: true,\n    $options: {\n      items: allTypes\n    },\n    $position: 11\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: false,\n    $type: \"String\",\n    $position: 22\n  },\n  position: {\n    $doc: \"Position in the serie\",\n    $required: false,\n    $type: \"Number\",\n    $default: 0,\n    $options: {\n      acceptedTypes: \"integer\"\n    },\n    $position: 23\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n\n    // here we have 3 cases\n    // normal case = $_array !== true && $_nested !== true\n    // nested in array = $_array === true && $_nested === true\n    // normal in array = $_array === true && $_nested !== true\n    // single nested = $_array !== true && $_nested === true\n\n    const state = {\n      edition: false,\n      original: props.value,\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user,\n      verify: false\n    };\n   \n    if (state.user && state.user.$_wire) {\n      state.initialPath = state.user.$_wire;\n    }\n    else state.initialPath = '';\n\n    if (props.value) {\n      const val = props.value;\n\n      state.edition = true;\n\n      // normal case\n      if (val.$_array !== true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // nested in array\n      else if (val.$_array === true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // normal in array\n      else if (val.$_array === true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: typeof val.$type === \"string\" ? val.$type : val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // special handle for objects\n      else if (val.$_array !== true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n    }\n    // single addition\n    else {\n      // nothing to set\n      state.value = {}\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    return (state)\n  }\n\n  driveSchema(state, force) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n\n      // special cases for array \n      if (value.type === \"Array\") {\n        this.currentSchema.content = {\n          $doc: \"Item content type\",\n          $type: \"Select\",\n          $required: true,\n          $options: {\n            default: value.content || \"Object\",\n            items: allTypesNoArray\n          },\n          $position: 12\n        }\n      }\n\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      state.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n\n  }\n\n  handleOK() {\n    this.state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"red\"\n        state.form.state = \"Error\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n\n        this.setState(state)\n\n        // get the current input values \n        const value = result.result\n        // const value = this.state.input.getValue()\n        var nvalue = {}\n\n        // rename all root value with $\n        for (var key in value) nvalue['$' + key] = value[key]\n\n        // we will save the last path in order to reconstruct the field name\n        const source = this.state.initialPath.split('.')\n        source.pop()\n        source.push(value.key)\n        const npath = source.join('.')\n        delete nvalue.$key;\n\n        // because object and array are virtualized in the builder \n        // then we need to remap the item with the correct schema underlining\n\n        if (nvalue.$type === \"Array\" && nvalue.$content === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // normal in array\n        else if (nvalue.$type === \"Array\" && nvalue.$content !== \"Object\") {\n          nvalue.$type = nvalue.$content;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // special handle for objects\n        else if (nvalue.$type === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n        }\n\n        if (this.state.edition === true) {\n          this.props.onOk(({\n            edition: true,\n            oldPath: this.state.initialPath,\n            newPath: npath,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n        else {\n          this.props.onOk(({\n            edition: false,\n            newPath: this.state.initialPath + \".\" + value.key,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n      }\n    })\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={this.handleOK.bind(this)}\n      onCancel={onCancel}\n    >\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.currentSchema}\n        input={this.state.value}\n        user={this.props.user}\n        verify={this.state.verify}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\n\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends RecycledComponent {\n\n  cycle(props, first) {\n    const state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.onChange = ()=>{}\n    if(props.onChange) this.onChange = props.onChange\n\n    // compile the schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(props.schema)\n\n    state.schemaDataSource = this.updateDataSource(state.schema)\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    return(state)\n  }\n\n  fireOnChange() {\n    const ex = this.state.schema.export()\n    // this.state.schema.compile(ex)\n\n    // fire on change for exporting the new schema\n    this.onChange(ex)\n  }\n\n  itemChanged(arg) {\n\n    if (arg.edition === true) {\n      const lineup = this.state.schema.getLineup(arg.oldPath);\n\n      // delete org\n      this.state.schema.removeLineup(arg.oldPath)\n\n      // put new\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field updated\",\n        description: `Field at ${arg.oldPath} has been successfully updated`\n      })\n    }\n\n    // manage addition\n    else {\n      // just put the new one\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field added\",\n        description: `Field at ${arg.newPath} has been successfully added`\n      })\n    }\n\n    this.fireOnChange();\n\n    this.setState({\n      modal: false,\n      modalContent: null,\n      modalUser: null,\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n  }\n\n  itemRemove(item) {\n    this.state.schema.removeLineup(item.$_wire);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_wire} has been successfully removed`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: null, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  handlingEdit(item) {\n    const path = item.$_wire || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: item, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  updateDataSource(root) {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        var path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if (Array.isArray(item)) {\n          path = wire + \".\" + item[0].$_key;\n          item[0].$_path = path;\n          item[0].$_array = true;\n\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          else {\n            item[0].$_nested = true;\n          }\n\n          current.push({\n            ptr: item[0],\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item[0].$_key}</strong>\n            </div>,\n            doc: item[0].$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item[0])} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item[0])}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if (typeof item === \"object\" && !item.$type) {\n          item.$_nested = true;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (root) {\n      data = fieldify2antDataTable(root.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nexport class FieldifySchemaRender extends RecycledComponent {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n  }\n\n  cycle(props, first) {\n\n    const state = {\n      input: props.input,\n      layout: props.layout ? props.layout : \"horizontal\"\n    }\n\n    this.schema = props.schema;\n\n    state.verify = props.verify || false\n\n    state.reactive = this.update(state.input, state.verify);\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    return (state)\n  }\n\n  update(input, verify) {\n    const follower = (schema, input, ret, line) => {\n      line = line || \"\"\n\n      utils.orderedRead(schema, (index, item) => {\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        const inputPtr = input ? input[source.$_key] : null;\n        const lineKey = line + \".\" + source.$_key;\n\n        if (source.$_array === true) {\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            }\n          ];\n\n          const dataSource = []\n\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          if (source.$_nested === true) {\n            var inputPtr2 = input[source.$_key]\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[source.$_key] = [];\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const child = [];\n              follower(source, value, child, key);\n\n              dataSource.push({\n                key,\n                form: child\n              })\n            }\n          }\n          else {\n            delete source.$doc; // source is cloned\n            const TypeRender = source.$type.Render;\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (TypeRender) {\n              if (!Array.isArray(inputPtr)) {\n                input[item.$_key] = [];\n                inputPtr2 = input[item.$_key];\n              }\n\n              if (!inputPtr2) return (ret);\n\n              if (min - inputPtr2.length > 0) {\n                for (var a = 0; a <= min - inputPtr2.length; a++) {\n                  inputPtr2.push(null)\n                }\n              }\n\n              for (var a = 0; a < inputPtr2.length; a++) {\n                const value = inputPtr2[a];\n                const key = lineKey + \".\" + a\n\n                dataSource.push({\n                  key,\n                  form: <TypeRender\n                    schema={source}\n                    value={value}\n                    injected={true}\n                    key={\"render.\"+source.$_wire}\n                  />\n                })\n              }\n\n            }\n\n          }\n\n          ret.push(<Form.Item key={source.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n\n        }\n        else {\n          if (source.$_nested === true) {\n            const child = [];\n            follower(source, inputPtr, child, lineKey);\n\n            ret.push(<div key={\"render.\"+source.$_wire} className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$doc}>\n                {child}\n              </Card>\n            </div>);\n          }\n          else {\n            const TypeRender = item.$type.Render;\n            if (TypeRender) {\n              ret.push(<TypeRender\n                schema={source}\n                value={inputPtr}\n                key={\"render.\"+source.$_wire}\n              />);\n            }\n          }\n        }\n      });\n      return (ret);\n    };\n\n    const ret = [];\n    follower(this.schema.handler.schema, input, ret);\n    return (ret);\n  }\n\n  render() {\n    var layout = {};\n\n    if (this.state.layout === 'horizontal') {\n      layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n      }\n    }\n    return (<Form\n      layout={this.state.layout}\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\n\n"],"names":["RecycledComponent","props","context","updater","state","cycle","componentDidUpdate","changed","a","ret","setState","first","React","Component","FieldifyTypeForm","schema","value","verify","feedback","status","options","isInjected","onChange","onError","help","$help","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","error","message","render","children","Form","$doc","$required","marginBottom","sm","FieldifyTypeRender","injected","subRender","width","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","pNew","pOld","key","o","n","setup","prev","p","configure","changeIt","change","Object","assign","StringForm","Input","placeholder","target","TypeForm","StringRender","TypeRender","StringInfo","Tag","color","Icon","TypeInfo","StringBuilder","minSize","maxSize","Space","InputNumber","TypeBuilder","code","types","String","description","Info","Builder","Render","TString","NameForm","result","from","setField","Row","Col","last","NameInfo","NameRender","getDerivedStateFromProps","final","trim","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","MailOutlined","EmailRender","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberRender","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxBuilder","SelectForm","items","updateItems","push","Select","SelectInfo","SelectRender","ptr","SelectBuilder","ObjectClass","fieldifyType","ArrayClass","configuration","min","$type","max","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","Modal","bind","Alert","Table","total","length","pageSize","hideOnSinglePage","KVInfo","KVRender","KVBuilder","KV","Array","FieldifySchema","name","resolver","Types","compile","FieldifySchemaForm","formRef","createRef","rawSchema","rawInput","FieldifyInput","setValue","inputValue","getValue","reactive","update","references","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","root","follower","schematized","utils","orderedRead","index","item","source","isArray","schematizedSrc","$_key","sourceSchematized","inputPtr","lineKey","$_array","inputPtr2","$array","$_nested","child","form","Button","ref","$_wire","Card","$_access","handlerSchematized","allTypes","allTypesNoArray","baseSchema","$position","doc","position","$default","acceptedTypes","FieldifySchemaBuilderModal","currentSchema","visible","edition","original","initialPath","val","required","read","$read","write","$write","content","driveSchema","force","Type","currentType","TypeObject","formChanged","handleOK","nvalue","split","pop","npath","join","$key","$content","no","getNO","nestedObject","onOk","oldPath","newPath","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","ex","itemChanged","arg","lineup","getLineup","removeLineup","setLineup","notification","success","modalContent","itemRemove","handlingEdit","self","fieldify2antDataTable","wire","current","$_path","composite","Tooltip","ObjectIcon","ArrayIcon","Popconfirm","sds","defaultExpandAllRows","FieldifySchemaRender","Schema"],"mappings":"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"}