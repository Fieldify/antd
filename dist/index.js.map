{"version":3,"file":"index.js","sources":["../src/lib/TypeForm.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/Select.js","../src/Types/Object.js","../src/Types/Array.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types.js","../src/Schema/Schema.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n\n    if (props.verify === true) {\n      this.verify(props.value, (ret) => {\n        this.state = { ...this.state, ...ret }\n      })\n    }\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props !== props) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n\n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      help: this.schema.$help\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) return (state)\n\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        \n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (!this.schema || this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input placeholder=\"Checkbox of characters\" />\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Checkbox min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm\n}\n\n\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ObjectClass extends fieldifyType {\n\n\n}\n\n\nexport default {\n  code: \"Object\",\n  description: \"Nested Sub Object\",\n  class: ObjectClass\n}\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ArrayClass extends fieldifyType {\n  configuration () {\n    return ({\n      min: {\n        $doc: 'Minimum of items',\n        $required: false,\n        $type: 'Number'\n      },\n      max: {\n        $doc: 'Maximun of items',\n        $required: false,\n        $type: 'Number'\n      }\n    })\n  }\n\n}\n\n\nexport default {\n  code: \"Array\",\n  description: \"Array\",\n  class: ArrayClass\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types, input as FieldifyInput } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport Select from \"./Types/Select\"\nimport Object from \"./Types/Object\"\nimport Array from \"./Types/Array\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Checkbox,\n  Object,\n  Array,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  compile(schema) {\n    // process normal compilation\n    super.compile(schema);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nexport class FieldifySchemaForm extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true);\n  }\n\n  componentDidUpdate(props, state) {\n    if(props.schema !== this.schema || props.input !== this.input) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props, first) {\n    const state = {}\n\n    this.schema = props.schema;\n    this.input = props.input;\n\n    if (!this.input || !(typeof props.input === \"object\")) {\n      this.input = new FieldifyInput(this.schema)\n    }\n\n    state.input = this.input.getValue()\n    state.verify = props.verify||false\n\n    state.reactive = this.update(state.input, state.verify);\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    return (state)\n  }\n\n  clickAddArray(line) {\n    this.input.set(line)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value,\n      reactive: this.update(_value, false)\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.input.remove(line)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value,\n      reactive: this.update(_value, false)\n    })\n  }\n\n  setValue(line, value) {\n    this.input.set(line, value)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value\n    })\n  }\n\n  input(input, verify) {\n    // const state = {\n    //   verify,\n    //   input\n    // }    \n    // state.reactive = this.update(input, verify)\n    // this.setState(state)\n  }\n\n  update(input, verify) {\n    const follower = (schema, input, ret, line) => {\n      line = line || \"\"\n\n      utils.orderedRead(schema, (index, item) => {\n        const inputPtr = input ? input[item.$_key] : null;\n        const lineKey = line + \".\" + item.$_key;\n\n        // check if the item is hidden\n        if (item.hidden === true)\n          return;\n\n        // ARRAY\n        if (Array.isArray(item)) {\n          const source = { ...item[0] };\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            },\n            {\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            },\n          ];\n          const dataSource = []\n\n          /*\n           * Is an array with non nested schema inside\n           */\n          if (source.$_array === true && source.$_nested !== true) {\n\n            delete source.$doc; // source is cloned\n            const TypeForm = source.$type.Form;\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[item.$_key] = [];\n              inputPtr2 = input[item.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              dataSource.push({\n                key,\n                form: <TypeForm\n                  schema={source}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n\n          }\n          /*\n           * Is an array with nested schema inside\n           */\n          else if (source.$_array === true && source.$_nested === true) {\n            var inputPtr2 = input[item.$_key]\n\n            // console.log(\"Schema has nested array\", item.$_wire, item.$_key, verify, source, input[item.$_key], input)\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[item.$_key] = [];\n\n            // console.log(\"Array nested\", min, min - inputPtr2.length, inputPtr2)\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            // very special case for field where there is subfield\n            if (item[0].$_schematized === true) {\n              delete source.$doc; // source is cloned\n              const TypeForm = source.$type.Form;\n\n              for (var a = 0; a < inputPtr2.length; a++) {\n                const value = inputPtr2[a];\n                const key = lineKey + \".\" + a\n\n                dataSource.push({\n                  key,\n                  form: <TypeForm\n                    schema={source}\n                    value={value}\n                    verify={verify}\n                    user={this.props.user}\n                    onChange={(schema, value) => this.setValue(key, value)}\n                    isInjected={true}\n                    // reference errors\n                    onError={(error, message) => {\n                      if (error === true) {\n                        this.references[key] = message;\n                      }\n                      else {\n                        const ref = this.references[key];\n                        if (ref) {\n                          delete this.references[key];\n                        }\n                      }\n                    }}\n                  />,\n                  actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                    <span><DeleteIcon /></span>\n                  </Button>\n                })\n              }\n            }\n            else {\n              for (var a = 0; a < inputPtr2.length; a++) {\n                const value = inputPtr2[a];\n                const key = lineKey + \".\" + a\n\n                const child = [];\n                follower(item[0], value, child, key);\n\n                dataSource.push({\n                  key,\n                  form: child,\n                  actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                    <span><DeleteIcon /></span>\n                  </Button>\n                })\n              }\n            }\n\n          }\n\n          ret.push(<Form.Item key={item.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                  <span><PlusIcon /></span>\n                </span>\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n        }\n        // OBJECT\n        else if (typeof item === \"object\" && !item.$type) {\n          const child = [];\n          follower(item, inputPtr, child, lineKey);\n          ret.push(<div key={item.$_wire} className=\"ant-form-item\">\n            <Card size=\"small\" title={item.$doc}>\n              {child}\n            </Card>\n          </div>);\n        }\n        // LEAF\n        else {\n          const TypeForm = item.$type.Form;\n\n          ret.push(<TypeForm\n            schema={item}\n            value={inputPtr}\n            key={item.$_wire}\n            verify={verify}\n            user={this.props.user}\n            onChange={(schema, value) => this.setValue(lineKey, value)}\n\n            // reference errors\n            onError={(error, message) => {\n              if (error === true) {\n                this.references[item.$_key] = message;\n              }\n              else {\n                const ref = this.references[item.$_key];\n                if (ref) {\n                  delete this.references[item.$_key];\n                }\n              }\n            }}\n          />);\n        }\n      });\n      return (ret);\n    };\n\n\n    const ret = [];\n    follower(this.schema.handler.schema, input, ret);\n    return (ret);\n  }\n\n  render() {\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Form\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n// build all available types\nconst allTypes = {}\nconst allTypesNoArray = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n  if (a !== \"Array\") {\n    allTypesNoArray[a] = Types[a].description\n  }\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true,\n    $position: 10\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: \"Select\",\n    $required: true,\n    $options: {\n      items: allTypes\n    },\n    $position: 11\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: false,\n    $type: \"String\",\n    $position: 22\n  },\n  position: {\n    $doc: \"Position in the serie\",\n    $required: false,\n    $type: \"Number\",\n    $default: 0,\n    $options: {\n      acceptedTypes: \"integer\"\n    },\n    $position: 23\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n    // here we have 3 cases\n    // normal case = $_array !== true && $_nested !== true\n    // nested in array = $_array === true && $_nested === true\n    // normal in array = $_array === true && $_nested !== true\n    // single nested = $_array !== true && $_nested === true\n\n    const state = {\n      edition: false,\n      original: props.value,\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user,\n      verify: false\n    };\n\n    if (state.user && state.user.$_wire) {\n      state.initialPath = state.user.$_wire;\n    }\n    else state.initialPath = '';\n\n    if (props.value) {\n      const val = props.value;\n\n      state.edition = true;\n\n      // normal case\n      if (val.$_array !== true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // nested in array\n      else if (val.$_array === true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // normal in array\n      else if (val.$_array === true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: typeof val.$type === \"string\" ? val.$type : val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // special handle for objects\n      else if (val.$_array !== true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n    }\n    // single addition\n    else {\n      // nothing to set\n      state.value = {}\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    return (state)\n  }\n\n  driveSchema(state, force) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n\n      // special cases for array \n      if (value.type === \"Array\") {\n        this.currentSchema.content = {\n          $doc: \"Item content type\",\n          $type: \"Select\",\n          $required: true,\n          $options: {\n            default: value.content || \"Object\",\n            items: allTypesNoArray\n          },\n          $position: 12\n        }\n      }\n\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      state.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else if (!state.schema || force === true) {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n\n  }\n\n  handleOK() {\n    this.state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"red\"\n        state.form.state = \"Error\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n\n        this.setState(state)\n\n        // get the current input values \n        const value = this.state.input.getValue()\n        var nvalue = {}\n\n        // rename all root value with $\n        for (var key in value) nvalue['$' + key] = value[key]\n        \n        // we will save the last path in order to reconstruct the field name\n        const source = this.state.initialPath.split('.')\n        source.pop()\n        source.push(value.key)\n        const npath = source.join('.')\n        delete nvalue.$key;\n        \n        // because object and array are virtualized in the builder \n        // then we need to remap the item with the correct schema underlining\n        \n        if (nvalue.$type === \"Array\" && nvalue.$content === \"Object\") {\n          delete nvalue.$type;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // normal in array\n        else if (nvalue.$type === \"Array\" && nvalue.$content !== \"Object\") {\n          nvalue.$type = nvalue.$content;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // special handle for objects\n        else if (nvalue.$type === \"Object\") {\n          delete nvalue.$type;\n        }\n        \n        if(this.state.edition === true) {\n          this.props.onOk(({\n            edition: true,\n            oldPath: this.state.initialPath,\n            newPath: npath,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n        else {\n          this.props.onOk(({\n            edition: false,\n            newPath: this.state.initialPath+\".\"+value.key,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n      }\n    })\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={this.handleOK.bind(this)}\n      onCancel={onCancel}\n    >\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.state.schema}\n        input={this.state.input}\n        user={this.props.user}\n        verify={this.state.verify}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.cycle(props, true);\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { }\n\n    if (this.props.schema !== props.schema) {\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n\n  cycle(props, first) {\n    const state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.onChange = ()=>{}\n    if(props.onChange) this.onChange = props.onChange\n\n    this.schema = props.schema;\n\n    state.schemaDataSource = this.updateDataSource()\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    return(state)\n  }\n\n  fireOnChange() {\n    const ex = this.schema.export()\n    this.schema.compile(ex)\n\n    // fire on change for exporting the new schema\n    this.onChange(ex)\n  }\n\n  itemChanged(arg) {\n    if (arg.edition === true) {\n      const lineup = this.props.schema.getLineup(arg.oldPath);\n\n      // delete org\n      this.props.schema.removeLineup(arg.oldPath)\n\n      // put new\n      this.props.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field updated\",\n        description: `Field at ${arg.oldPath} has been successfully updated`\n      })\n    }\n\n    // manage addition\n    else {\n      // just put the new one\n      this.props.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field added\",\n        description: `Field at ${arg.newPath} has been successfully added`\n      })\n    }\n\n    this.fireOnChange();\n\n    this.setState({\n      modal: false,\n      modalContent: null,\n      modalUser: null,\n      schemaDataSource: this.updateDataSource()\n    });\n  }\n\n  itemRemove(item) {\n    this.props.schema.removeLineup(item.$_wire);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource()\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_wire} has been successfully removed`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n\n    const lineup = this.props.schema.getLineup(path) || this.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: null, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  handlingEdit(item) {\n    const path = item.$_wire || \".\";\n\n    const lineup = this.props.schema.getLineup(path) || this.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: item, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  updateDataSource() {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        var path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if (Array.isArray(item)) {\n          path = wire + \".\" + item[0].$_key;\n          item[0].$_path = path;\n\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          current.push({\n            ptr: item[0],\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item[0].$_key}</strong>\n            </div>,\n            doc: item[0].$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item[0])} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item[0])}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if (typeof item === \"object\" && !item.$type) {\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else if (item.$type) {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (this.schema) {\n      data = fieldify2antDataTable(this.schema.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}\n","\nimport React from 'react'\n\nimport { iterator, assign } from \"fieldify\"\n\n\nimport { Space, Radio, Button } from \"antd\";\n\n\nexport { FieldifySchemaBuilder } from \"./Schema/Builder\"\nexport { FieldifySchemaForm } from \"./Schema/Form\"\n\nexport { FieldifySchema } from \"./Schema/Schema\"\n\nexport class FieldifySchemaRender extends React.Component {\n\n  render() {\n    return (<div>test</div>)\n  }\n}\n\n\n\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\n\n"],"names":["FieldifyTypeForm","props","state","cycle","verify","value","ret","componentDidUpdate","setState","schema","feedback","status","help","$help","isInjected","onChange","onError","options","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","error","message","render","children","React","Form","$doc","$required","marginBottom","sm","Component","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","pNew","pOld","changed","key","o","n","setup","prev","a","p","configure","changeIt","change","Object","assign","StringForm","Input","placeholder","target","width","TypeForm","StringInfo","Tag","color","Icon","TypeInfo","StringBuilder","minSize","maxSize","Space","InputNumber","TypeBuilder","code","types","String","description","Info","Builder","TString","NameForm","result","from","setField","Row","Col","first","last","NameInfo","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","MailOutlined","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxBuilder","SelectForm","items","updateItems","push","Select","SelectInfo","SelectBuilder","ObjectClass","fieldifyType","ArrayClass","configuration","min","$type","max","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","Modal","bind","Alert","Table","total","length","pageSize","hideOnSinglePage","KVInfo","KVBuilder","KV","Array","FieldifySchema","name","resolver","Types","compile","FieldifySchemaForm","formRef","createRef","FieldifyInput","getValue","reactive","update","references","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","setValue","follower","utils","orderedRead","index","item","inputPtr","$_key","lineKey","hidden","isArray","source","inputPtr2","$array","$_array","$_nested","form","ref","Button","$_schematized","child","$_wire","Card","$_access","allTypes","allTypesNoArray","baseSchema","$position","doc","position","$default","acceptedTypes","FieldifySchemaBuilderModal","currentSchema","visible","edition","original","initialPath","val","required","read","$read","write","$write","content","driveSchema","force","Type","currentType","TypeObject","formChanged","handleOK","nvalue","split","pop","npath","join","$key","$content","onOk","oldPath","newPath","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","ex","itemChanged","arg","lineup","getLineup","removeLineup","setLineup","notification","success","modalContent","itemRemove","handlingEdit","self","fieldify2antDataTable","wire","current","$_path","composite","Tooltip","ObjectIcon","ptr","ArrayIcon","Popconfirm","sds","defaultExpandAllRows","FieldifySchemaRender","Schema"],"mappings":"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"}