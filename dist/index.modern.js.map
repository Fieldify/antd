{"version":3,"file":"index.modern.js","sources":["../src/lib/TypeForm.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/Select.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types.js","../src/Schema/Schema.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n\n    if (props.verify === true) {\n      this.verify(props.value, (ret) => {\n        this.state = { ...this.state, ...ret }\n      })\n    }\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props !== props) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n\n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      help: this.schema.$help\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) return (state)\n\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        \n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (!this.schema || this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input placeholder=\"Checkbox of characters\" />\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Checkbox min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types, input as FieldifyInput } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport Select from \"./Types/Select\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Checkbox,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  compile(schema) {\n    // process normal compilation\n    super.compile(schema);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nexport class FieldifySchemaForm extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true);\n  }\n\n  componentDidUpdate(props, state) {\n    if(props.schema !== this.schema || props.input !== this.input) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props, first) {\n    const state = {}\n\n    this.schema = props.schema;\n    this.input = props.input;\n\n    if (!this.input || !(typeof props.input === \"object\")) {\n      this.input = new FieldifyInput(this.schema)\n    }\n\n    state.input = this.input.getValue()\n    state.verify = props.verify||false\n\n    state.reactive = this.update(state.input, state.verify);\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    return (state)\n  }\n\n  clickAddArray(line) {\n    this.input.set(line)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value,\n      reactive: this.update(_value, false)\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.input.remove(line)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value,\n      reactive: this.update(_value, false)\n    })\n  }\n\n  setValue(line, value) {\n    this.input.set(line, value)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value\n    })\n  }\n\n  input(input, verify) {\n    // const state = {\n    //   verify,\n    //   input\n    // }    \n    // state.reactive = this.update(input, verify)\n    // this.setState(state)\n  }\n\n  update(input, verify) {\n    const follower = (schema, input, ret, line) => {\n      line = line || \"\"\n\n      utils.orderedRead(schema, (index, item) => {\n        const inputPtr = input ? input[item.$_key] : null;\n        const lineKey = line + \".\" + item.$_key;\n\n        // check if the item is hidden\n        if (item.hidden === true)\n          return;\n\n        // ARRAY\n        if (Array.isArray(item)) {\n          const source = { ...item[0] };\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            },\n            {\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            },\n          ];\n          const dataSource = []\n\n          /*\n           * Is an array with non nested schema inside\n           */\n          if (source.$_array === true && source.$_nested !== true) {\n\n            delete source.$doc; // source is cloned\n            const TypeForm = source.$type.Form;\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[item.$_key] = [];\n              inputPtr2 = input[item.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              dataSource.push({\n                key,\n                form: <TypeForm\n                  schema={source}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n\n          }\n          /*\n           * Is an array with nested schema inside\n           */\n          else if (source.$_array === true && source.$_nested === true) {\n            var inputPtr2 = input[item.$_key]\n\n            // console.log(\"Schema has nested array\", item.$_wire, item.$_key, verify, source, input[item.$_key], input)\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[item.$_key] = [];\n\n            // console.log(\"Array nested\", min, min - inputPtr2.length, inputPtr2)\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            // very special case for field where there is subfield\n            if (item[0].$_schematized === true) {\n              delete source.$doc; // source is cloned\n              const TypeForm = source.$type.Form;\n\n              for (var a = 0; a < inputPtr2.length; a++) {\n                const value = inputPtr2[a];\n                const key = lineKey + \".\" + a\n\n                dataSource.push({\n                  key,\n                  form: <TypeForm\n                    schema={source}\n                    value={value}\n                    verify={verify}\n                    user={this.props.user}\n                    onChange={(schema, value) => this.setValue(key, value)}\n                    isInjected={true}\n                    // reference errors\n                    onError={(error, message) => {\n                      if (error === true) {\n                        this.references[key] = message;\n                      }\n                      else {\n                        const ref = this.references[key];\n                        if (ref) {\n                          delete this.references[key];\n                        }\n                      }\n                    }}\n                  />,\n                  actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                    <span><DeleteIcon /></span>\n                  </Button>\n                })\n              }\n            }\n            else {\n              for (var a = 0; a < inputPtr2.length; a++) {\n                const value = inputPtr2[a];\n                const key = lineKey + \".\" + a\n\n                const child = [];\n                follower(item.$_ptr[0], value, child, key);\n\n                dataSource.push({\n                  key,\n                  form: child,\n                  actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                    <span><DeleteIcon /></span>\n                  </Button>\n                })\n              }\n            }\n\n          }\n\n          ret.push(<Form.Item key={item.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                  <span><PlusIcon /></span>\n                </span>\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n        }\n        // OBJECT\n        else if (typeof item === \"object\" && !item.$type) {\n          const child = [];\n          follower(item.$_ptr, inputPtr, child, lineKey);\n          ret.push(<div key={item.$_wire} className=\"ant-form-item\">\n            <Card size=\"small\" title={item.$doc}>\n              {child}\n            </Card>\n          </div>);\n        }\n        // LEAF\n        else {\n          const TypeForm = item.$type.Form;\n\n          ret.push(<TypeForm\n            schema={item}\n            value={inputPtr}\n            key={item.$_wire}\n            verify={verify}\n            user={this.props.user}\n            onChange={(schema, value) => this.setValue(lineKey, value)}\n\n            // reference errors\n            onError={(error, message) => {\n              if (error === true) {\n                this.references[item.$_key] = message;\n              }\n              else {\n                const ref = this.references[item.$_key];\n                if (ref) {\n                  delete this.references[item.$_key];\n                }\n              }\n            }}\n          />);\n        }\n      });\n      return (ret);\n    };\n\n\n    const ret = [];\n    follower(this.schema.handler.schema, input, ret);\n    return (ret);\n  }\n\n  render() {\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Form\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\n\n// build all available types\nconst allTypes = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: Types.Select,\n    $required: true,\n    $options: {\n      items: allTypes\n    }\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: true,\n    $type: Types.String\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n\n    const state = {\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user\n    };\n\n    if (props.value) {\n      state.value = {\n        key: props.value.$_key,\n        type: props.value.$type.code,\n        doc: props.value.$doc,\n        options: props.value.$options,\n      }\n    }\n    else {\n      state.value = {}\n    }\n\n    // const Type = Types[state.value.type]\n    // if (Type) {\n    //   // create a fake tmp type\n    //   const TypeObject = new Type.class\n\n    //   const configuration = TypeObject.configuration()\n\n    //   this.currentSchema = { ...baseSchema }\n    //   if (configuration) this.currentSchema.options = {\n    //     ...configuration,\n    //     $doc: \"Type configuration\"\n    //   };\n\n    //   // const upSchema = Type.\n    //   this.currentType = Type;\n    // }\n\n    // state.schema = new FieldifySchema(\"modal\");\n    // state.schema.compile(this.currentSchema);\n    // state.input= new FieldifyInput(state.schema)\n\n    // if (props.value) this.input.setValue(state.value)\n    this.driveSchema(state)\n\n    state.input.setValue(state.value)\n\n    return (state)\n  }\n\n  driveSchema(state) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      this.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else if(!state.schema) {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n\n\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n    console.log(\"state\", state)\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n    console.log(\"formChanged\", value, state)\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={onOk}\n      onCancel={onCancel}\n    >\n\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.state.schema}\n        input={this.state.input}\n        user={this.props.user}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.schema = props.schema;\n\n    this.state.schemaDataSource = this.updateDataSource()\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add Field <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n  }\n\n  fireOnChange() {\n\n  }\n\n  itemChanged(arg) {\n    console.log(\"itemChanged\", arg);\n  }\n\n  itemRemove(item) {\n    this.props.schema.removeLineup(item.$_path);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource()\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_path} has been removed successfully`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n    const lineup = this.props.schema.getLineup(path) || this.schema.handler.schema;\n    console.log(\"handing add\", path, lineup);\n    this.setState({ modal: true, modalContent: null, modalUser: lineup });\n  }\n\n  handlingEdit(item) {\n    console.log(\"handing edit\", item, Array.isArray(item));\n    this.setState({ modal: true, modalContent: item });\n  }\n\n  updateDataSource() {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        const path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if (Array.isArray(item)) {\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if (typeof item === \"object\" && !item.$type) {\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else if (item.$type) {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (this.schema) {\n      data = fieldify2antDataTable(this.schema.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}\n","\nimport React from 'react'\n\nimport { iterator, assign } from \"fieldify\"\n\n\nimport { Space, Radio, Button } from \"antd\";\n\n\nexport { FieldifySchemaBuilder } from \"./Schema/Builder\"\nexport { FieldifySchemaForm } from \"./Schema/Form\"\n\nexport { FieldifySchema } from \"./Schema/Schema\"\n\nexport class FieldifySchemaRender extends React.Component {\n\n  render() {\n    return (<div>test</div>)\n  }\n}\n\n\n\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\n\n"],"names":["FieldifyTypeForm","Component","constructor","props","state","cycle","verify","value","ret","componentDidUpdate","setState","schema","feedback","status","help","$help","isInjected","onChange","onError","options","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","error","message","render","children","$doc","$required","marginBottom","sm","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","default","pNew","pOld","changed","key","o","n","setup","prev","a","p","configure","changeIt","change","Object","assign","StringForm","TypeForm","Input","placeholder","target","width","StringInfo","TypeInfo","color","Icon","StringBuilder","TypeBuilder","minSize","maxSize","code","types","String","description","class","Info","Builder","Form","TString","NameForm","result","from","setField","first","last","NameInfo","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxBuilder","SelectForm","items","updateItems","push","Select","SelectInfo","SelectBuilder","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","bind","total","length","pageSize","hideOnSinglePage","KVInfo","KVBuilder","KV","FieldifySchema","name","resolver","Types","compile","FieldifySchemaForm","React","formRef","createRef","FieldifyInput","getValue","reactive","update","references","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","setValue","follower","utils","orderedRead","index","item","inputPtr","$_key","lineKey","hidden","Array","isArray","source","inputPtr2","$array","min","$_array","$_nested","$type","form","ref","$_schematized","child","$_ptr","$_wire","$_access","allTypes","baseSchema","doc","FieldifySchemaBuilderModal","currentSchema","visible","driveSchema","Type","currentType","TypeObject","configuration","formChanged","console","log","onOk","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","itemChanged","arg","itemRemove","removeLineup","$_path","notification","success","lineup","getLineup","modalContent","handlingEdit","self","fieldify2antDataTable","wire","current","composite","ObjectIcon","ptr","ArrayIcon","sds","defaultExpandAllRows","FieldifySchemaRender","Schema"],"mappings":"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"}