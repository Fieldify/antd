{"version":3,"file":"index.modern.js","sources":["../src/lib/TypeForm.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/Select.js","../src/Types/Object.js","../src/Types/Array.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types.js","../src/Schema/Schema.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n\n    if (props.verify === true) {\n      this.verify(props.value, (ret) => {\n        this.state = { ...this.state, ...ret }\n      })\n    }\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props !== props) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n\n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      help: this.schema.$help\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) return (state)\n\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        \n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (!this.schema || this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input placeholder=\"Checkbox of characters\" />\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Checkbox min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm\n}\n\n\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ObjectClass extends fieldifyType {\n\n\n}\n\n\nexport default {\n  code: \"Object\",\n  description: \"Nested Sub Object\",\n  class: ObjectClass\n}\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ArrayClass extends fieldifyType {\n  configuration () {\n    return ({\n      min: {\n        $doc: 'Minimum of items',\n        $required: false,\n        $type: 'Number'\n      },\n      max: {\n        $doc: 'Maximun of items',\n        $required: false,\n        $type: 'Number'\n      }\n    })\n  }\n\n}\n\n\nexport default {\n  code: \"Array\",\n  description: \"Array\",\n  class: ArrayClass\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types, input as FieldifyInput } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport Select from \"./Types/Select\"\nimport Object from \"./Types/Object\"\nimport Array from \"./Types/Array\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Checkbox,\n  Object,\n  Array,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  compile(schema) {\n    // process normal compilation\n    super.compile(schema);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nexport class FieldifySchemaForm extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true);\n  }\n\n  componentDidUpdate(props, state) {\n    if(props.schema !== this.schema || props.input !== this.input) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props, first) {\n    const state = {}\n\n    this.schema = props.schema;\n    this.input = props.input;\n\n    if (!this.input || !(typeof props.input === \"object\")) {\n      this.input = new FieldifyInput(this.schema)\n    }\n\n    state.input = this.input.getValue()\n    state.verify = props.verify||false\n\n    state.reactive = this.update(state.input, state.verify);\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    return (state)\n  }\n\n  clickAddArray(line) {\n    this.input.set(line)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value,\n      reactive: this.update(_value, false)\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.input.remove(line)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value,\n      reactive: this.update(_value, false)\n    })\n  }\n\n  setValue(line, value) {\n    this.input.set(line, value)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value\n    })\n  }\n\n  input(input, verify) {\n    // const state = {\n    //   verify,\n    //   input\n    // }    \n    // state.reactive = this.update(input, verify)\n    // this.setState(state)\n  }\n\n  update(input, verify) {\n    const follower = (schema, input, ret, line) => {\n      line = line || \"\"\n\n      utils.orderedRead(schema, (index, item) => {\n        const inputPtr = input ? input[item.$_key] : null;\n        const lineKey = line + \".\" + item.$_key;\n\n        // check if the item is hidden\n        if (item.hidden === true)\n          return;\n\n        // ARRAY\n        if (Array.isArray(item)) {\n          const source = { ...item[0] };\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            },\n            {\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            },\n          ];\n          const dataSource = []\n\n          /*\n           * Is an array with non nested schema inside\n           */\n          if (source.$_array === true && source.$_nested !== true) {\n\n            delete source.$doc; // source is cloned\n            const TypeForm = source.$type.Form;\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[item.$_key] = [];\n              inputPtr2 = input[item.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              dataSource.push({\n                key,\n                form: <TypeForm\n                  schema={source}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n\n          }\n          /*\n           * Is an array with nested schema inside\n           */\n          else if (source.$_array === true && source.$_nested === true) {\n            var inputPtr2 = input[item.$_key]\n\n            // console.log(\"Schema has nested array\", item.$_wire, item.$_key, verify, source, input[item.$_key], input)\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[item.$_key] = [];\n\n            // console.log(\"Array nested\", min, min - inputPtr2.length, inputPtr2)\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            // very special case for field where there is subfield\n            if (item[0].$_schematized === true) {\n              delete source.$doc; // source is cloned\n              const TypeForm = source.$type.Form;\n\n              for (var a = 0; a < inputPtr2.length; a++) {\n                const value = inputPtr2[a];\n                const key = lineKey + \".\" + a\n\n                dataSource.push({\n                  key,\n                  form: <TypeForm\n                    schema={source}\n                    value={value}\n                    verify={verify}\n                    user={this.props.user}\n                    onChange={(schema, value) => this.setValue(key, value)}\n                    isInjected={true}\n                    // reference errors\n                    onError={(error, message) => {\n                      if (error === true) {\n                        this.references[key] = message;\n                      }\n                      else {\n                        const ref = this.references[key];\n                        if (ref) {\n                          delete this.references[key];\n                        }\n                      }\n                    }}\n                  />,\n                  actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                    <span><DeleteIcon /></span>\n                  </Button>\n                })\n              }\n            }\n            else {\n              for (var a = 0; a < inputPtr2.length; a++) {\n                const value = inputPtr2[a];\n                const key = lineKey + \".\" + a\n\n                const child = [];\n                follower(item[0], value, child, key);\n\n                dataSource.push({\n                  key,\n                  form: child,\n                  actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                    <span><DeleteIcon /></span>\n                  </Button>\n                })\n              }\n            }\n\n          }\n\n          ret.push(<Form.Item key={item.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                  <span><PlusIcon /></span>\n                </span>\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n        }\n        // OBJECT\n        else if (typeof item === \"object\" && !item.$type) {\n          const child = [];\n          follower(item, inputPtr, child, lineKey);\n          ret.push(<div key={item.$_wire} className=\"ant-form-item\">\n            <Card size=\"small\" title={item.$doc}>\n              {child}\n            </Card>\n          </div>);\n        }\n        // LEAF\n        else {\n          const TypeForm = item.$type.Form;\n\n          ret.push(<TypeForm\n            schema={item}\n            value={inputPtr}\n            key={item.$_wire}\n            verify={verify}\n            user={this.props.user}\n            onChange={(schema, value) => this.setValue(lineKey, value)}\n\n            // reference errors\n            onError={(error, message) => {\n              if (error === true) {\n                this.references[item.$_key] = message;\n              }\n              else {\n                const ref = this.references[item.$_key];\n                if (ref) {\n                  delete this.references[item.$_key];\n                }\n              }\n            }}\n          />);\n        }\n      });\n      return (ret);\n    };\n\n\n    const ret = [];\n    follower(this.schema.handler.schema, input, ret);\n    return (ret);\n  }\n\n  render() {\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Form\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n// build all available types\nconst allTypes = {}\nconst allTypesNoArray = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n  if (a !== \"Array\") {\n    allTypesNoArray[a] = Types[a].description\n  }\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true,\n    $position: 10\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: \"Select\",\n    $required: true,\n    $options: {\n      items: allTypes\n    },\n    $position: 11\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: false,\n    $type: \"String\",\n    $position: 22\n  },\n  position: {\n    $doc: \"Position in the serie\",\n    $required: false,\n    $type: \"Number\",\n    $default: 0,\n    $options: {\n      acceptedTypes: \"integer\"\n    },\n    $position: 23\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n    // here we have 3 cases\n    // normal case = $_array !== true && $_nested !== true\n    // nested in array = $_array === true && $_nested === true\n    // normal in array = $_array === true && $_nested !== true\n    // single nested = $_array !== true && $_nested === true\n\n    const state = {\n      edition: false,\n      original: props.value,\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user,\n      verify: false\n    };\n\n    if (state.user && state.user.$_wire) {\n      state.initialPath = state.user.$_wire;\n    }\n    else state.initialPath = '';\n\n    if (props.value) {\n      const val = props.value;\n\n      state.edition = true;\n\n      // normal case\n      if (val.$_array !== true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // nested in array\n      else if (val.$_array === true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // normal in array\n      else if (val.$_array === true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: typeof val.$type === \"string\" ? val.$type : val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // special handle for objects\n      else if (val.$_array !== true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n    }\n    // single addition\n    else {\n      // nothing to set\n      state.value = {}\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    return (state)\n  }\n\n  driveSchema(state, force) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n\n      // special cases for array \n      if (value.type === \"Array\") {\n        this.currentSchema.content = {\n          $doc: \"Item content type\",\n          $type: \"Select\",\n          $required: true,\n          $options: {\n            default: value.content || \"Object\",\n            items: allTypesNoArray\n          },\n          $position: 12\n        }\n      }\n\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      state.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else if (!state.schema || force === true) {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n\n  }\n\n  handleOK() {\n    this.state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"red\"\n        state.form.state = \"Error\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n\n        this.setState(state)\n\n        // get the current input values \n        const value = this.state.input.getValue()\n        var nvalue = {}\n\n        // rename all root value with $\n        for (var key in value) nvalue['$' + key] = value[key]\n        \n        // we will save the last path in order to reconstruct the field name\n        const source = this.state.initialPath.split('.')\n        source.pop()\n        source.push(value.key)\n        const npath = source.join('.')\n        delete nvalue.$key;\n        \n        // because object and array are virtualized in the builder \n        // then we need to remap the item with the correct schema underlining\n        \n        if (nvalue.$type === \"Array\" && nvalue.$content === \"Object\") {\n          delete nvalue.$type;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // normal in array\n        else if (nvalue.$type === \"Array\" && nvalue.$content !== \"Object\") {\n          nvalue.$type = nvalue.$content;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // special handle for objects\n        else if (nvalue.$type === \"Object\") {\n          delete nvalue.$type;\n        }\n        \n        if(this.state.edition === true) {\n          this.props.onOk(({\n            edition: true,\n            oldPath: this.state.initialPath,\n            newPath: npath,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n        else {\n          this.props.onOk(({\n            edition: false,\n            newPath: this.state.initialPath+\".\"+value.key,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n      }\n    })\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={this.handleOK.bind(this)}\n      onCancel={onCancel}\n    >\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.state.schema}\n        input={this.state.input}\n        user={this.props.user}\n        verify={this.state.verify}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.cycle(props, true);\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { }\n\n    if (this.props.schema !== props.schema) {\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n\n  cycle(props, first) {\n    const state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.onChange = ()=>{}\n    if(props.onChange) this.onChange = props.onChange\n\n    this.schema = props.schema;\n\n    state.schemaDataSource = this.updateDataSource()\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    return(state)\n  }\n\n  fireOnChange() {\n    const ex = this.schema.export()\n    this.schema.compile(ex)\n\n    // fire on change for exporting the new schema\n    this.onChange(ex)\n  }\n\n  itemChanged(arg) {\n    if (arg.edition === true) {\n      const lineup = this.props.schema.getLineup(arg.oldPath);\n\n      // delete org\n      this.props.schema.removeLineup(arg.oldPath)\n\n      // put new\n      this.props.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field updated\",\n        description: `Field at ${arg.oldPath} has been successfully updated`\n      })\n    }\n\n    // manage addition\n    else {\n      // just put the new one\n      this.props.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field added\",\n        description: `Field at ${arg.newPath} has been successfully added`\n      })\n    }\n\n    this.fireOnChange();\n\n    this.setState({\n      modal: false,\n      modalContent: null,\n      modalUser: null,\n      schemaDataSource: this.updateDataSource()\n    });\n  }\n\n  itemRemove(item) {\n    this.props.schema.removeLineup(item.$_wire);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource()\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_wire} has been successfully removed`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n\n    const lineup = this.props.schema.getLineup(path) || this.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: null, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  handlingEdit(item) {\n    const path = item.$_wire || \".\";\n\n    const lineup = this.props.schema.getLineup(path) || this.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: item, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  updateDataSource() {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        var path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if (Array.isArray(item)) {\n          path = wire + \".\" + item[0].$_key;\n          item[0].$_path = path;\n\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          current.push({\n            ptr: item[0],\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item[0].$_key}</strong>\n            </div>,\n            doc: item[0].$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item[0])} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item[0])}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if (typeof item === \"object\" && !item.$type) {\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else if (item.$type) {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (this.schema) {\n      data = fieldify2antDataTable(this.schema.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}\n","\nimport React from 'react'\n\nimport { iterator, assign } from \"fieldify\"\n\n\nimport { Space, Radio, Button } from \"antd\";\n\n\nexport { FieldifySchemaBuilder } from \"./Schema/Builder\"\nexport { FieldifySchemaForm } from \"./Schema/Form\"\n\nexport { FieldifySchema } from \"./Schema/Schema\"\n\nexport class FieldifySchemaRender extends React.Component {\n\n  render() {\n    return (<div>test</div>)\n  }\n}\n\n\n\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\n\n"],"names":["FieldifyTypeForm","Component","constructor","props","state","cycle","verify","value","ret","componentDidUpdate","setState","schema","feedback","status","help","$help","isInjected","onChange","onError","options","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","error","message","render","children","$doc","$required","marginBottom","sm","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","default","pNew","pOld","changed","key","o","n","setup","prev","a","p","configure","changeIt","change","Object","assign","StringForm","TypeForm","Input","placeholder","target","width","StringInfo","TypeInfo","color","Icon","StringBuilder","TypeBuilder","minSize","maxSize","code","types","String","description","class","Info","Builder","Form","TString","NameForm","result","from","setField","first","last","NameInfo","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxBuilder","SelectForm","items","updateItems","push","Select","SelectInfo","SelectBuilder","ObjectClass","fieldifyType","ArrayClass","configuration","min","$type","max","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","bind","total","length","pageSize","hideOnSinglePage","KVInfo","KVBuilder","KV","Array","FieldifySchema","name","resolver","Types","compile","FieldifySchemaForm","React","formRef","createRef","FieldifyInput","getValue","reactive","update","references","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","setValue","follower","utils","orderedRead","index","item","inputPtr","$_key","lineKey","hidden","isArray","source","inputPtr2","$array","$_array","$_nested","form","ref","$_schematized","child","$_wire","$_access","allTypes","allTypesNoArray","baseSchema","$position","doc","position","$default","acceptedTypes","FieldifySchemaBuilderModal","currentSchema","visible","edition","original","initialPath","val","required","read","$read","write","$write","content","driveSchema","force","Type","currentType","TypeObject","formChanged","handleOK","nvalue","split","pop","npath","join","$key","$content","onOk","oldPath","newPath","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","ex","export","itemChanged","arg","lineup","getLineup","removeLineup","setLineup","notification","success","modalContent","itemRemove","handlingEdit","self","fieldify2antDataTable","wire","current","$_path","composite","ObjectIcon","ptr","ArrayIcon","sds","defaultExpandAllRows","FieldifySchemaRender","Schema"],"mappings":"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"}