{"version":3,"file":"index.modern.js","sources":["../src/lib/TypeForm.js","../src/lib/TypeRender.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/Select.js","../src/Types/Object.js","../src/Types/Array.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types.js","../src/Schema/Schema.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema/Render.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props.schema !== props.schema) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n    \n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      options: {}\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) {\n      this.schema = {}\n      return (state)\n    }\n\n    state.help = this.schema.$help;\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n\n    // if (props.verify === true) {\n    //   this.verify(props.value, (ret) => {\n    //     this.state = { ...this.state, ...ret }\n    //   })\n    // }\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        \n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    if(!this.handler) {\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: \"No Handler on verifier\"\n      }))\n    }\n    \n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  Col,\n  Row,\n  Form,\n  Input\n} from \"antd\";\n\nexport default class FieldifyTypeRender extends RecycledComponent {\n\n  cycle(props) {\n    const state = {\n      schema: props.schema,\n      value: props.value,\n      injected: props.injected\n    }\n\n    return (state)\n  }\n\n  subRender(children) {\n\n    if(this.state.injected === true) {\n      return (\n        <Form.Item\n          label={this.state.schema.$doc}\n          hasFeedback={true}\n          validateStatus=\"success\"\n          style={{ marginBottom: \"0px\" }}\n          wrapperCol={{ sm: 24 }}\n        >\n          {children}\n        </Form.Item>\n      )\n    }\n    return (\n      <Form.Item\n        label={this.state.schema.$doc}\n        hasFeedback={true}\n        validateStatus=\"success\"\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n\n  render() {\n    return (this.subRender(\n      <div style={{ width: \"100%\" }}>\n        {this.state.value}\n      </div>\n    ));\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\n/* <div class=\"ant-form-item-control-input\">\n  <div class=\"ant-form-item-control-input-content\">\n    <input type=\"text\" class=\"ant-input\" value=\"vdvfsdvfdsvfds\" style=\"width: 100%;\">\n      </div><span class=\"ant-form-item-children-icon\">\n        <span role=\"img\" aria-label=\"check-circle\" class=\"anticon anticon-check-circle\">\n          <svg viewBox=\"64 64 896 896\" focusable=\"false\" class=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\">\n              </path>\n              </svg>\n              </span>\n              </span>\n              </div> */\n\n\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm,\n  Render: StringRender,\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(state.value && typeof state.value === \"object\") {\n      var final = \"\"\n\n      if(state.value.first) final += state.value.first\n      if(state.value.last) final += \" \"+state.value.last\n\n      state.value = final.trim()\n    }\n    return(state)\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n  Render: NameRender,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailRender extends TypeRender {\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm,\n  Render: EmailRender\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm,\n  Render: NumberRender\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input placeholder=\"Checkbox of characters\" />\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Checkbox min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(typeof state.value === \"string\") {\n\n      if(props.schema.$options && props.schema.$options.items) {\n        const ptr = props.schema.$options.items\n        if(ptr[state.value]) state.value = ptr[state.value]\n      }\n    }\n    return(state)\n  }\n\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm,\n  Render: SelectRender\n}\n\n\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ObjectClass extends fieldifyType {\n}\n\n\nexport default {\n  code: \"Object\",\n  description: \"Nested Sub Object\",\n  class: ObjectClass\n}\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\nclass ArrayClass extends fieldifyType {\n  configuration () {\n    return ({\n      min: {\n        $doc: 'Minimum of items',\n        $required: false,\n        $type: 'Number'\n      },\n      max: {\n        $doc: 'Maximun of items',\n        $required: false,\n        $type: 'Number'\n      }\n    })\n  }\n}\n\nexport default {\n  code: \"Array\",\n  description: \"Array\",\n  class: ArrayClass\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types, input as FieldifyInput } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVRender extends TypeRender {\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value\n      })\n    }\n    return (ds)\n  }\n\n\n  render() {\n    const columns = [\n      {\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        dataIndex: 'value',\n        key: 'value',\n      }\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.subRender(<div>\n      <Table\n        showHeader={false}\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm,\n  Render: KVRender\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport Select from \"./Types/Select\"\nimport Object from \"./Types/Object\"\nimport Array from \"./Types/Array\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Checkbox,\n  Object,\n  Array,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  compile(schema) {\n    // process normal compilation\n    super.compile(schema);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\n\nexport class FieldifySchemaForm extends RecycledComponent {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n\n  }\n\n  cycle(props, first) {\n\n    const state = {}\n\n    // compile the schema\n    state.rawSchema = props.schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(state.rawSchema)\n\n    // create an input instance\n    // console.log(\"rawInput\", state.rawInput === props.rawInput)\n    state.rawInput = props.input\n    state.input = new FieldifyInput(state.schema)\n    state.input.setValue(props.input)\n\n    state.inputValue = state.input.getValue()\n    state.verify = props.verify || false\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    state.reactive = this.update(state.schema, state.inputValue, state.verify);\n\n    return (state)\n  }\n\n  getValue() {\n    return (this.state.input.getValue())\n  }\n\n  clickAddArray(line) {\n    this.state.input.set(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      reactive: this.update(this.state.schema, _value, false)\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.state.input.remove(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      reactive: this.update(this.state.schema, _value, false)\n    })\n  }\n\n  setValue(line, value) {\n    if (!this.state.input) return;\n\n    this.state.input.set(line, value)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value\n    })\n  }\n\n  update(root, input, verify) {\n    const follower = (schema, schematized, input, ret, line) => {\n      line = line || \"\"\n\n      utils.orderedRead(schema, (index, item) => {\n\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        const schematizedSrc = schematized[source.$_key];\n        const sourceSchematized = { ...Array.isArray(schematizedSrc) ? schematizedSrc[0] : schematizedSrc };\n\n        const inputPtr = input ? input[source.$_key] : null;\n        const lineKey = line + \".\" + source.$_key;\n\n        if (source.$_array === true) {\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            },\n            {\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            },\n          ];\n          const dataSource = []\n\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          if (source.$_nested === true) {\n            var inputPtr2 = input[source.$_key]\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[source.$_key] = [];\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const child = [];\n              follower(source, sourceSchematized, value, child, key);\n\n              dataSource.push({\n                key,\n                form: child,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n          }\n          else if (source.$type) {\n            delete sourceSchematized.$doc; // source is cloned\n            const TypeForm = source.$type.Form;\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[item.$_key] = [];\n              inputPtr2 = input[item.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              dataSource.push({\n                key,\n                form: <TypeForm\n                  schema={sourceSchematized}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n          }\n\n          ret.push(<Form.Item key={source.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                {inputPtr2 ?\n                  <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                    <span><PlusIcon /></span>\n                  </span>\n                  : null}\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n\n        }\n        else {\n          if (source.$_nested === true) {\n            const child = [];\n            follower(source, sourceSchematized, inputPtr, child, lineKey);\n\n            ret.push(<div key={source.$_wire} className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$doc}>\n                {child}\n              </Card>\n            </div>);\n          }\n          else if (item.$type) {\n            const TypeForm = item.$type.Form;\n\n            ret.push(<TypeForm\n              schema={sourceSchematized}\n              value={inputPtr}\n              key={source.$_wire}\n              verify={verify}\n              user={this.props.user}\n              onChange={(schema, value) => this.setValue(lineKey, value)}\n\n              // reference errors\n              onError={(error, message) => {\n                if (error === true) {\n                  this.references[source.$_wire] = message;\n                }\n                else {\n                  const ref = this.references[source.$_wire];\n                  if (ref) {\n                    delete this.references[source.$_wire];\n                  }\n                }\n              }}\n            />);\n          }\n        }\n      });\n      return (ret);\n    };\n\n    const ret = [];\n    follower(\n      root.handler.schema,\n      root.handlerSchematized.schema,\n      input,\n      ret\n    );\n    return (ret);\n  }\n\n  render() {\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Form\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n// build all available types\nconst allTypes = {}\nconst allTypesNoArray = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n  if (a !== \"Array\") {\n    allTypesNoArray[a] = Types[a].description\n  }\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true,\n    $position: 10\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: \"Select\",\n    $required: true,\n    $options: {\n      items: allTypes\n    },\n    $position: 11\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: false,\n    $type: \"String\",\n    $position: 22\n  },\n  position: {\n    $doc: \"Position in the serie\",\n    $required: false,\n    $type: \"Number\",\n    $default: 0,\n    $options: {\n      acceptedTypes: \"integer\"\n    },\n    $position: 23\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n\n    // here we have 3 cases\n    // normal case = $_array !== true && $_nested !== true\n    // nested in array = $_array === true && $_nested === true\n    // normal in array = $_array === true && $_nested !== true\n    // single nested = $_array !== true && $_nested === true\n\n    const state = {\n      edition: false,\n      original: props.value,\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user,\n      verify: false\n    };\n   \n    if (state.user && state.user.$_wire) {\n      state.initialPath = state.user.$_wire;\n    }\n    else state.initialPath = '';\n\n    if (props.value) {\n      const val = props.value;\n\n      state.edition = true;\n\n      // normal case\n      if (val.$_array !== true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // nested in array\n      else if (val.$_array === true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // normal in array\n      else if (val.$_array === true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: typeof val.$type === \"string\" ? val.$type : val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // special handle for objects\n      else if (val.$_array !== true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n    }\n    // single addition\n    else {\n      // nothing to set\n      state.value = {}\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    return (state)\n  }\n\n  driveSchema(state, force) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n\n      // special cases for array \n      if (value.type === \"Array\") {\n        this.currentSchema.content = {\n          $doc: \"Item content type\",\n          $type: \"Select\",\n          $required: true,\n          $options: {\n            default: value.content || \"Object\",\n            items: allTypesNoArray\n          },\n          $position: 12\n        }\n      }\n\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      state.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n\n  }\n\n  handleOK() {\n    this.state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"red\"\n        state.form.state = \"Error\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n\n        this.setState(state)\n\n        // get the current input values \n        const value = result.result\n        // const value = this.state.input.getValue()\n        var nvalue = {}\n\n        // rename all root value with $\n        for (var key in value) nvalue['$' + key] = value[key]\n\n        // we will save the last path in order to reconstruct the field name\n        const source = this.state.initialPath.split('.')\n        source.pop()\n        source.push(value.key)\n        const npath = source.join('.')\n        delete nvalue.$key;\n\n        // because object and array are virtualized in the builder \n        // then we need to remap the item with the correct schema underlining\n\n        if (nvalue.$type === \"Array\" && nvalue.$content === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // normal in array\n        else if (nvalue.$type === \"Array\" && nvalue.$content !== \"Object\") {\n          nvalue.$type = nvalue.$content;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // special handle for objects\n        else if (nvalue.$type === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n        }\n\n        if (this.state.edition === true) {\n          this.props.onOk(({\n            edition: true,\n            oldPath: this.state.initialPath,\n            newPath: npath,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n        else {\n          this.props.onOk(({\n            edition: false,\n            newPath: this.state.initialPath + \".\" + value.key,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n      }\n    })\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={this.handleOK.bind(this)}\n      onCancel={onCancel}\n    >\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.currentSchema}\n        input={this.state.value}\n        user={this.props.user}\n        verify={this.state.verify}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\n\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends RecycledComponent {\n\n  cycle(props, first) {\n    const state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.onChange = ()=>{}\n    if(props.onChange) this.onChange = props.onChange\n\n    // compile the schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(props.schema)\n\n    state.schemaDataSource = this.updateDataSource(state.schema)\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    return(state)\n  }\n\n  fireOnChange() {\n    const ex = this.state.schema.export()\n    // this.state.schema.compile(ex)\n\n    // fire on change for exporting the new schema\n    this.onChange(ex)\n  }\n\n  itemChanged(arg) {\n\n    if (arg.edition === true) {\n      const lineup = this.state.schema.getLineup(arg.oldPath);\n\n      // delete org\n      this.state.schema.removeLineup(arg.oldPath)\n\n      // put new\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field updated\",\n        description: `Field at ${arg.oldPath} has been successfully updated`\n      })\n    }\n\n    // manage addition\n    else {\n      // just put the new one\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field added\",\n        description: `Field at ${arg.newPath} has been successfully added`\n      })\n    }\n\n    this.fireOnChange();\n\n    this.setState({\n      modal: false,\n      modalContent: null,\n      modalUser: null,\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n  }\n\n  itemRemove(item) {\n    this.state.schema.removeLineup(item.$_wire);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_wire} has been successfully removed`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: null, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  handlingEdit(item) {\n    const path = item.$_wire || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: item, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  updateDataSource(root) {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        var path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if (Array.isArray(item)) {\n          path = wire + \".\" + item[0].$_key;\n          item[0].$_path = path;\n          item[0].$_array = true;\n\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          else {\n            item[0].$_nested = true;\n          }\n\n          current.push({\n            ptr: item[0],\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item[0].$_key}</strong>\n            </div>,\n            doc: item[0].$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item[0])} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item[0])}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if (typeof item === \"object\" && !item.$type) {\n          item.$_nested = true;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (root) {\n      data = fieldify2antDataTable(root.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\nexport class FieldifySchemaRender extends RecycledComponent {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n  }\n\n  cycle(props, first) {\n\n    const state = {\n      layout: props.layout ? props.layout : \"horizontal\"\n    }\n\n    // compile the schema\n    state.rawSchema = props.schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(state.rawSchema)\n\n    // create an input instance\n    // console.log(\"rawInput\", state.rawInput === props.rawInput)\n    state.rawInput = props.input\n    state.input = new FieldifyInput(state.schema)\n    state.input.setValue(props.input)\n    state.inputValue = state.input.getValue()\n\n    state.verify = props.verify || false\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    state.reactive = this.update(state.schema, state.inputValue, state.verify);\n\n    return (state)\n  }\n\n  update(root, input, verify) {\n    const follower = (schema, input, ret, line) => {\n      line = line || \"\"\n\n      utils.orderedRead(schema, (index, item) => {\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        const inputPtr = input ? input[source.$_key] : null;\n        const lineKey = line + \".\" + source.$_key;\n\n        if (source.$_array === true) {\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            }\n          ];\n\n          const dataSource = []\n\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          if (source.$_nested === true) {\n            var inputPtr2 = input[source.$_key]\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[source.$_key] = [];\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const child = [];\n              follower(source, value, child, key);\n\n              dataSource.push({\n                key,\n                form: child\n              })\n            }\n          }\n          else if(source.$type) {\n            delete source.$doc; // source is cloned\n            const TypeRender = source.$type.Render;\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (TypeRender) {\n              if (!Array.isArray(inputPtr)) {\n                input[item.$_key] = [];\n                inputPtr2 = input[item.$_key];\n              }\n\n              if (!inputPtr2) return (ret);\n\n              if (min - inputPtr2.length > 0) {\n                for (var a = 0; a <= min - inputPtr2.length; a++) {\n                  inputPtr2.push(null)\n                }\n              }\n\n              for (var a = 0; a < inputPtr2.length; a++) {\n                const value = inputPtr2[a];\n                const key = lineKey + \".\" + a\n\n                dataSource.push({\n                  key,\n                  form: <TypeRender\n                    schema={source}\n                    value={value}\n                    injected={true}\n                    key={\"render.\"+source.$_wire}\n                  />\n                })\n              }\n\n            }\n\n          }\n\n          ret.push(<Form.Item key={source.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n\n        }\n        else {\n          if (source.$_nested === true) {\n            const child = [];\n            follower(source, inputPtr, child, lineKey);\n\n            ret.push(<div key={\"render.\"+source.$_wire} className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$doc}>\n                {child}\n              </Card>\n            </div>);\n          }\n          else {\n            const TypeRender = item.$type.Render;\n            if (TypeRender) {\n              ret.push(<TypeRender\n                schema={source}\n                value={inputPtr}\n                key={\"render.\"+source.$_wire}\n              />);\n            }\n          }\n        }\n      });\n      return (ret);\n    };\n\n    const ret = [];\n    follower(root.handler.schema, input, ret);\n    return (ret);\n  }\n\n  render() {\n    var layout = {};\n\n    if (this.state.layout === 'horizontal') {\n      layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n      }\n    }\n    return (<Form\n      layout={this.state.layout}\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\n\n"],"names":["FieldifyTypeForm","Component","constructor","props","state","cycle","componentDidUpdate","schema","setState","value","verify","feedback","status","options","isInjected","onChange","onError","help","$help","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","ret","error","message","render","children","$doc","$required","marginBottom","sm","FieldifyTypeRender","RecycledComponent","injected","subRender","width","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","default","pNew","pOld","changed","key","o","n","setup","prev","a","p","configure","changeIt","change","Object","assign","StringForm","TypeForm","Input","placeholder","target","StringRender","TypeRender","StringInfo","TypeInfo","color","Icon","StringBuilder","TypeBuilder","minSize","maxSize","code","types","String","description","class","Info","Builder","Form","Render","TString","NameForm","result","from","setField","first","last","NameInfo","NameRender","getDerivedStateFromProps","final","trim","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","EmailRender","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberRender","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxBuilder","SelectForm","items","updateItems","push","Select","SelectInfo","SelectRender","ptr","SelectBuilder","ObjectClass","fieldifyType","ArrayClass","configuration","min","$type","max","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","bind","total","length","pageSize","hideOnSinglePage","KVInfo","KVRender","KVBuilder","KV","Array","FieldifySchema","name","resolver","Types","compile","FieldifySchemaForm","formRef","React","createRef","rawSchema","rawInput","FieldifyInput","setValue","inputValue","getValue","references","reactive","update","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","root","follower","schematized","utils","orderedRead","index","item","source","isArray","schematizedSrc","$_key","sourceSchematized","inputPtr","lineKey","$_array","inputPtr2","$array","$_nested","child","form","ref","$_wire","$_access","handlerSchematized","allTypes","allTypesNoArray","baseSchema","$position","doc","position","$default","acceptedTypes","FieldifySchemaBuilderModal","currentSchema","visible","edition","original","initialPath","val","required","read","$read","write","$write","content","driveSchema","force","Type","currentType","TypeObject","formChanged","handleOK","nvalue","split","pop","npath","join","$key","$content","no","getNO","nestedObject","onOk","oldPath","newPath","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","ex","export","itemChanged","arg","lineup","getLineup","removeLineup","setLineup","notification","success","modalContent","itemRemove","handlingEdit","self","fieldify2antDataTable","wire","current","$_path","composite","ObjectIcon","ArrayIcon","sds","defaultExpandAllRows","FieldifySchemaRender","Schema"],"mappings":"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"}