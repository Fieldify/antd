{"version":3,"file":"index.js","sources":["../../../react-recycling/index.js","../src/lib/TypeForm.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/Select.js","../src/Types/Object.js","../src/Types/Array.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types.js","../src/Schema/Schema.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema.js","../src/index.js"],"sourcesContent":["import React from 'react';\n\n\nexport default class RecycledComponent extends React.Component {\n  constructor(props, context, updater) {\n    // parent\n    super(props, context, updater)\n\n    // setup state with the cycle returns\n    this.state = this.cycle(props, true)\n  }\n\n  componentDidUpdate(props, state) {\n    // execute parent\n    if(super.componentDidUpdate) super.componentDidUpdate(props, state)\n\n    // props have changed\n    var changed = false\n    for(var a in props) {\n      // all types are compared exept functions\n      // which changes at any round\n      if(typeof props[a] !== \"function\" && props[a] !== this.props[a]) {\n        changed = true\n        break\n      }\n    }\n\n    // something need to be updated inside this component\n    if (changed === true) {\n      // recycling the state of the component\n      this.setState(this.cycle(this.props, false))\n    }\n  }\n\n  // the famous cycling function\n  cycle(props, first) {\n    return({})\n  }\n}","import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props.schema !== props.schema) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n    \n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      options: {}\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) {\n      this.schema = {}\n      return (state)\n    }\n\n    state.help = this.schema.$help;\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n\n    // if (props.verify === true) {\n    //   this.verify(props.value, (ret) => {\n    //     this.state = { ...this.state, ...ret }\n    //   })\n    // }\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        \n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    if(!this.handler) {\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: \"No Handler on verifier\"\n      }))\n    }\n    \n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input placeholder=\"Checkbox of characters\" />\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Checkbox min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm\n}\n\n\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ObjectClass extends fieldifyType {\n\n\n}\n\n\nexport default {\n  code: \"Object\",\n  description: \"Nested Sub Object\",\n  class: ObjectClass\n}\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ArrayClass extends fieldifyType {\n  configuration () {\n    return ({\n      min: {\n        $doc: 'Minimum of items',\n        $required: false,\n        $type: 'Number'\n      },\n      max: {\n        $doc: 'Maximun of items',\n        $required: false,\n        $type: 'Number'\n      }\n    })\n  }\n\n}\n\n\nexport default {\n  code: \"Array\",\n  description: \"Array\",\n  class: ArrayClass\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types, input as FieldifyInput } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport Select from \"./Types/Select\"\nimport Object from \"./Types/Object\"\nimport Array from \"./Types/Array\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Checkbox,\n  Object,\n  Array,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  compile(schema) {\n    // process normal compilation\n    super.compile(schema);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nexport class FieldifySchemaForm extends RecycledComponent {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n  }\n\n  cycle(props, first) {\n    const state = {}\n\n    this.schema = props.schema;\n    this.input = props.input;\n\n    if (!this.input || !(typeof props.input === \"object\")) {\n      this.input = new FieldifyInput(this.schema)\n    }\n\n    state.input = this.input.getValue()\n    state.verify = props.verify || false\n\n    state.reactive = this.update(state.input, state.verify);\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    return (state)\n  }\n\n  clickAddArray(line) {\n    this.input.set(line)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value,\n      reactive: this.update(_value, false)\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.input.remove(line)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value,\n      reactive: this.update(_value, false)\n    })\n  }\n\n  setValue(line, value) {\n    this.input.set(line, value)\n    const _value = this.input.getValue();\n    this.onChange(_value)\n    this.setState({\n      input: _value\n    })\n  }\n\n  input(input, verify) {\n    // const state = {\n    //   verify,\n    //   input\n    // }    \n    // state.reactive = this.update(input, verify)\n    // this.setState(state)\n  }\n\n  update(input, verify) {\n    const follower = (schema, input, ret, line) => {\n      line = line || \"\"\n\n      utils.orderedRead(schema, (index, item) => {\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        const inputPtr = input ? input[source.$_key] : null;\n        const lineKey = line + \".\" + source.$_key;\n\n        if (source.$_array === true) {\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            },\n            {\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            },\n          ];\n          const dataSource = []\n\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          if (source.$_nested === true) {\n            var inputPtr2 = input[source.$_key]\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[source.$_key] = [];\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const child = [];\n              follower(source, value, child, key);\n\n              dataSource.push({\n                key,\n                form: child,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n          }\n          else {\n            delete source.$doc; // source is cloned\n            const TypeForm = source.$type.Form;\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[item.$_key] = [];\n              inputPtr2 = input[item.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n   \n              dataSource.push({\n                key,\n                form: <TypeForm\n                  schema={source}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />,\n                actions: <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              })\n            }\n          }\n\n          ret.push(<Form.Item key={source.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                  <span><PlusIcon /></span>\n                </span>\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n\n        }\n        else {\n          if (source.$_nested === true) {\n            const child = [];\n            follower(source, inputPtr, child, lineKey);\n\n            ret.push(<div key={source.$_wire} className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$doc}>\n                {child}\n              </Card>\n            </div>);\n          }\n          else {\n            const TypeForm = item.$type.Form;\n\n            ret.push(<TypeForm\n              schema={source}\n              value={inputPtr}\n              key={source.$_wire}\n              verify={verify}\n              user={this.props.user}\n              onChange={(schema, value) => this.setValue(lineKey, value)}\n\n              // reference errors\n              onError={(error, message) => {\n                if (error === true) {\n                  this.references[source.$_wire] = message;\n                }\n                else {\n                  const ref = this.references[source.$_wire];\n                  if (ref) {\n                    delete this.references[source.$_wire];\n                  }\n                }\n              }}\n            />);\n          }\n        }\n      });\n      return (ret);\n    };\n\n    const ret = [];\n    follower(this.schema.handler.schema, input, ret);\n    return (ret);\n  }\n\n  render() {\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Form\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n// build all available types\nconst allTypes = {}\nconst allTypesNoArray = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n  if (a !== \"Array\") {\n    allTypesNoArray[a] = Types[a].description\n  }\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true,\n    $position: 10\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: \"Select\",\n    $required: true,\n    $options: {\n      items: allTypes\n    },\n    $position: 11\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: false,\n    $type: \"String\",\n    $position: 22\n  },\n  position: {\n    $doc: \"Position in the serie\",\n    $required: false,\n    $type: \"Number\",\n    $default: 0,\n    $options: {\n      acceptedTypes: \"integer\"\n    },\n    $position: 23\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n    // here we have 3 cases\n    // normal case = $_array !== true && $_nested !== true\n    // nested in array = $_array === true && $_nested === true\n    // normal in array = $_array === true && $_nested !== true\n    // single nested = $_array !== true && $_nested === true\n\n    const state = {\n      edition: false,\n      original: props.value,\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user,\n      verify: false\n    };\n\n    if (state.user && state.user.$_wire) {\n      state.initialPath = state.user.$_wire;\n    }\n    else state.initialPath = '';\n\n    if (props.value) {\n      const val = props.value;\n\n      state.edition = true;\n\n      // normal case\n      if (val.$_array !== true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // nested in array\n      else if (val.$_array === true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // normal in array\n      else if (val.$_array === true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: typeof val.$type === \"string\" ? val.$type : val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // special handle for objects\n      else if (val.$_array !== true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n    }\n    // single addition\n    else {\n      // nothing to set\n      state.value = {}\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    return (state)\n  }\n\n  driveSchema(state, force) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n\n      // special cases for array \n      if (value.type === \"Array\") {\n        this.currentSchema.content = {\n          $doc: \"Item content type\",\n          $type: \"Select\",\n          $required: true,\n          $options: {\n            default: value.content || \"Object\",\n            items: allTypesNoArray\n          },\n          $position: 12\n        }\n      }\n\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      state.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else if (!state.schema || force === true) {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n\n  }\n\n  handleOK() {\n    this.state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"red\"\n        state.form.state = \"Error\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n\n        this.setState(state)\n\n        // get the current input values \n        const value = this.state.input.getValue()\n        var nvalue = {}\n\n        // rename all root value with $\n        for (var key in value) nvalue['$' + key] = value[key]\n        \n        // we will save the last path in order to reconstruct the field name\n        const source = this.state.initialPath.split('.')\n        source.pop()\n        source.push(value.key)\n        const npath = source.join('.')\n        delete nvalue.$key;\n        \n        // because object and array are virtualized in the builder \n        // then we need to remap the item with the correct schema underlining\n        \n        if (nvalue.$type === \"Array\" && nvalue.$content === \"Object\") {\n          delete nvalue.$type;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // normal in array\n        else if (nvalue.$type === \"Array\" && nvalue.$content !== \"Object\") {\n          nvalue.$type = nvalue.$content;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // special handle for objects\n        else if (nvalue.$type === \"Object\") {\n          delete nvalue.$type;\n        }\n        \n        if(this.state.edition === true) {\n          this.props.onOk(({\n            edition: true,\n            oldPath: this.state.initialPath,\n            newPath: npath,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n        else {\n          this.props.onOk(({\n            edition: false,\n            newPath: this.state.initialPath+\".\"+value.key,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n      }\n    })\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={this.handleOK.bind(this)}\n      onCancel={onCancel}\n    >\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.state.schema}\n        input={this.state.input}\n        user={this.props.user}\n        verify={this.state.verify}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends RecycledComponent {\n\n  cycle(props, first) {\n    const state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.onChange = ()=>{}\n    if(props.onChange) this.onChange = props.onChange\n\n    this.schema = props.schema;\n\n    state.schemaDataSource = this.updateDataSource()\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    return(state)\n  }\n\n  fireOnChange() {\n    const ex = this.schema.export()\n    this.schema.compile(ex)\n\n    // fire on change for exporting the new schema\n    this.onChange(ex)\n  }\n\n  itemChanged(arg) {\n    if (arg.edition === true) {\n      const lineup = this.props.schema.getLineup(arg.oldPath);\n\n      // delete org\n      this.props.schema.removeLineup(arg.oldPath)\n\n      // put new\n      this.props.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field updated\",\n        description: `Field at ${arg.oldPath} has been successfully updated`\n      })\n    }\n\n    // manage addition\n    else {\n      // just put the new one\n      this.props.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field added\",\n        description: `Field at ${arg.newPath} has been successfully added`\n      })\n    }\n\n    this.fireOnChange();\n\n    this.setState({\n      modal: false,\n      modalContent: null,\n      modalUser: null,\n      schemaDataSource: this.updateDataSource()\n    });\n  }\n\n  itemRemove(item) {\n    this.props.schema.removeLineup(item.$_wire);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource()\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_wire} has been successfully removed`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n\n    const lineup = this.props.schema.getLineup(path) || this.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: null, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  handlingEdit(item) {\n    const path = item.$_wire || \".\";\n\n    const lineup = this.props.schema.getLineup(path) || this.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: item, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  updateDataSource() {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        var path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if(source.$_array === true) {\n          path = wire + \".\" + item[0].$_key;\n          item[0].$_path = path;\n\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          current.push({\n            ptr: item[0],\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item[0].$_key}</strong>\n            </div>,\n            doc: item[0].$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item[0])} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item[0])}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if(source.$_array !== true && source.$_nested === true) {\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else if (source.$_array !== true && source.$_nested !== true) {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (this.schema) {\n      data = fieldify2antDataTable(this.schema.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}\n","\nimport React from 'react'\n\nimport { iterator, assign } from \"fieldify\"\n\n\nimport { Space, Radio, Button } from \"antd\";\n\n\nexport { FieldifySchemaBuilder } from \"./Schema/Builder\"\nexport { FieldifySchemaForm } from \"./Schema/Form\"\n\nexport { FieldifySchema } from \"./Schema/Schema\"\n\nexport class FieldifySchemaRender extends React.Component {\n\n  render() {\n    return (<div>test</div>)\n  }\n}\n\n\n\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\n\n"],"names":["RecycledComponent","props","context","updater","state","cycle","componentDidUpdate","changed","a","setState","first","React","Component","FieldifyTypeForm","schema","value","verify","feedback","status","options","isInjected","onChange","onError","help","$help","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","ret","error","message","render","children","Form","$doc","$required","marginBottom","sm","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","pNew","pOld","key","o","n","setup","prev","p","configure","changeIt","change","Object","assign","StringForm","Input","placeholder","target","width","TypeForm","StringInfo","Tag","color","Icon","TypeInfo","StringBuilder","minSize","maxSize","Space","InputNumber","TypeBuilder","code","types","String","description","Info","Builder","TString","NameForm","result","from","setField","Row","Col","last","NameInfo","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","MailOutlined","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxBuilder","SelectForm","items","updateItems","push","Select","SelectInfo","SelectBuilder","ObjectClass","fieldifyType","ArrayClass","configuration","min","$type","max","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","Modal","bind","Alert","Table","total","length","pageSize","hideOnSinglePage","KVInfo","KVBuilder","KV","Array","FieldifySchema","name","resolver","Types","compile","FieldifySchemaForm","formRef","createRef","FieldifyInput","getValue","reactive","update","references","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","setValue","follower","utils","orderedRead","index","item","source","isArray","inputPtr","$_key","lineKey","$_array","inputPtr2","$array","$_nested","child","form","Button","ref","$_wire","Card","$_access","allTypes","allTypesNoArray","baseSchema","$position","doc","position","$default","acceptedTypes","FieldifySchemaBuilderModal","currentSchema","visible","edition","original","initialPath","val","required","read","$read","write","$write","content","driveSchema","force","Type","currentType","TypeObject","formChanged","handleOK","nvalue","split","pop","npath","join","$key","$content","onOk","oldPath","newPath","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","ex","itemChanged","arg","lineup","getLineup","removeLineup","setLineup","notification","success","modalContent","itemRemove","handlingEdit","self","fieldify2antDataTable","wire","current","$_path","composite","Tooltip","ObjectIcon","ptr","ArrayIcon","Popconfirm","sds","defaultExpandAllRows","FieldifySchemaRender","Schema"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGqBA;;;AACnB,6BAAYC,KAAZ,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAqC;AAAA;;AAEnC,wCAAMF,KAAN,EAAaC,OAAb,EAAsBC,OAAtB;AAGA,UAAKC,KAAL,GAAa,MAAKC,KAAL,CAAWJ,KAAX,EAAkB,IAAlB,CAAb;AALmC;AAMpC;;;;SAEDK,qBAAA,4BAAmBL,KAAnB,EAA0BG,KAA1B,EAAiC;AAE/B,mCAASE,kBAAT,EAA6B,2BAAMA,kBAAN,YAAyBL,KAAzB,EAAgCG,KAAhC;AAG7B,QAAIG,OAAO,GAAG,KAAd;;AACA,SAAI,IAAIC,CAAR,IAAaP,KAAb,EAAoB;AAGlB,UAAG,OAAOA,KAAK,CAACO,CAAD,CAAZ,KAAoB,UAApB,IAAkCP,KAAK,CAACO,CAAD,CAAL,KAAa,KAAKP,KAAL,CAAWO,CAAX,CAAlD,EAAiE;AAC/DD,QAAAA,OAAO,GAAG,IAAV;AACA;AACD;AACF;;AAGD,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AAEpB,WAAKE,QAAL,CAAc,KAAKJ,KAAL,CAAW,KAAKJ,KAAhB,EAAuB,KAAvB,CAAd;AACD;AACF;;SAGDI,QAAA,eAAMJ,KAAN,EAAaS,KAAb,EAAoB;AAClB,WAAO,EAAP;AACD;;;EAlC4CC,cAAK,CAACC;;ICIhCC;;;AACnB,4BAAYZ,KAAZ,EAAmB;AAAA;;AACjB,kCAAMA,KAAN;AACA,UAAKG,KAAL,GAAa,MAAKC,KAAL,CAAWJ,KAAX,CAAb;AAFiB;AAGlB;;;;SAGDK,qBAAA,4BAAmBL,KAAnB,EAA0BG,KAA1B,EAAiC;AAC/B,QAAI,KAAKH,KAAL,CAAWa,MAAX,KAAsBb,KAAK,CAACa,MAAhC,EAAwC;AACtC,UAAMT,KAAK,GAAG,KAAKA,KAAL,CAAW,KAAKJ,KAAhB,CAAd;AACA,WAAKQ,QAAL,CAAcJ,KAAd;AACD;AACF;;SAEDA,QAAA,eAAMJ,KAAN,EAAa;AACX,SAAKa,MAAL,GAAcb,KAAK,CAACa,MAApB;AAEA,QAAMV,KAAK,GAAG;AACZW,MAAAA,KAAK,EAAEd,KAAK,CAACc,KADD;AAEZC,MAAAA,MAAM,EAAEf,KAAK,CAACe,MAFF;AAGZC,MAAAA,QAAQ,EAAE,KAHE;AAIZC,MAAAA,MAAM,EAAE,IAJI;AAKZC,MAAAA,OAAO,EAAE;AALG,KAAd;AAQA,SAAKC,UAAL,GAAkBnB,KAAK,CAACmB,UAAxB;AAEA,SAAKC,QAAL,GAAgBpB,KAAK,CAACoB,QAAN,GAAiBpB,KAAK,CAACoB,QAAvB,GAAkC,YAAM,EAAxD;AACA,SAAKC,OAAL,GAAerB,KAAK,CAACqB,OAAN,GAAgBrB,KAAK,CAACqB,OAAtB,GAAgC,YAAM,EAArD;;AAEA,QAAI,CAAC,KAAKR,MAAV,EAAkB;AAChB,WAAKA,MAAL,GAAc,EAAd;AACA,aAAQV,KAAR;AACD;;AAEDA,IAAAA,KAAK,CAACmB,IAAN,GAAa,KAAKT,MAAL,CAAYU,KAAzB;AACApB,IAAAA,KAAK,CAACe,OAAN,GAAgB,KAAKL,MAAL,CAAYW,QAAZ,IAAwB,EAAxC;AACA,SAAKC,OAAL,GAAe,KAAKZ,MAAL,CAAYa,MAA3B;AASA,WAAQvB,KAAR;AACD;;SAEDwB,cAAA,qBAAYC,EAAZ,EAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAI,KAAKC,YAAT,EAAuB;AACrB,WAAKC,iBAAL;AACA,WAAKC,cAAL,GAAsBJ,EAAtB;AACA;AACD;;AAEDA,IAAAA,EAAE,GAAGA,EAAE,IAAI,KAAKI,cAAhB;AACA,QAAI,CAACJ,EAAL,EAAS;AAET,WAAO,KAAKI,cAAZ;AACA,SAAKD,iBAAL,GAAyB,CAAzB;AACA,SAAKD,YAAL,GAAoBG,UAAU,CAAC,YAAM;AACnCL,MAAAA,EAAE,CAAC,YAAM;AACP,eAAO,MAAI,CAACE,YAAZ;;AAGA,YAAI,MAAI,CAACC,iBAAL,GAAyB,CAA7B,EAAgC;AAC9B,UAAA,MAAI,CAACJ,WAAL,CAAiBC,EAAjB,EAAqBC,KAArB;AACD;AACF,OAPC,CAAF;AAQD,KAT6B,EAS3BA,KAT2B,CAA9B;AAUD;;SAEDK,cAAA,qBAAYpB,KAAZ,EAAmBe,KAAnB,EAA0B;AAAA;;AACxBA,IAAAA,KAAK,GAAGA,KAAK,IAAI,GAAjB;AAEA,SAAKrB,QAAL,CAAc;AACZM,MAAAA,KAAK,EAAEA;AADK,KAAd;AAIA,SAAKqB,UAAL,GAAkBrB,KAAlB;AAEA,SAAKa,WAAL,CAAiB,UAACS,GAAD,EAAS;AACxB,MAAA,MAAI,CAACrB,MAAL,CAAY,MAAI,CAACoB,UAAjB,EAA6B,UAACE,GAAD,EAAS;AACpC,QAAA,MAAI,CAAC7B,QAAL,CAAc6B,GAAd;;AACA,YAAIA,GAAG,CAACpB,MAAJ,KAAe,SAAnB,EAA8B;AAC5BmB,UAAAA,GAAG;AACH;AACD;;AAED,QAAA,MAAI,CAAChB,QAAL,CAAc,MAAI,CAACP,MAAnB,EAA2B,MAAI,CAACsB,UAAhC;;AACAC,QAAAA,GAAG;AACJ,OATD;AAUD,KAXD,EAWGP,KAXH;AAYD;;SAEDd,SAAA,gBAAOD,KAAP,EAAcc,EAAd,EAAkB;AAAA;;AAChB,QAAG,CAAC,KAAKH,OAAT,EAAkB;AAChB,aAAQG,EAAE,CAAC;AACTX,QAAAA,MAAM,EAAE,OADC;AAETD,QAAAA,QAAQ,EAAE,IAFD;AAGTM,QAAAA,IAAI,EAAE;AAHG,OAAD,CAAV;AAKD;;AAED,SAAKG,OAAL,CAAaV,MAAb,CAAoBD,KAApB,EAA2B,UAACwB,KAAD,EAAQC,OAAR,EAAoB;AAC7C,UAAID,KAAK,KAAK,KAAd,EAAqB;AACnB,QAAA,MAAI,CAACjB,OAAL,CAAa,KAAb;;AACA,eAAQO,EAAE,CAAC;AACTX,UAAAA,MAAM,EAAE,SADC;AAETD,UAAAA,QAAQ,EAAE,IAFD;AAGTM,UAAAA,IAAI,EAAE;AAHG,SAAD,CAAV;AAKD;;AAGD,MAAA,MAAI,CAACD,OAAL,CAAa,IAAb,EAAmBkB,OAAnB;;AACA,aAAQX,EAAE,CAAC;AACTX,QAAAA,MAAM,EAAE,OADC;AAETD,QAAAA,QAAQ,EAAE,IAFD;AAGTM,QAAAA,IAAI,EAAEiB;AAHG,OAAD,CAAV;AAKD,KAjBD;AAkBD;;SAGDC,SAAA,gBAAOC,QAAP,EAAiB;AAGf,QAAI,KAAKtB,UAAL,KAAoB,IAAxB,EAA8B,oBAC5BT,6BAACgC,SAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAE,KAAK7B,MAAL,CAAY8B,IADrB;AAEE,MAAA,QAAQ,EAAE,KAAK9B,MAAL,CAAY+B,SAFxB;AAGE,MAAA,cAAc,EAAE,KAAKzC,KAAL,CAAWc,MAH7B;AAIE,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWa,QAJ1B;AAKE,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWmB,IALnB;AAME,MAAA,KAAK,EAAE;AAAEuB,QAAAA,YAAY,EAAE;AAAhB,OANT;AAOE,MAAA,UAAU,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN;AAPd,OASGL,QATH,CAD4B;AAc9B,wBACE/B,6BAACgC,SAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAE,KAAK7B,MAAL,CAAY8B,IADrB;AAEE,MAAA,QAAQ,EAAE,KAAK9B,MAAL,CAAY+B,SAFxB;AAGE,MAAA,cAAc,EAAE,KAAKzC,KAAL,CAAWc,MAH7B;AAIE,MAAA,WAAW,EAAE,KAAKd,KAAL,CAAWa,QAJ1B;AAKE,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWmB,IALnB;AAME,MAAA,KAAK,EAAE;AAAEuB,QAAAA,YAAY,EAAE;AAAhB,OANT;AAOE,MAAA,UAAU,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN;AAPd,OASGL,QATH,CADF;AAaD;;;EA5J2C9B;;ICLzBoC;;;AACnB,8BAAY/C,KAAZ,EAAmB;AAAA;;AACjB,kCAAMA,KAAN;AACA,UAAKA,KAAL,GAAaA,KAAb;AACA,QAAIA,KAAK,CAACgD,KAAV,EAAiB,MAAKC,IAAL,GAAYjD,KAAK,CAACgD,KAAN,CAAYC,IAAxB;AACjB,UAAK9C,KAAL,GAAa,EAAb;AAJiB;AAKlB;;;;SAGDE,qBAAA,4BAAmB6C,SAAnB,EAA8BC,SAA9B,EAAyC;AACvC,AAGD;;;EAb6CxC;;ICA3ByC;;;AACnB,iCAAYpD,KAAZ,EAAmB;AAAA;;AACjB,kCAAMA,KAAN;AACA,UAAKA,KAAL,GAAaA,KAAb;AACA,UAAKoB,QAAL,GAAgBpB,KAAK,CAACoB,QAAN,GAAiBpB,KAAK,CAACoB,QAAvB,GAAkC,YAAM,EAAxD;AAEA,QAAIpB,KAAK,CAACgD,KAAV,EAAiB,MAAKC,IAAL,GAAYjD,KAAK,CAACgD,KAAN,CAAYC,IAAxB;AAEjB,UAAK9C,KAAL,gBAAkBH,KAAK,CAACkB,OAAxB;AAEA,uBAAe,EAAf;AATiB;AAUlB;;;;SAEDb,qBAAA,4BAAmB6C,SAAnB,EAA8BC,SAA9B,EAAyC;AACvC,QAAME,IAAI,GAAG,KAAKrD,KAAL,CAAWkB,OAAX,IAAsB,EAAnC;AACA,QAAMoC,IAAI,GAAGJ,SAAS,CAAChC,OAAV,IAAqB,EAAlC;AAEA,QAAIZ,OAAO,GAAG,CAAd;;AACA,SAAK,IAAIiD,GAAT,IAAgB,eAAhB,EAA8B;AAC5B,UAAMC,CAAC,GAAGF,IAAI,CAACC,GAAD,CAAd;AACA,UAAME,CAAC,GAAGJ,IAAI,CAACE,GAAD,CAAd;AACA,UAAIC,CAAC,KAAKC,CAAV,EACEnD,OAAO;AACV;;AAGD,QAAIA,OAAO,GAAG,CAAd,EAAiB;AACf,WAAKE,QAAL,CAAc6C,IAAd;AACA,WAAKjC,QAAL,cAAkBiC,IAAlB;AACD;AAEF;;SAEDK,QAAA,eAAMC,IAAN,EAAY;AAEV,QAAMxD,KAAK,gBAAQwD,IAAR,CAAX;;AAGA,SAAK,IAAIpD,CAAT,IAAcJ,KAAd,EAAqB;AACnB,UAAMyD,CAAC,GAAG,gBAAarD,CAAb,CAAV;AACA,UAAI,CAACqD,CAAL,EAAQ,OAAOzD,KAAK,CAACI,CAAD,CAAZ;AACT;;AAGD,SAAK,IAAIA,CAAT,IAAc,eAAd,EAA4B;AAC1B,UAAI,EAAEA,CAAC,IAAIJ,KAAP,CAAJ,EACEA,KAAK,CAACI,CAAD,CAAL,GAAW,gBAAaA,CAAb,CAAX;AACH;;AACD,WAAQJ,KAAR;AACD;;SAED0D,YAAA,qBAAY;AACV,SAAK1D,KAAL,GAAa,KAAKuD,KAAL,CAAW,KAAKvD,KAAhB,CAAb;AACA,SAAKiB,QAAL,cAAmB,KAAKjB,KAAxB;AACD;;SAED2D,WAAA,kBAASP,GAAT,EAAczC,KAAd,EAAqB;AACnB,QAAMiD,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK9D,KAAvB,CAAf;AACA4D,IAAAA,MAAM,CAACR,GAAD,CAAN,GAAczC,KAAd;AAGA,SAAKN,QAAL,CAAcuD,MAAd;AACA,SAAK3C,QAAL,cAAkB2C,MAAlB;AACD;;;EA/DgDpD;;ICwB7CuD;;;;;;;;;SACJ1B,SAAA,kBAAS;AAAA;;AACP,+BAAcA,MAAd,yBACE9B,6BAACyD,UAAD;AACA,MAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWW,KADlB;AAEA,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWe,OAAX,CAAmBkD,WAFhC;AAGA,MAAA,QAAQ,EAAE;AAAA,YAAGC,MAAH,QAAGA,MAAH;AAAA,eAAgB,KAAI,CAACnC,WAAL,CAAiBmC,MAAM,CAACvD,KAAxB,CAAhB;AAAA,OAHV;AAIA,MAAA,KAAK,EAAE;AAACwD,QAAAA,KAAK,EAAE;AAAR;AAJP,MADF;AAQD;;;EAVsBC;;IAkBnBC;;;;;;;;;UACJhC,SAAA,kBAAS;AACP,wBACE9B,wDACEA,6BAAC+D,QAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAA5B,oBAAkDhE,6BAACiE,yBAAD,OAAlD,CADF,CADF;AAKD;;;EAPsBC;;IAenBC;;;AACJ,yBAAY7E,KAAZ,EAAmB;AAAA;;AACjB,qCAAMA,KAAN;AAEA,wBAAe;AACb8E,MAAAA,OAAO,EAAE,CADI;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;;AAKA,WAAKlB,SAAL;;AARiB;AASlB;;;;UAEDrB,SAAA,kBAAS;AAAA;;AACP,wBACE9B,uDACEA,6BAACgC,SAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,oBACEhC,6BAACsE,UAAD,qBACEtE,6BAACuE,gBAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAW2E,OAAvC;AAAgD,MAAA,QAAQ,EAAE,kBAAChE,KAAD;AAAA,eAAW,MAAI,CAACgD,QAAL,CAAc,SAAd,EAAyBhD,KAAzB,CAAX;AAAA;AAA1D,MADF,eAGEJ,6BAACuE,gBAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAW4E,OAAvC;AAAgD,MAAA,QAAQ,EAAE,kBAACjE,KAAD;AAAA,eAAW,MAAI,CAACgD,QAAL,CAAc,SAAd,EAAyBhD,KAAzB,CAAX;AAAA;AAA1D,MAHF,CADF,CADF,CADF;AAYD;;;EAzByBoE;;AA4B5B,aAAe;AACbC,EAAAA,IAAI,EAAEC,cAAK,CAACC,MAAN,CAAaF,IADN;AAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACC,MAAN,CAAaC,WAFb;AAGb,WAAOF,cAAK,CAACC,MAAN,SAHM;AAKbE,EAAAA,IAAI,EAAEf,UALO;AAMbgB,EAAAA,OAAO,EAAEX,aANI;AAObnC,EAAAA,IAAI,EAAEwB;AAPO,CAAf;;AChEA,IAAMA,YAAU,GAAGuB,MAAO,CAAC/C,IAA3B;;IAOMgD;;;AACJ,oBAAY1F,KAAZ,EAAmB;AAAA,WACjB,qBAAMA,KAAN,CADiB;AAGlB;;;;SAEDI,QAAA,eAAMJ,KAAN,EAAa;AACX,QAAMqC,GAAG,uBAASjC,KAAT,YAAeJ,KAAf,CAAT;;AACA,QAAI,CAACqC,GAAG,CAACvB,KAAT,EAAgBuB,GAAG,CAACvB,KAAJ,GAAY,EAAZ;AAEhB,SAAK6E,MAAL,gBAAkBtD,GAAG,CAACvB,KAAtB;AACA,WAAQuB,GAAR;AACD;;SAEDC,QAAA,eAAMsD,IAAN,EAAYtD,MAAZ,EAAmBC,OAAnB,EAA4B;;SAM5BsD,WAAA,kBAAStC,GAAT,EAAc1C,MAAd,EAAsBC,KAAtB,EAA6B;AAC3B,SAAK6E,MAAL,CAAYpC,GAAZ,IAAmBzC,KAAnB;AACA,SAAKM,QAAL,CAAc,KAAKP,MAAnB,EAA2B,KAAK8E,MAAhC;AACD;;SAEDnD,SAAA,kBAAS;AAAA;;AAEP,+BAAcA,MAAd,yBACE9B,6BAACoF,QAAD;AAAK,MAAA,MAAM,EAAE;AAAb,oBACEpF,6BAACqF,QAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,IAAI,EAAE;AAAlC,oBACErF,6BAACwD,YAAD;AACE,MAAA,MAAM,EAAE,KAAKrD,MAAL,CAAYJ,KADtB;AAEE,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWY,MAFrB;AAGE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWW,KAAX,CAAiBL,KAH1B;AAIE,MAAA,QAAQ,EAAE,kBAACI,MAAD,EAASC,KAAT;AAAA,eAAmB,KAAI,CAAC+E,QAAL,CAAc,OAAd,EAAuBhF,MAAvB,EAA+BC,KAA/B,CAAnB;AAAA,OAJZ;AAME,MAAA,UAAU,EAAE;AANd,MADF,CADF,eAWEJ,6BAACqF,QAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,IAAI,EAAE;AAAlC,oBACErF,6BAACwD,YAAD;AACE,MAAA,MAAM,EAAE,KAAKrD,MAAL,CAAYmF,IADtB;AAEE,MAAA,MAAM,EAAE,KAAK7F,KAAL,CAAWY,MAFrB;AAGE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWW,KAAX,CAAiBkF,IAH1B;AAIE,MAAA,QAAQ,EAAE,kBAACnF,MAAD,EAASC,KAAT;AAAA,eAAmB,KAAI,CAAC+E,QAAL,CAAc,MAAd,EAAsBhF,MAAtB,EAA8BC,KAA9B,CAAnB;AAAA,OAJZ;AAME,MAAA,UAAU,EAAE;AANd,MADF,CAXF,CADF;AAwBD;;;EAnDoByD;;IA2DjB0B;;;;;;;;;UACJzD,SAAA,kBAAS;AACP,wBACE9B,wDACEA,6BAAC+D,QAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAA5B,oBAAkDhE,6BAACiE,wBAAD,OAAlD,CADF,CADF;AAKD;;;EAPoBC;;IAejBsB;;;AACJ,uBAAYlG,KAAZ,EAAmB;AAAA;;AACjB,qCAAMA,KAAN;AAEA,wBAAe;AACb8E,MAAAA,OAAO,EAAE,CADI;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;;AAKA,WAAKlB,SAAL;;AARiB;AASlB;;;;UAEDrB,SAAA,kBAAS;AAAA;;AACP,wBACE9B,uDACEA,6BAACgC,SAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,oBACEhC,6BAACsE,UAAD,qBACEtE,6BAACuE,gBAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAW2E,OAAvC;AAAgD,MAAA,QAAQ,EAAE,kBAAChE,KAAD;AAAA,eAAW,MAAI,CAACgD,QAAL,CAAc,SAAd,EAAyBhD,KAAzB,CAAX;AAAA;AAA1D,MADF,eAGEJ,6BAACuE,gBAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAW4E,OAAvC;AAAgD,MAAA,QAAQ,EAAE,kBAACjE,KAAD;AAAA,eAAW,MAAI,CAACgD,QAAL,CAAc,SAAd,EAAyBhD,KAAzB,CAAX;AAAA;AAA1D,MAHF,CADF,CADF,CADF;AAYD;;;EAzBuBoE;;AA4B1B,WAAe;AACbC,EAAAA,IAAI,EAAEC,cAAK,CAACe,IAAN,CAAWhB,IADJ;AAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACe,IAAN,CAAWb,WAFX;AAGb,WAAOF,cAAK,CAACe,IAAN,SAHM;AAKbZ,EAAAA,IAAI,EAAEU,QALO;AAMbT,EAAAA,OAAO,EAAEU,WANI;AAObxD,EAAAA,IAAI,EAAEgD,QAPO;AASbU,EAAAA,UAAU,EAAE;AATC,CAAf;;IC3GMC;;;;;;;;;SACJ7D,SAAA,kBAAS;AAAA;;AACP,+BAAcA,MAAd,yBACE9B,6BAACyD,UAAD;AAAO,MAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWW,KAAzB;AAAgC,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWe,OAAX,CAAmBkD,WAAhE;AAA6E,MAAA,QAAQ,EAAE;AAAA,YAAGC,MAAH,QAAGA,MAAH;AAAA,eAAgB,KAAI,CAACnC,WAAL,CAAiBmC,MAAM,CAACvD,KAAxB,CAAhB;AAAA;AAAvF,MADF;AAGD;;;EALqByD;;IAalB+B;;;;;;;;;UACJ9D,SAAA,kBAAS;AACP,wBACE9B,wDACEA,6BAAC+D,QAAD;AAAK,MAAA,KAAK,EAAC;AAAX,oBAAqB/D,6BAAC6F,kBAAD,OAArB,CADF,CADF;AAKD;;;EAPqB3B;;IAelB4B;;;AACJ,wBAAYxG,KAAZ,EAAmB;AAAA;;AACjB,qCAAMA,KAAN;AAEA,wBAAe;AACbyG,MAAAA,aAAa,EAAE;AADF,KAAf;;AAIA,WAAK5C,SAAL;;AAPiB;AAQlB;;;;UAEDrB,SAAA,kBAAS;AAAA;;AACP,wBACE9B,uDACEA,6BAACgC,SAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,oBACEhC,6BAACgG,aAAD;AAAU,MAAA,OAAO,EAAE,KAAKvG,KAAL,CAAWsG,aAA9B;AAA6C,MAAA,QAAQ,EAAE;AAAA,YAAGpC,MAAH,SAAGA,MAAH;AAAA,eAAgB,MAAI,CAACP,QAAL,CAAc,eAAd,EAA+BO,MAAM,CAACsC,OAAtC,CAAhB;AAAA;AAAvD,iBADF,CADF,CADF;AAOD;;;EAnBwBzB;;AAuB3B,YAAe;AACbC,EAAAA,IAAI,EAAEC,cAAK,CAACwB,KAAN,CAAYzB,IADL;AAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACwB,KAAN,CAAYtB,WAFZ;AAGb,WAAOF,cAAK,CAACwB,KAAN,SAHM;AAKbrB,EAAAA,IAAI,EAAEe,SALO;AAMbd,EAAAA,OAAO,EAAEgB,YANI;AAOb9D,EAAAA,IAAI,EAAE2D;AAPO,CAAf;;IClDMQ;;;;;;;;;SACJrE,SAAA,kBAAS;AAAA;;AACP,+BAAcA,MAAd,yBACE9B,6BAACuE,gBAAD;AACA,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAWW,KADlB;AAEA,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWe,OAAX,CAAmBkD,WAFhC;AAGA,MAAA,QAAQ,EAAE,kBAACtD,KAAD;AAAA,eAAW,KAAI,CAACoB,WAAL,CAAiBpB,KAAjB,CAAX;AAAA,OAHV;AAIA,MAAA,KAAK,EAAE;AAACwD,QAAAA,KAAK,EAAE;AAAR;AAJP,MADF;AAQD;;;EAVsBC;;IAkBnBuC;;;;;;;;;UACJtE,SAAA,kBAAS;AACP,wBACE9B,wDACEA,6BAAC+D,QAAD;AAAK,MAAA,KAAK,EAAC;AAAX,oBAAqB/D,6BAACiE,oBAAD,OAArB,CADF,CADF;AAKD;;;EAPsBC;;IAenBmC;;;AACJ,yBAAY/G,KAAZ,EAAmB;AAAA;;AACjB,qCAAMA,KAAN;AAEA,wBAAe;AACb8E,MAAAA,OAAO,EAAE,CADI;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;;AAKA,WAAKlB,SAAL;;AARiB;AASlB;;;;UAEDrB,SAAA,kBAAS;AACP,wBACE9B,yCADF;AAID;;;EAjByBwE;;AAoB5B,aAAe;AACbC,EAAAA,IAAI,EAAEC,cAAK,CAAC4B,MAAN,CAAa7B,IADN;AAEbG,EAAAA,WAAW,EAAEF,cAAK,CAAC4B,MAAN,CAAa1B,WAFb;AAGb,WAAOF,cAAK,CAAC4B,MAAN,SAHM;AAKbzB,EAAAA,IAAI,EAAEuB,UALO;AAMbtB,EAAAA,OAAO,EAAEuB,aANI;AAObrE,EAAAA,IAAI,EAAEmE;AAPO,CAAf;;ICrDMI;;;;;;;;;SACJzE,SAAA,kBAAS;AACP,+BAAcA,MAAd,yBACE9B,6BAACyD,UAAD;AAAO,MAAA,WAAW,EAAC;AAAnB,MADF;AAGD;;;EALwBI;;IAarB2C;;;;;;;;;UACJ1E,SAAA,kBAAS;AACP,wBACE9B,wDACEA,6BAAC+D,QAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAA5B,oBAAkDhE,6BAACiE,yBAAD,OAAlD,CADF,CADF;AAKD;;;EAPwBC;;IAerBuC;;;AACJ,2BAAYnH,KAAZ,EAAmB;AAAA;;AACjB,oCAAMA,KAAN;AAEA,uBAAe;AACb8E,MAAAA,OAAO,EAAE,CADI;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;;AAKA,UAAKlB,SAAL;;AARiB;AASlB;;;;UAEDrB,SAAA,kBAAS;AAAA;;AACP,wBACE9B,uDACEA,6BAACgC,SAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,oBACEhC,6BAACsE,UAAD,qBACEtE,6BAACuE,gBAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAW2E,OAAvC;AAAgD,MAAA,QAAQ,EAAE,kBAAChE,KAAD;AAAA,eAAW,MAAI,CAACgD,QAAL,CAAc,SAAd,EAAyBhD,KAAzB,CAAX;AAAA;AAA1D,MADF,eAGEJ,6BAACuE,gBAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAW4E,OAAvC;AAAgD,MAAA,QAAQ,EAAE,kBAACjE,KAAD;AAAA,eAAW,MAAI,CAACgD,QAAL,CAAc,SAAd,EAAyBhD,KAAzB,CAAX;AAAA;AAA1D,MAHF,CADF,CADF,CADF;AAYD;;;EAzB2BoE;;AA4B9B,eAAe;AACbC,EAAAA,IAAI,EAAEC,cAAK,CAACsB,QAAN,CAAevB,IADR;AAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACsB,QAAN,CAAepB,WAFf;AAGb,WAAOF,cAAK,CAACsB,QAAN,SAHM;AAKbnB,EAAAA,IAAI,EAAE2B,YALO;AAMb1B,EAAAA,OAAO,EAAE2B,eANI;AAObzE,EAAAA,IAAI,EAAEuE;AAPO,CAAf;;ICvDMG;;;AACJ,sBAAYpH,KAAZ,EAAmB;AAAA;;AACjB,iCAAMA,KAAN;AAEA,UAAKG,KAAL,GAAa;AACXW,MAAAA,KAAK,EAAEd,KAAK,CAACc,KADF;AAEXI,MAAAA,OAAO,EAAE;AAFE,KAAb;AAKA,QAAIlB,KAAK,CAACa,MAAN,CAAaW,QAAjB,EAA2B,MAAKrB,KAAL,CAAWe,OAAX,GAAqBlB,KAAK,CAACa,MAAN,CAAaW,QAAlC;;AAE3B,QAAG,CAAC,MAAKrB,KAAL,CAAWW,KAAZ,IAAqB,MAAKX,KAAL,CAAWe,OAAX,WAAxB,EAAoD;AAClD,YAAKf,KAAL,CAAWW,KAAX,GAAmB,MAAKX,KAAL,CAAWe,OAAX,WAAnB;;AAEA,YAAKE,QAAL,CAAc,MAAKP,MAAnB,EAA2B,MAAKV,KAAL,CAAWW,KAAtC;AACD;;AAED,UAAKX,KAAL,CAAWkH,KAAX,GAAmB,MAAKC,WAAL,EAAnB;AAhBiB;AAiBlB;;;;SAEDA,cAAA,uBAAc;AACZ,QAAI,CAAC,KAAKnH,KAAL,CAAWe,OAAX,CAAmBmG,KAAxB,EAA+B,OAAQ,EAAR;AAE/B,QAAMnG,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIqC,GAAT,IAAgB,KAAKpD,KAAL,CAAWe,OAAX,CAAmBmG,KAAnC,EAA0C;AACxC,UAAMvG,KAAK,GAAG,KAAKX,KAAL,CAAWe,OAAX,CAAmBmG,KAAnB,CAAyB9D,GAAzB,CAAd;AACArC,MAAAA,OAAO,CAACqG,IAAR,eAAa7G,6BAAC8G,WAAD,CAAQ,MAAR;AAAe,QAAA,KAAK,EAAEjE,GAAtB;AAA2B,QAAA,GAAG,EAAEA;AAAhC,SAAsCzC,KAAtC,CAAb;AACD;;AAED,WAAQI,OAAR;AACD;;SAEDsB,SAAA,kBAAS;AAAA;;AACP,+BAAcA,MAAd,yBACE9B,6BAAC8G,WAAD;AAAQ,MAAA,KAAK,EAAE,KAAKrH,KAAL,CAAWW,KAA1B;AAAiC,MAAA,QAAQ,EAAE,kBAACA,KAAD;AAAA,eAAY,MAAI,CAACoB,WAAL,CAAiBpB,KAAjB,CAAZ;AAAA;AAA3C,OACG,KAAKX,KAAL,CAAWkH,KADd,CADF;AAKD;;;EAtCsB9C;;IA8CnBkD;;;;;;;;;UACJjF,SAAA,kBAAS;AACP,wBACE9B,wDACEA,6BAAC+D,QAAD;AAAK,MAAA,KAAK,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAA5B,oBAAgDhE,6BAACiE,oBAAD,OAAhD,CADF,CADF;AAKD;;;EAPsBC;;IAenB8C;;;AACJ,yBAAY1H,KAAZ,EAAmB;AAAA;;AACjB,qCAAMA,KAAN;AAEA,wBAAe;AACb8E,MAAAA,OAAO,EAAE,CADI;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;;AAKA,WAAKlB,SAAL;;AARiB;AASlB;;;;UAEDrB,SAAA,kBAAS;AAAA;;AACP,wBACE9B,uDACEA,6BAACgC,SAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,oBACEhC,6BAACsE,UAAD,qBACEtE,6BAACuE,gBAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAW2E,OAAvC;AAAgD,MAAA,QAAQ,EAAE,kBAAChE,KAAD;AAAA,eAAW,MAAI,CAACgD,QAAL,CAAc,SAAd,EAAyBhD,KAAzB,CAAX;AAAA;AAA1D,MADF,eAGEJ,6BAACuE,gBAAD;AAAa,MAAA,GAAG,EAAE,CAAlB;AAAqB,MAAA,KAAK,EAAE,KAAK9E,KAAL,CAAW4E,OAAvC;AAAgD,MAAA,QAAQ,EAAE,kBAACjE,KAAD;AAAA,eAAW,MAAI,CAACgD,QAAL,CAAc,SAAd,EAAyBhD,KAAzB,CAAX;AAAA;AAA1D,MAHF,CADF,CADF,CADF;AAYD;;;EAzByBoE;;AA4B5B,aAAe;AACbC,EAAAA,IAAI,EAAEC,cAAK,CAACoC,MAAN,CAAarC,IADN;AAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACoC,MAAN,CAAalC,WAFb;AAGb,WAAOF,cAAK,CAACoC,MAAN,SAHM;AAKbjC,EAAAA,IAAI,EAAEkC,UALO;AAMbjC,EAAAA,OAAO,EAAEkC,aANI;AAObhF,EAAAA,IAAI,EAAE0E;AAPO,CAAf;;IC/GMO;;;;;;;;EAAoBC;;AAM1B,eAAe;AACbzC,EAAAA,IAAI,EAAE,QADO;AAEbG,EAAAA,WAAW,EAAE,mBAFA;AAGb,WAAOqC;AAHM,CAAf;;ICNME;;;;;;;;;SACJC,gBAAA,yBAAiB;AACf,WAAQ;AACNC,MAAAA,GAAG,EAAE;AACHpF,QAAAA,IAAI,EAAE,kBADH;AAEHC,QAAAA,SAAS,EAAE,KAFR;AAGHoF,QAAAA,KAAK,EAAE;AAHJ,OADC;AAMNC,MAAAA,GAAG,EAAE;AACHtF,QAAAA,IAAI,EAAE,kBADH;AAEHC,QAAAA,SAAS,EAAE,KAFR;AAGHoF,QAAAA,KAAK,EAAE;AAHJ;AANC,KAAR;AAYD;;;EAdsBJ;;AAmBzB,cAAe;AACbzC,EAAAA,IAAI,EAAE,OADO;AAEbG,EAAAA,WAAW,EAAE,OAFA;AAGb,WAAOuC;AAHM,CAAf;;ICKMK;;;AACJ,yBAAYlI,KAAZ,EAAkB;AAAA,WAChB,wBAAMA,KAAN,CADgB;AAEjB;;;;SAEDe,SAAA,gBAAOoH,KAAP,EAAcvG,EAAd,EAAkB;AAAA;;AAChB,2BAAMb,MAAN,YAAaoH,KAAb,EAAoB,UAAC9F,GAAD,EAAO;AACzB,UAAGA,GAAG,CAACpB,MAAJ,KAAe,SAAlB,EAA6B;AAC3B,eAAOW,EAAE,CAACS,GAAD,CAAT;AACD;;AAGD,UAAG,KAAI,CAACrC,KAAL,CAAWoI,IAAX,IAAmBD,KAAK,IAAI,KAAI,CAACnI,KAAL,CAAWoI,IAA1C,EAAgD;AAC9C,YAAMC,GAAG,4BAAT;;AAEA,QAAA,KAAI,CAAChH,OAAL,CAAa,IAAb,EAAmBgH,GAAnB;;AACA,eAAQzG,EAAE,CAAC;AACTX,UAAAA,MAAM,EAAE,OADC;AAETD,UAAAA,QAAQ,EAAE,IAFD;AAGTM,UAAAA,IAAI,EAAE+G;AAHG,SAAD,CAAV;AAKD;;AAEDzG,MAAAA,EAAE,CAACS,GAAD,CAAF;AACD,KAlBD;AAmBD;;;EAzByBgD,MAAM,CAAC3C;;IAiC7B4F;;;;;;;;EAAsBjD,MAAM,CAACE;;IAO7BgD;;;AACJ,4BAAYvI,KAAZ,EAAmB;AAAA;;AACjB,qCAAMA,KAAN;AAEA,wBAAe;AACb8E,MAAAA,OAAO,EAAE,CADI;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;AAHiB;AASlB;;;;UAEDvC,SAAA,kBAAS;AACP,wBACE9B,uDACEA,6BAACgC,SAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,MADF,CADF;AAYD;;;EAzB4BwC;;AA4B/B,gBAAe;AACbC,EAAAA,IAAI,EAAEC,cAAK,CAACoD,SAAN,CAAgBrD,IADT;AAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACoD,SAAN,CAAgBlD,WAFhB;AAGb,WAAOF,cAAK,CAACoD,SAAN,SAHM;AAKbjD,EAAAA,IAAI,EAAE+C,aALO;AAMb9C,EAAAA,OAAO,EAAE+C,gBANI;AAOb7F,EAAAA,IAAI,EAAEwF;AAPO,CAAf;;IChEMO;;;AAEJ,kBAAYzI,KAAZ,EAAmB;AAAA,WACjB,qBAAMA,KAAN,CADiB;AAElB;;;;SAEDI,QAAA,eAAMJ,KAAN,EAAa;AACX,QAAMqC,GAAG,uBAASjC,KAAT,YAAeJ,KAAf,CAAT;;AAEA,QAAI,CAACqC,GAAG,CAACvB,KAAT,EAAgBuB,GAAG,CAACvB,KAAJ,GAAY,EAAZ;AAEhB,SAAK6E,MAAL,gBAAmBtD,GAAG,CAACvB,KAAvB;AAEAuB,IAAAA,GAAG,CAACqG,KAAJ,GAAY,KAAZ;AACArG,IAAAA,GAAG,CAACsG,YAAJ,GAAmB;AACjBpF,MAAAA,GAAG,EAAE,EADY;AAEjBzC,MAAAA,KAAK,EAAE;AAFU,KAAnB;AAIAuB,IAAAA,GAAG,CAACuG,QAAJ,gBAAoBvG,GAAG,CAACvB,KAAxB;AACAuB,IAAAA,GAAG,CAACwG,UAAJ,GAAiB,KAAKC,iBAAL,CAAuBzG,GAAG,CAACuG,QAA3B,CAAjB;AAEA,WAAQvG,GAAR;AACD;;SAEDyG,oBAAA,2BAAkBC,IAAlB,EAAwB;AAAA;;AACtB,QAAMC,EAAE,GAAG,EAAX;;AADsB,+BAEbzF,GAFa;AAGpB,UAAMzC,KAAK,GAAGiI,IAAI,CAACxF,GAAD,CAAlB;AACAyF,MAAAA,EAAE,CAACzB,IAAH,CAAQ;AACNhE,QAAAA,GAAG,EAAEA,GADC;AAENzC,QAAAA,KAAK,EAAEA,KAFD;AAGNmI,QAAAA,OAAO,eAAEvI;AAAK,UAAA,SAAS,EAAC;AAAf,wBACPA;AAAM,UAAA,SAAS,EAAC,0BAAhB;AAA2C,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACwI,SAAL,CAAe3F,GAAf,CAAN;AAAA;AAApD,wBACE7C,wDAAMA,6BAACyI,oBAAD,OAAN,CADF,CADO,eAIPzI;AAAM,UAAA,SAAS,EAAC,0BAAhB;AAA2C,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAAC0I,SAAL,CAAe;AAAE7F,cAAAA,GAAG,EAAHA,GAAF;AAAOzC,cAAAA,KAAK,EAALA;AAAP,aAAf,CAAN;AAAA;AAApD,wBACEJ,wDAAMA,6BAAC2I,kBAAD,OAAN,CADF,CAJO;AAHH,OAAR;AAJoB;;AAEtB,SAAK,IAAI9F,GAAT,IAAgBwF,IAAhB,EAAsB;AAAA,YAAbxF,GAAa;AAcrB;;AACD,WAAQyF,EAAR;AACD;;SAEDM,oBAAA,2BAAkB/F,GAAlB,EAAuBzC,KAAvB,EAA8B;AAC5B,QAAM6H,YAAY,gBAAQ,KAAKxI,KAAL,CAAWwI,YAAnB,CAAlB;;AACAA,IAAAA,YAAY,CAACpF,GAAD,CAAZ,GAAoBzC,KAApB;AACA,SAAKN,QAAL,CAAc;AAAEmI,MAAAA,YAAY,EAAZA;AAAF,KAAd;AACD;;SAEDS,YAAA,mBAAUG,IAAV,EAAgB;AACd,QAAMpJ,KAAK,GAAG;AACZqJ,MAAAA,UAAU,EAAE,KADA;AAEZC,MAAAA,YAAY,EAAE,IAFF;AAGZd,MAAAA,YAAY,EAAEY,IAAI,IAAI;AACpBhG,QAAAA,GAAG,EAAE,EADe;AAEpBzC,QAAAA,KAAK,EAAE;AAFa,OAHV;AAOZ4H,MAAAA,KAAK,EAAE;AAPK,KAAd;AAUA,QAAIa,IAAJ,EAAUpJ,KAAK,CAACsJ,YAAN,gBAA0BtJ,KAAK,CAACwI,YAAhC;AAEV,SAAKnI,QAAL,CAAcL,KAAd;AACD;;SAED+I,YAAA,mBAAU3F,GAAV,EAAe;AACb,QAAMpD,KAAK,gBAAQ,KAAKA,KAAb,CAAX;;AACA,WAAOA,KAAK,CAACyI,QAAN,CAAerF,GAAf,CAAP;AACApD,IAAAA,KAAK,CAAC0I,UAAN,GAAmB,KAAKC,iBAAL,CAAuB3I,KAAK,CAACyI,QAA7B,CAAnB;AACA,SAAKpI,QAAL,CAAcL,KAAd;AAEA,SAAK+B,WAAL,CAAiB/B,KAAK,CAACyI,QAAvB;AACD;;SAEDc,eAAA,wBAAe;AAAA;;AACb,QAAMvJ,KAAK,gBAAQ,KAAKA,KAAb,CAAX;;AAEA,QAAMwJ,EAAE,GAAG,KAAKxJ,KAAL,CAAWwI,YAAtB;AAGA,QAAMiB,IAAI,GAAG,KAAK/I,MAAL,CAAYa,MAAzB;AAGA,QAAM6H,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAACI,EAAE,CAACpG,GAAJ,CAAJ,GAAeoG,EAAE,CAAC7I,KAAlB;AACA8I,IAAAA,IAAI,CAAC7I,MAAL,CAAYwI,IAAZ,EAAkB,UAACjH,KAAD,EAAQC,OAAR,EAAoB;AACpCpC,MAAAA,KAAK,CAACqJ,UAAN,GAAmBlH,KAAnB;AACAnC,MAAAA,KAAK,CAAC0J,iBAAN,GAA0BtH,OAA1B;;AAEA,UAAID,KAAK,KAAK,KAAd,EAAqB;AAEnB,YAAInC,KAAK,CAACsJ,YAAV,EAAwB;AACtB,iBAAOtJ,KAAK,CAACyI,QAAN,CAAezI,KAAK,CAACsJ,YAAN,CAAmBlG,GAAlC,CAAP;AACD;;AACDpD,QAAAA,KAAK,CAACyI,QAAN,CAAezI,KAAK,CAACwI,YAAN,CAAmBpF,GAAlC,IAAyCpD,KAAK,CAACwI,YAAN,CAAmB7H,KAA5D;AAEAX,QAAAA,KAAK,CAAC0I,UAAN,GAAmB,MAAI,CAACC,iBAAL,CAAuB3I,KAAK,CAACyI,QAA7B,CAAnB;AAEAzI,QAAAA,KAAK,CAACuI,KAAN,GAAc,KAAd;AACD;;AAED,MAAA,MAAI,CAAClI,QAAL,CAAcL,KAAd;;AACA,MAAA,MAAI,CAAC+B,WAAL,CAAiB/B,KAAK,CAACyI,QAAvB;AACD,KAlBD;AAoBD;;SAEDpG,SAAA,kBAAS;AAAA;;AACP,QAAMsH,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAA,MAAI,CAACtJ,QAAL,CAAc;AAAEkI,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAFD;;AAIA,QAAMqB,OAAO,GAAG,CACd;AACEC,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,KAFb;AAGE1G,MAAAA,GAAG,EAAE;AAHP,KADc,EAMd;AACEyG,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,SAAS,EAAE,OAFb;AAGE1G,MAAAA,GAAG,EAAE;AAHP,KANc,EAWd;AACEyG,MAAAA,KAAK,eAAEtJ;AAAK,QAAA,SAAS,EAAC;AAAf,sBACLA;AAAM,QAAA,SAAS,EAAC,0BAAhB;AAA2C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC0I,SAAL,EAAN;AAAA;AAApD,sBACE1I,gEAAUA,6BAACwJ,kBAAD,OAAV,CADF,CADK,CADT;AAMED,MAAAA,SAAS,EAAE,SANb;AAOE1G,MAAAA,GAAG,EAAE,SAPP;AAQE4G,MAAAA,KAAK,EAAE;AART,KAXc,CAAhB;AAuBA,QAAMC,MAAM,GAAG;AACbC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADG;AAEbC,MAAAA,UAAU,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFC,KAAf;AAKA,+BAAc9H,MAAd,yBAAqB9B,uDACnBA,6BAAC8J,UAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,OAAO,EAAE,KAAKrK,KAAL,CAAWuI,KAHtB;AAIE,MAAA,KAAK,EAAE,GAJT;AAKE,MAAA,IAAI,EAAE,KAAKgB,YAAL,CAAkBe,IAAlB,CAAuB,IAAvB,CALR;AAME,MAAA,QAAQ,EAAEX;AANZ,OAQG,KAAK3J,KAAL,CAAWqJ,UAAX,KAA0B,IAA1B,gBACC9I;AAAK,MAAA,KAAK,EAAE;AAAEmC,QAAAA,YAAY,EAAE;AAAhB;AAAZ,oBACEnC,6BAACgK,UAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,OAAO,EAAE,KAAKvK,KAAL,CAAW0J,iBAAxC;AAA2D,MAAA,IAAI,EAAC;AAAhE,MADF,CADD,GAKG,IAbN,eAeEnJ,6BAACgC,SAAD,EACM0H,MADN,eAGE1J,6BAACgC,SAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,oBACEhC,6BAACyD,UAAD;AAAO,MAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWwI,YAAX,CAAwBpF,GAAtC;AAA2C,MAAA,QAAQ,EAAE;AAAA,YAAGc,MAAH,QAAGA,MAAH;AAAA,eAAgB,MAAI,CAACiF,iBAAL,CAAuB,KAAvB,EAA8BjF,MAAM,CAACvD,KAArC,CAAhB;AAAA;AAArD,MADF,CAHF,eAOEJ,6BAACgC,SAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC;AAAjB,oBACEhC,6BAACyD,UAAD;AAAO,MAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWwI,YAAX,CAAwB7H,KAAtC;AAA6C,MAAA,QAAQ,EAAE;AAAA,YAAGuD,MAAH,SAAGA,MAAH;AAAA,eAAgB,MAAI,CAACiF,iBAAL,CAAuB,OAAvB,EAAgCjF,MAAM,CAACvD,KAAvC,CAAhB;AAAA;AAAvD,MADF,CAPF,CAfF,CADmB,eA+BnBJ,6BAACiK,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,UAAU,EAAE,KAAKxK,KAAL,CAAW0I,UAFzB;AAGE,MAAA,OAAO,EAAEkB,OAHX;AAIE,MAAA,UAAU,EAAE;AACVa,QAAAA,KAAK,EAAE,KAAKzK,KAAL,CAAW0I,UAAX,CAAsBgC,MADnB;AAEVC,QAAAA,QAAQ,EAAE,KAAK3K,KAAL,CAAW0I,UAAX,CAAsBgC,MAFtB;AAGVE,QAAAA,gBAAgB,EAAE;AAHR;AAJd,MA/BmB,CAArB;AA0CD;;;EAvLkBxG;;IA+LfyG;;;;;;;;;UACJxI,SAAA,kBAAS;AACP,wBACE9B,wDACEA,6BAAC+D,QAAD;AAAK,MAAA,KAAK,EAAC;AAAX,oBAAqB/D,6BAACiE,uBAAD,OAArB,CADF,CADF;AAKD;;;EAPkBC;;IAefqG;;;AACJ,qBAAYjL,KAAZ,EAAmB;AAAA;;AACjB,qCAAMA,KAAN;AAEA,wBAAe;AACb8E,MAAAA,OAAO,EAAE,CADI;AAEbC,MAAAA,OAAO,EAAE;AAFI,KAAf;;AAKA,WAAKlB,SAAL;;AARiB;AASlB;;;;UAEDrB,SAAA,kBAAS;AACP,wBACE9B,yCADF;AAID;;;EAjBqBwE;;AAoBxB,SAAe;AACbC,EAAAA,IAAI,EAAEC,cAAK,CAAC8F,EAAN,CAAS/F,IADF;AAEbG,EAAAA,WAAW,EAAEF,cAAK,CAAC8F,EAAN,CAAS5F,WAFT;AAGb,WAAOF,cAAK,CAAC8F,EAAN,SAHM;AAKb3F,EAAAA,IAAI,EAAEyF,MALO;AAMbxF,EAAAA,OAAO,EAAEyF,SANI;AAObvI,EAAAA,IAAI,EAAE+F;AAPO,CAAf;;ACxPA,YAAe;AACbtC,EAAAA,IAAI,EAAJA,IADa;AAEbS,EAAAA,KAAK,EAALA,KAFa;AAGbvB,EAAAA,MAAM,EAANA,MAHa;AAIb2B,EAAAA,MAAM,EAANA,MAJa;AAKbQ,EAAAA,MAAM,EAANA,MALa;AAMbd,EAAAA,QAAQ,EAARA,QANa;AAOb1C,EAAAA,MAAM,EAANA,QAPa;AAQbmH,EAAAA,KAAK,EAALA,OARa;AASb3C,EAAAA,SAAS,EAATA,SATa;AAUb0C,EAAAA,EAAE,EAAFA;AAVa,CAAf;;ICRaE,cAAb;AAAA;;AACE,0BAAYC,IAAZ,EAAkBnK,OAAlB,EAA2B;AAAA,WACzB,mBAAMmK,IAAN,EAAYnK,OAAZ,CADyB;AAE1B;;AAHH;;AAAA,SAKEoK,QALF,GAKE,kBAAS1B,IAAT,EAAe;AACb,WAAQ2B,KAAK,CAAC3B,IAAD,CAAb;AACD,GAPH;;AAAA,SASE4B,OATF,GASE,iBAAQ3K,MAAR,EAAgB;AAEd,sBAAM2K,OAAN,YAAc3K,MAAd;AACD,GAZH;;AAAA;AAAA,EAAoCA,eAApC;;ICOa4K,kBAAb;AAAA;;AACE,8BAAYzL,KAAZ,EAAmB;AAAA;;AACjB,0CAAMA,KAAN;AAEA,UAAK0L,OAAL,GAAehL,cAAK,CAACiL,SAAN,EAAf;AAHiB;AAIlB;;AALH;;AAAA,SAOEvL,KAPF,GAOE,eAAMJ,KAAN,EAAaS,KAAb,EAAoB;AAClB,QAAMN,KAAK,GAAG,EAAd;AAEA,SAAKU,MAAL,GAAcb,KAAK,CAACa,MAApB;AACA,SAAKsH,KAAL,GAAanI,KAAK,CAACmI,KAAnB;;AAEA,QAAI,CAAC,KAAKA,KAAN,IAAe,EAAE,OAAOnI,KAAK,CAACmI,KAAb,KAAuB,QAAzB,CAAnB,EAAuD;AACrD,WAAKA,KAAL,GAAa,IAAIyD,cAAJ,CAAkB,KAAK/K,MAAvB,CAAb;AACD;;AAEDV,IAAAA,KAAK,CAACgI,KAAN,GAAc,KAAKA,KAAL,CAAW0D,QAAX,EAAd;AACA1L,IAAAA,KAAK,CAACY,MAAN,GAAef,KAAK,CAACe,MAAN,IAAgB,KAA/B;AAEAZ,IAAAA,KAAK,CAAC2L,QAAN,GAAiB,KAAKC,MAAL,CAAY5L,KAAK,CAACgI,KAAlB,EAAyBhI,KAAK,CAACY,MAA/B,CAAjB;AAEA,SAAKiL,UAAL,GAAkB,EAAlB;AAEA,SAAK5K,QAAL,GAAgBpB,KAAK,CAACoB,QAAN,GAAiBpB,KAAK,CAACoB,QAAvB,GAAkC,YAAM,EAAxD;AAEA,WAAQjB,KAAR;AACD,GA3BH;;AAAA,SA6BE8L,aA7BF,GA6BE,uBAAcC,IAAd,EAAoB;AAClB,SAAK/D,KAAL,CAAWgE,GAAX,CAAeD,IAAf;;AACA,QAAME,MAAM,GAAG,KAAKjE,KAAL,CAAW0D,QAAX,EAAf;;AACA,SAAKzK,QAAL,CAAcgL,MAAd;AACA,SAAK5L,QAAL,CAAc;AACZ2H,MAAAA,KAAK,EAAEiE,MADK;AAEZN,MAAAA,QAAQ,EAAE,KAAKC,MAAL,CAAYK,MAAZ,EAAoB,KAApB;AAFE,KAAd;AAID,GArCH;;AAAA,SAuCEC,oBAvCF,GAuCE,8BAAqBH,IAArB,EAA2B;AACzB,SAAK/D,KAAL,CAAWmE,MAAX,CAAkBJ,IAAlB;;AACA,QAAME,MAAM,GAAG,KAAKjE,KAAL,CAAW0D,QAAX,EAAf;;AACA,SAAKzK,QAAL,CAAcgL,MAAd;AACA,SAAK5L,QAAL,CAAc;AACZ2H,MAAAA,KAAK,EAAEiE,MADK;AAEZN,MAAAA,QAAQ,EAAE,KAAKC,MAAL,CAAYK,MAAZ,EAAoB,KAApB;AAFE,KAAd;AAID,GA/CH;;AAAA,SAiDEG,QAjDF,GAiDE,kBAASL,IAAT,EAAepL,KAAf,EAAsB;AACpB,SAAKqH,KAAL,CAAWgE,GAAX,CAAeD,IAAf,EAAqBpL,KAArB;;AACA,QAAMsL,MAAM,GAAG,KAAKjE,KAAL,CAAW0D,QAAX,EAAf;;AACA,SAAKzK,QAAL,CAAcgL,MAAd;AACA,SAAK5L,QAAL,CAAc;AACZ2H,MAAAA,KAAK,EAAEiE;AADK,KAAd;AAGD,GAxDH;;AAAA,SA0DEjE,KA1DF,GA0DE,eAAMA,MAAN,EAAapH,MAAb,EAAqB,EA1DvB;;AAAA,SAmEEgL,MAnEF,GAmEE,gBAAO5D,KAAP,EAAcpH,MAAd,EAAsB;AAAA;;AACpB,QAAMyL,QAAQ,GAAG,SAAXA,QAAW,CAAC3L,MAAD,EAASsH,KAAT,EAAgB9F,GAAhB,EAAqB6J,IAArB,EAA8B;AAC7CA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEAO,MAAAA,cAAK,CAACC,WAAN,CAAkB7L,MAAlB,EAA0B,UAAC8L,KAAD,EAAQC,IAAR,EAAiB;AACzC,YAAMC,MAAM,gBAAQ1B,KAAK,CAAC2B,OAAN,CAAcF,IAAd,IAAsBA,IAAI,CAAC,CAAD,CAA1B,GAAgCA,IAAxC,CAAZ;;AACA,YAAMG,QAAQ,GAAG5E,KAAK,GAAGA,KAAK,CAAC0E,MAAM,CAACG,KAAR,CAAR,GAAyB,IAA/C;AACA,YAAMC,OAAO,GAAGf,IAAI,GAAG,GAAP,GAAaW,MAAM,CAACG,KAApC;;AAEA,YAAIH,MAAM,CAACK,OAAP,KAAmB,IAAvB,EAA6B;AAC3B,cAAMnD,OAAO,GAAG,CACd;AACEE,YAAAA,SAAS,EAAE,MADb;AAEE1G,YAAAA,GAAG,EAAE,MAFP;AAGEe,YAAAA,KAAK,EAAE;AAHT,WADc,EAMd;AACE2F,YAAAA,SAAS,EAAE,SADb;AAEE1G,YAAAA,GAAG,EAAE,SAFP;AAGE4G,YAAAA,KAAK,EAAE;AAHT,WANc,CAAhB;AAYA,cAAMtB,UAAU,GAAG,EAAnB;AAEA,cAAIsE,SAAS,GAAGJ,QAAhB;AACA,cAAM7L,OAAO,GAAG2L,MAAM,CAACO,MAAP,IAAiB,EAAjC;AACA,cAAMrF,GAAG,GAAG7G,OAAO,CAAC6G,GAAR,GAAc7G,OAAO,CAAC6G,GAAtB,GAA6B8E,MAAM,CAACjK,SAAP,KAAqB,IAArB,GAA4B,CAA5B,GAAgC,CAAzE;;AAEA,cAAIiK,MAAM,CAACQ,QAAP,KAAoB,IAAxB,EAA8B;AAC5B,gBAAIF,SAAS,GAAGhF,KAAK,CAAC0E,MAAM,CAACG,KAAR,CAArB;AAEA,gBAAI,CAAC7B,KAAK,CAAC2B,OAAN,CAAcC,QAAd,CAAL,EAA8BI,SAAS,GAAGhF,KAAK,CAAC0E,MAAM,CAACG,KAAR,CAAL,GAAsB,EAAlC;;AAG9B,gBAAIjF,GAAG,GAAGoF,SAAS,CAACtC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,mBAAK,IAAItK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIwH,GAAG,GAAGoF,SAAS,CAACtC,MAArC,EAA6CtK,CAAC,EAA9C,EAAkD;AAChD4M,gBAAAA,SAAS,CAAC5F,IAAV,CAAe,EAAf;AACD;AACF;;AAV2B;AAa1B,kBAAMzG,KAAK,GAAGqM,SAAS,CAAC5M,CAAD,CAAvB;AACA,kBAAMgD,GAAG,GAAG0J,OAAO,GAAG,GAAV,GAAgB1M,CAA5B;AAEA,kBAAM+M,KAAK,GAAG,EAAd;AACAd,cAAAA,QAAQ,CAACK,MAAD,EAAS/L,KAAT,EAAgBwM,KAAhB,EAAuB/J,GAAvB,CAAR;AAEAsF,cAAAA,UAAU,CAACtB,IAAX,CAAgB;AACdhE,gBAAAA,GAAG,EAAHA,GADc;AAEdgK,gBAAAA,IAAI,EAAED,KAFQ;AAGdrE,gBAAAA,OAAO,eAAEvI,6BAAC8M,WAAD;AAAQ,kBAAA,IAAI,EAAC,OAAb;AAAqB,kBAAA,OAAO,EAAE;AAAA,2BAAM,MAAI,CAACnB,oBAAL,CAA0B9I,GAA1B,CAAN;AAAA;AAA9B,gCACP7C,wDAAMA,6BAACyI,oBAAD,OAAN,CADO;AAHK,eAAhB;AAnB0B;;AAY5B,iBAAK,IAAI5I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4M,SAAS,CAACtC,MAA9B,EAAsCtK,CAAC,EAAvC,EAA2C;AAAA;AAc1C;AACF,WA3BD,MA4BK;AACH,mBAAOsM,MAAM,CAAClK,IAAd;AACA,gBAAM4B,QAAQ,GAAGsI,MAAM,CAAC7E,KAAP,CAAatF,IAA9B;;AAQA,gBAAI,CAACyI,KAAK,CAAC2B,OAAN,CAAcC,QAAd,CAAL,EAA8B;AAC5B5E,cAAAA,KAAK,CAACyE,IAAI,CAACI,KAAN,CAAL,GAAoB,EAApB;AACAG,cAAAA,SAAS,GAAGhF,KAAK,CAACyE,IAAI,CAACI,KAAN,CAAjB;AACD;;AAED,gBAAI,CAACG,SAAL,EAAgB,OAAQ9K,GAAR;;AAEhB,gBAAI0F,GAAG,GAAGoF,SAAS,CAACtC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,mBAAK,IAAItK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIwH,GAAG,GAAGoF,SAAS,CAACtC,MAArC,EAA6CtK,CAAC,EAA9C,EAAkD;AAChD4M,gBAAAA,SAAS,CAAC5F,IAAV,CAAe,IAAf;AACD;AACF;;AArBE;AAwBD,kBAAMzG,KAAK,GAAGqM,SAAS,CAAC5M,CAAD,CAAvB;AACA,kBAAMgD,GAAG,GAAG0J,OAAO,GAAG,GAAV,GAAgB1M,CAA5B;AAEAsI,cAAAA,UAAU,CAACtB,IAAX,CAAgB;AACdhE,gBAAAA,GAAG,EAAHA,GADc;AAEdgK,gBAAAA,IAAI,eAAE7M,6BAAC,QAAD;AACJ,kBAAA,MAAM,EAAEmM,MADJ;AAEJ,kBAAA,KAAK,EAAE/L,KAFH;AAGJ,kBAAA,MAAM,EAAEC,MAHJ;AAIJ,kBAAA,IAAI,EAAE,MAAI,CAACf,KAAL,CAAWoI,IAJb;AAKJ,kBAAA,QAAQ,EAAE,kBAACvH,MAAD,EAASC,KAAT;AAAA,2BAAmB,MAAI,CAACyL,QAAL,CAAchJ,GAAd,EAAmBzC,KAAnB,CAAnB;AAAA,mBALN;AAMJ,kBAAA,UAAU,EAAE,IANR;AASJ,kBAAA,OAAO,EAAE,iBAACwB,KAAD,EAAQC,OAAR,EAAoB;AAC3B,wBAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,sBAAA,MAAI,CAAC0J,UAAL,CAAgBzI,GAAhB,IAAuBhB,OAAvB;AACD,qBAFD,MAGK;AACH,0BAAMkL,GAAG,GAAG,MAAI,CAACzB,UAAL,CAAgBzI,GAAhB,CAAZ;;AACA,0BAAIkK,GAAJ,EAAS;AACP,+BAAO,MAAI,CAACzB,UAAL,CAAgBzI,GAAhB,CAAP;AACD;AACF;AACF;AAnBG,kBAFQ;AAuBd0F,gBAAAA,OAAO,eAAEvI,6BAAC8M,WAAD;AAAQ,kBAAA,IAAI,EAAC,OAAb;AAAqB,kBAAA,OAAO,EAAE;AAAA,2BAAM,MAAI,CAACnB,oBAAL,CAA0B9I,GAA1B,CAAN;AAAA;AAA9B,gCACP7C,wDAAMA,6BAACyI,oBAAD,OAAN,CADO;AAvBK,eAAhB;AA3BC;;AAuBH,iBAAK,IAAI5I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4M,SAAS,CAACtC,MAA9B,EAAsCtK,CAAC,EAAvC,EAA2C;AAAA;AA+B1C;AACF;;AAED8B,UAAAA,GAAG,CAACkF,IAAJ,eAAS7G,6BAACgC,SAAD,CAAM,IAAN;AAAW,YAAA,GAAG,EAAEmK,MAAM,CAACa,MAAvB;AAA+B,YAAA,OAAO,EAAE;AAAxC,0BACPhN;AAAK,YAAA,SAAS,EAAC;AAAf,0BACEA,6BAACiN,SAAD;AAAM,YAAA,IAAI,EAAC,OAAX;AAAmB,YAAA,KAAK,EAAEd,MAAM,CAACe,QAAP,CAAgBjL,IAA1C;AAAgD,YAAA,KAAK,eAAEjC;AAAK,cAAA,SAAS,EAAC;AAAf,4BACrDA;AAAM,cAAA,SAAS,EAAC,0BAAhB;AAA2C,cAAA,OAAO,EAAE;AAAA,uBAAM,MAAI,CAACuL,aAAL,CAAmBgB,OAAO,GAAG,GAAV,GAAgBE,SAAS,CAACtC,MAA7C,CAAN;AAAA;AAApD,4BACEnK,wDAAMA,6BAACwJ,kBAAD,OAAN,CADF,CADqD;AAAvD,0BAKExJ,6BAACiK,UAAD;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,UAAU,EAAE9B,UAFd;AAGE,YAAA,OAAO,EAAEkB,OAHX;AAIE,YAAA,aAAa,EAAC,QAJhB;AAKE,YAAA,UAAU,EAAE,KALd;AAME,YAAA,UAAU,EAAE;AACVa,cAAAA,KAAK,EAAE/B,UAAU,CAACgC,MADR;AAEVC,cAAAA,QAAQ,EAAEjC,UAAU,CAACgC,MAFX;AAGVE,cAAAA,gBAAgB,EAAE;AAHR,aANd;AAWE,YAAA,QAAQ;AAXV,YALF,CADF,CADO,CAAT;AAwBD,SAhID,MAiIK;AACH,cAAI8B,MAAM,CAACQ,QAAP,KAAoB,IAAxB,EAA8B;AAC5B,gBAAMC,KAAK,GAAG,EAAd;AACAd,YAAAA,QAAQ,CAACK,MAAD,EAASE,QAAT,EAAmBO,KAAnB,EAA0BL,OAA1B,CAAR;AAEA5K,YAAAA,GAAG,CAACkF,IAAJ,eAAS7G;AAAK,cAAA,GAAG,EAAEmM,MAAM,CAACa,MAAjB;AAAyB,cAAA,SAAS,EAAC;AAAnC,4BACPhN,6BAACiN,SAAD;AAAM,cAAA,IAAI,EAAC,OAAX;AAAmB,cAAA,KAAK,EAAEd,MAAM,CAAClK;AAAjC,eACG2K,KADH,CADO,CAAT;AAKD,WATD,MAUK;AACH,gBAAM/I,SAAQ,GAAGqI,IAAI,CAAC5E,KAAL,CAAWtF,IAA5B;AAEAL,YAAAA,GAAG,CAACkF,IAAJ,eAAS7G,6BAAC,SAAD;AACP,cAAA,MAAM,EAAEmM,MADD;AAEP,cAAA,KAAK,EAAEE,QAFA;AAGP,cAAA,GAAG,EAAEF,MAAM,CAACa,MAHL;AAIP,cAAA,MAAM,EAAE3M,MAJD;AAKP,cAAA,IAAI,EAAE,MAAI,CAACf,KAAL,CAAWoI,IALV;AAMP,cAAA,QAAQ,EAAE,kBAACvH,MAAD,EAASC,KAAT;AAAA,uBAAmB,MAAI,CAACyL,QAAL,CAAcU,OAAd,EAAuBnM,KAAvB,CAAnB;AAAA,eANH;AASP,cAAA,OAAO,EAAE,iBAACwB,KAAD,EAAQC,OAAR,EAAoB;AAC3B,oBAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,kBAAA,MAAI,CAAC0J,UAAL,CAAgBa,MAAM,CAACa,MAAvB,IAAiCnL,OAAjC;AACD,iBAFD,MAGK;AACH,sBAAMkL,GAAG,GAAG,MAAI,CAACzB,UAAL,CAAgBa,MAAM,CAACa,MAAvB,CAAZ;;AACA,sBAAID,GAAJ,EAAS;AACP,2BAAO,MAAI,CAACzB,UAAL,CAAgBa,MAAM,CAACa,MAAvB,CAAP;AACD;AACF;AACF;AAnBM,cAAT;AAqBD;AACF;AACF,OA3KD;AA4KA,aAAQrL,GAAR;AACD,KAhLD;;AAkLA,QAAMA,GAAG,GAAG,EAAZ;AACAmK,IAAAA,QAAQ,CAAC,KAAK3L,MAAL,CAAYY,OAAZ,CAAoBZ,MAArB,EAA6BsH,KAA7B,EAAoC9F,GAApC,CAAR;AACA,WAAQA,GAAR;AACD,GAzPH;;AAAA,SA2PEG,MA3PF,GA2PE,kBAAS;AAEP,QAAM4H,MAAM,GAAG;AACbC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADG;AAEbC,MAAAA,UAAU,EAAE;AAAED,QAAAA,IAAI,EAAE;AAAR;AAFC,KAAf;AAKA,wBAAQ5J,6BAACgC,SAAD;AACN,MAAA,GAAG,EAAE,KAAKgJ;AADJ,OAEFtB,MAFE;AAGN,MAAA,IAAI,EAAC;AAHC,QAIL,KAAKjK,KAAL,CAAW2L,QAJN,CAAR;AAMD,GAxQH;;AAAA;AAAA,EAAwC/L,iBAAxC;;ACAA,IAAM8N,QAAQ,GAAG,EAAjB;AACA,IAAMC,eAAe,GAAG,EAAxB;;AACA,KAAK,IAAIvN,CAAT,IAAcgL,KAAd,EAAqB;AACnBsC,EAAAA,QAAQ,CAACtN,CAAD,CAAR,GAAcgL,KAAK,CAAChL,CAAD,CAAL,CAAS+E,WAAvB;;AACA,MAAI/E,CAAC,KAAK,OAAV,EAAmB;AACjBuN,IAAAA,eAAe,CAACvN,CAAD,CAAf,GAAqBgL,KAAK,CAAChL,CAAD,CAAL,CAAS+E,WAA9B;AACD;AACF;;AAGD,IAAMyI,UAAU,GAAG;AACjBxK,EAAAA,GAAG,EAAE;AACHZ,IAAAA,IAAI,EAAE,mBADH;AAEHqF,IAAAA,KAAK,EAAEuD,KAAK,CAAC/C,SAFV;AAGH5F,IAAAA,SAAS,EAAE,IAHR;AAIHoL,IAAAA,SAAS,EAAE;AAJR,GADY;AAOjBpE,EAAAA,IAAI,EAAE;AACJjH,IAAAA,IAAI,EAAE,YADF;AAEJqF,IAAAA,KAAK,EAAE,QAFH;AAGJpF,IAAAA,SAAS,EAAE,IAHP;AAIJpB,IAAAA,QAAQ,EAAE;AACR6F,MAAAA,KAAK,EAAEwG;AADC,KAJN;AAOJG,IAAAA,SAAS,EAAE;AAPP,GAPW;AAgBjBC,EAAAA,GAAG,EAAE;AACHtL,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,SAAS,EAAE,KAFR;AAGHoF,IAAAA,KAAK,EAAE,QAHJ;AAIHgG,IAAAA,SAAS,EAAE;AAJR,GAhBY;AAsBjBE,EAAAA,QAAQ,EAAE;AACRvL,IAAAA,IAAI,EAAE,uBADE;AAERC,IAAAA,SAAS,EAAE,KAFH;AAGRoF,IAAAA,KAAK,EAAE,QAHC;AAIRmG,IAAAA,QAAQ,EAAE,CAJF;AAKR3M,IAAAA,QAAQ,EAAE;AACR4M,MAAAA,aAAa,EAAE;AADP,KALF;AAQRJ,IAAAA,SAAS,EAAE;AARH;AAtBO,CAAnB;AA0CA,IAAaK,0BAAb;AAAA;;AACE,sCAAYrO,KAAZ,EAAmB;AAAA;;AACjB,wCAAMA,KAAN;AAEA,UAAK0L,OAAL,GAAehL,cAAK,CAACiL,SAAN,EAAf;AACA,UAAKxL,KAAL,GAAa,MAAKC,KAAL,CAAWJ,KAAX,EAAkB,IAAlB,CAAb;AACA,UAAKsO,aAAL,GAAqBP,UAArB;AALiB;AAMlB;;AAPH;;AAAA,SASE1N,kBATF,GASE,4BAAmBL,KAAnB,EAA0B;AACxB,QAAIM,OAAO,GAAG,KAAd;;AACA,QAAIH,KAAK,gBAAQ,KAAKA,KAAb,CAAT;;AAEA,QAAI,KAAKH,KAAL,CAAWuO,OAAX,KAAuBvO,KAAK,CAACuO,OAAjC,EAA0C;AACxC,WAAKD,aAAL,GAAqBP,UAArB;AACA5N,MAAAA,KAAK,GAAG,KAAKC,KAAL,CAAW,KAAKJ,KAAhB,CAAR;AACAM,MAAAA,OAAO,GAAG,IAAV;AACD;;AAED,QAAIA,OAAO,KAAK,IAAhB,EAAsB,KAAKE,QAAL,CAAcL,KAAd;AACvB,GApBH;;AAAA,SAsBEC,KAtBF,GAsBE,eAAMJ,KAAN,EAAaS,KAAb,EAAoB;AAOlB,QAAMN,KAAK,GAAG;AACZqO,MAAAA,OAAO,EAAE,KADG;AAEZC,MAAAA,QAAQ,EAAEzO,KAAK,CAACc,KAFJ;AAGZyM,MAAAA,IAAI,EAAE;AACJpN,QAAAA,KAAK,EAAE,SADH;AAEJuE,QAAAA,KAAK,EAAE;AAFH,OAHM;AAOZ5D,MAAAA,KAAK,EAAE,EAPK;AAQZyN,MAAAA,OAAO,EAAEvO,KAAK,CAACuO,OARH;AASZnG,MAAAA,IAAI,EAAEpI,KAAK,CAACoI,IATA;AAUZrH,MAAAA,MAAM,EAAE;AAVI,KAAd;;AAaA,QAAIZ,KAAK,CAACiI,IAAN,IAAcjI,KAAK,CAACiI,IAAN,CAAWsF,MAA7B,EAAqC;AACnCvN,MAAAA,KAAK,CAACuO,WAAN,GAAoBvO,KAAK,CAACiI,IAAN,CAAWsF,MAA/B;AACD,KAFD,MAGKvN,KAAK,CAACuO,WAAN,GAAoB,EAApB;;AAEL,QAAI1O,KAAK,CAACc,KAAV,EAAiB;AACf,UAAM6N,GAAG,GAAG3O,KAAK,CAACc,KAAlB;AAEAX,MAAAA,KAAK,CAACqO,OAAN,GAAgB,IAAhB;;AAGA,UAAIG,GAAG,CAACzB,OAAJ,KAAgB,IAAhB,IAAwByB,GAAG,CAACtB,QAAJ,KAAiB,IAA7C,EAAmD;AACjDlN,QAAAA,KAAK,CAACW,KAAN,GAAc;AACZyC,UAAAA,GAAG,EAAEoL,GAAG,CAAC3B,KADG;AAEZpD,UAAAA,IAAI,EAAE+E,GAAG,CAAC3G,KAAJ,CAAU7C,IAFJ;AAGZ8I,UAAAA,GAAG,EAAEU,GAAG,CAAChM,IAHG;AAIZiM,UAAAA,QAAQ,EAAED,GAAG,CAAC/L,SAJF;AAKZiM,UAAAA,IAAI,EAAEF,GAAG,CAACG,KALE;AAMZC,UAAAA,KAAK,EAAEJ,GAAG,CAACK,MANC;AAOZ9N,UAAAA,OAAO,EAAEyN,GAAG,CAACnN,QAPD;AAQZ0M,UAAAA,QAAQ,EAAES,GAAG,CAACX;AARF,SAAd;AAUD,OAXD,MAaK,IAAIW,GAAG,CAACzB,OAAJ,KAAgB,IAAhB,IAAwByB,GAAG,CAACtB,QAAJ,KAAiB,IAA7C,EAAmD;AACtDlN,UAAAA,KAAK,CAACW,KAAN,GAAc;AACZyC,YAAAA,GAAG,EAAEoL,GAAG,CAAC3B,KADG;AAEZpD,YAAAA,IAAI,EAAE,OAFM;AAGZqF,YAAAA,OAAO,EAAE,QAHG;AAIZhB,YAAAA,GAAG,EAAEU,GAAG,CAAChM,IAJG;AAKZiM,YAAAA,QAAQ,EAAED,GAAG,CAAC/L,SALF;AAMZiM,YAAAA,IAAI,EAAEF,GAAG,CAACG,KANE;AAOZC,YAAAA,KAAK,EAAEJ,GAAG,CAACK,MAPC;AAQZ9N,YAAAA,OAAO,EAAEyN,GAAG,CAACnN,QARD;AASZ0M,YAAAA,QAAQ,EAAES,GAAG,CAACX;AATF,WAAd;AAWD,SAZI,MAcA,IAAIW,GAAG,CAACzB,OAAJ,KAAgB,IAAhB,IAAwByB,GAAG,CAACtB,QAAJ,KAAiB,IAA7C,EAAmD;AACtDlN,YAAAA,KAAK,CAACW,KAAN,GAAc;AACZyC,cAAAA,GAAG,EAAEoL,GAAG,CAAC3B,KADG;AAEZpD,cAAAA,IAAI,EAAE,OAFM;AAGZqF,cAAAA,OAAO,EAAE,OAAON,GAAG,CAAC3G,KAAX,KAAqB,QAArB,GAAgC2G,GAAG,CAAC3G,KAApC,GAA4C2G,GAAG,CAAC3G,KAAJ,CAAU7C,IAHnD;AAIZ8I,cAAAA,GAAG,EAAEU,GAAG,CAAChM,IAJG;AAKZiM,cAAAA,QAAQ,EAAED,GAAG,CAAC/L,SALF;AAMZiM,cAAAA,IAAI,EAAEF,GAAG,CAACG,KANE;AAOZC,cAAAA,KAAK,EAAEJ,GAAG,CAACK,MAPC;AAQZ9N,cAAAA,OAAO,EAAEyN,GAAG,CAACnN,QARD;AASZ0M,cAAAA,QAAQ,EAAES,GAAG,CAACX;AATF,aAAd;AAWD,WAZI,MAcA,IAAIW,GAAG,CAACzB,OAAJ,KAAgB,IAAhB,IAAwByB,GAAG,CAACtB,QAAJ,KAAiB,IAA7C,EAAmD;AACtDlN,cAAAA,KAAK,CAACW,KAAN,GAAc;AACZyC,gBAAAA,GAAG,EAAEoL,GAAG,CAAC3B,KADG;AAEZpD,gBAAAA,IAAI,EAAE,QAFM;AAGZqE,gBAAAA,GAAG,EAAEU,GAAG,CAAChM,IAHG;AAIZiM,gBAAAA,QAAQ,EAAED,GAAG,CAAC/L,SAJF;AAKZiM,gBAAAA,IAAI,EAAEF,GAAG,CAACG,KALE;AAMZC,gBAAAA,KAAK,EAAEJ,GAAG,CAACK,MANC;AAOZ9N,gBAAAA,OAAO,EAAEyN,GAAG,CAACnN,QAPD;AAQZ0M,gBAAAA,QAAQ,EAAES,GAAG,CAACX;AARF,eAAd;AAUD;AACF,KA3DD,MA6DK;AAEH7N,QAAAA,KAAK,CAACW,KAAN,GAAc,EAAd;AACD;;AAED,SAAKoO,WAAL,CAAiB/O,KAAjB;AACAA,IAAAA,KAAK,CAACgI,KAAN,CAAYoE,QAAZ,CAAqBpM,KAAK,CAACW,KAA3B;AACA,WAAQX,KAAR;AACD,GApHH;;AAAA,SAsHE+O,WAtHF,GAsHE,qBAAY/O,KAAZ,EAAmBgP,KAAnB,EAA0B;AACxB,QAAMrO,KAAK,GAAGX,KAAK,CAACW,KAApB;AAEA,QAAMsO,IAAI,GAAG7D,KAAK,CAACzK,KAAK,CAAC8I,IAAP,CAAlB;;AACA,QAAIwF,IAAI,IAAIA,IAAI,KAAK,KAAKC,WAA1B,EAAuC;AAErC,UAAMC,UAAU,GAAG,IAAIF,IAAI,SAAR,EAAnB;AAEA,UAAMtH,aAAa,GAAGwH,UAAU,CAACxH,aAAX,EAAtB;AAEA,WAAKwG,aAAL,gBAA0BP,UAA1B;;AAGA,UAAIjN,KAAK,CAAC8I,IAAN,KAAe,OAAnB,EAA4B;AAC1B,aAAK0E,aAAL,CAAmBW,OAAnB,GAA6B;AAC3BtM,UAAAA,IAAI,EAAE,mBADqB;AAE3BqF,UAAAA,KAAK,EAAE,QAFoB;AAG3BpF,UAAAA,SAAS,EAAE,IAHgB;AAI3BpB,UAAAA,QAAQ,EAAE;AACR,uBAASV,KAAK,CAACmO,OAAN,IAAiB,QADlB;AAER5H,YAAAA,KAAK,EAAEyG;AAFC,WAJiB;AAQ3BE,UAAAA,SAAS,EAAE;AARgB,SAA7B;AAUD;;AAED,UAAIlG,aAAJ,EAAmB,KAAKwG,aAAL,CAAmBpN,OAAnB,gBACd4G,aADc;AAEjBnF,QAAAA,IAAI,EAAE;AAFW;AAMnBxC,MAAAA,KAAK,CAACkP,WAAN,GAAoBD,IAApB;AAEAjP,MAAAA,KAAK,CAACU,MAAN,GAAe,IAAIuK,cAAJ,CAAmB,OAAnB,CAAf;AACAjL,MAAAA,KAAK,CAACU,MAAN,CAAa2K,OAAb,CAAqB,KAAK8C,aAA1B;AACAnO,MAAAA,KAAK,CAACgI,KAAN,GAAc,IAAIyD,cAAJ,CAAkBzL,KAAK,CAACU,MAAxB,CAAd;AAED,KAlCD,MAmCK,IAAI,CAACV,KAAK,CAACU,MAAP,IAAiBsO,KAAK,KAAK,IAA/B,EAAqC;AACxChP,MAAAA,KAAK,CAACU,MAAN,GAAe,IAAIuK,cAAJ,CAAmB,OAAnB,CAAf;AACAjL,MAAAA,KAAK,CAACU,MAAN,CAAa2K,OAAb,CAAqB,KAAK8C,aAA1B;AACAnO,MAAAA,KAAK,CAACgI,KAAN,GAAc,IAAIyD,cAAJ,CAAkBzL,KAAK,CAACU,MAAxB,CAAd;AACD;AACF,GAlKH;;AAAA,SAqKE0O,WArKF,GAqKE,qBAAYzO,KAAZ,EAAmB;AAAA;;AAEjB,QAAMX,KAAK,GAAG;AACZU,MAAAA,MAAM,EAAE,KAAKV,KAAL,CAAWU,MADP;AAEZsH,MAAAA,KAAK,EAAE,KAAKhI,KAAL,CAAWgI,KAFN;AAGZrH,MAAAA,KAAK,eAAO,KAAKX,KAAL,CAAWW,KAAlB,EAA4BA,KAA5B;AAHO,KAAd;AAMA,SAAKoO,WAAL,CAAiB/O,KAAjB;AACAA,IAAAA,KAAK,CAACgI,KAAN,CAAYoE,QAAZ,CAAqBpM,KAAK,CAACW,KAA3B;AACA,SAAKN,QAAL,CAAcL,KAAd;AAEAA,IAAAA,KAAK,CAACgI,KAAN,CAAYpH,MAAZ,CAAmB,UAAC4E,MAAD,EAAY;AAC7B,UAAMxF,KAAK,GAAG;AAAEoN,QAAAA,IAAI,EAAE;AAAR,OAAd;AACApN,MAAAA,KAAK,CAACY,MAAN,GAAe,IAAf;AAEAZ,MAAAA,KAAK,CAACmC,KAAN,GAAcqD,MAAM,CAACrD,KAArB;;AAEA,UAAIqD,MAAM,CAACrD,KAAP,KAAiB,IAArB,EAA2B;AACzBnC,QAAAA,KAAK,CAACoN,IAAN,CAAW7I,KAAX,GAAmB,MAAnB;AACAvE,QAAAA,KAAK,CAACoN,IAAN,CAAWpN,KAAX,GAAmB,SAAnB;AACD,OAHD,MAIK;AACHA,QAAAA,KAAK,CAACoN,IAAN,CAAW7I,KAAX,GAAmB,OAAnB;AACAvE,QAAAA,KAAK,CAACoN,IAAN,CAAWpN,KAAX,GAAmB,QAAnB;AACD;;AAED,MAAA,MAAI,CAACK,QAAL,CAAcL,KAAd;AACD,KAhBD;AAkBD,GAnMH;;AAAA,SAqMEqP,QArMF,GAqME,oBAAW;AAAA;;AACT,SAAKrP,KAAL,CAAWgI,KAAX,CAAiBpH,MAAjB,CAAwB,UAAC4E,MAAD,EAAY;AAClC,UAAMxF,KAAK,GAAG;AAAEoN,QAAAA,IAAI,EAAE;AAAR,OAAd;AACApN,MAAAA,KAAK,CAACY,MAAN,GAAe,IAAf;AAEAZ,MAAAA,KAAK,CAACmC,KAAN,GAAcqD,MAAM,CAACrD,KAArB;;AAEA,UAAIqD,MAAM,CAACrD,KAAP,KAAiB,IAArB,EAA2B;AACzBnC,QAAAA,KAAK,CAACoN,IAAN,CAAW7I,KAAX,GAAmB,KAAnB;AACAvE,QAAAA,KAAK,CAACoN,IAAN,CAAWpN,KAAX,GAAmB,OAAnB;AACD,OAHD,MAIK;AACHA,QAAAA,KAAK,CAACoN,IAAN,CAAW7I,KAAX,GAAmB,OAAnB;AACAvE,QAAAA,KAAK,CAACoN,IAAN,CAAWpN,KAAX,GAAmB,QAAnB;;AAEA,QAAA,MAAI,CAACK,QAAL,CAAcL,KAAd;;AAGA,YAAMW,KAAK,GAAG,MAAI,CAACX,KAAL,CAAWgI,KAAX,CAAiB0D,QAAjB,EAAd;;AACA,YAAI4D,MAAM,GAAG,EAAb;;AAGA,aAAK,IAAIlM,GAAT,IAAgBzC,KAAhB;AAAuB2O,UAAAA,MAAM,CAAC,MAAMlM,GAAP,CAAN,GAAoBzC,KAAK,CAACyC,GAAD,CAAzB;AAAvB;;AAGA,YAAMsJ,MAAM,GAAG,MAAI,CAAC1M,KAAL,CAAWuO,WAAX,CAAuBgB,KAAvB,CAA6B,GAA7B,CAAf;;AACA7C,QAAAA,MAAM,CAAC8C,GAAP;AACA9C,QAAAA,MAAM,CAACtF,IAAP,CAAYzG,KAAK,CAACyC,GAAlB;AACA,YAAMqM,KAAK,GAAG/C,MAAM,CAACgD,IAAP,CAAY,GAAZ,CAAd;AACA,eAAOJ,MAAM,CAACK,IAAd;;AAKA,YAAIL,MAAM,CAACzH,KAAP,KAAiB,OAAjB,IAA4ByH,MAAM,CAACM,QAAP,KAAoB,QAApD,EAA8D;AAC5D,iBAAON,MAAM,CAACzH,KAAd;AACA,iBAAOyH,MAAM,CAACM,QAAd;AACAN,UAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;AACD,SAJD,MAMK,IAAIA,MAAM,CAACzH,KAAP,KAAiB,OAAjB,IAA4ByH,MAAM,CAACM,QAAP,KAAoB,QAApD,EAA8D;AACjEN,YAAAA,MAAM,CAACzH,KAAP,GAAeyH,MAAM,CAACM,QAAtB;AACA,mBAAON,MAAM,CAACM,QAAd;AACAN,YAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;AACD,WAJI,MAMA,IAAIA,MAAM,CAACzH,KAAP,KAAiB,QAArB,EAA+B;AAClC,qBAAOyH,MAAM,CAACzH,KAAd;AACD;;AAED,YAAG,MAAI,CAAC7H,KAAL,CAAWqO,OAAX,KAAuB,IAA1B,EAAgC;AAC9B,UAAA,MAAI,CAACxO,KAAL,CAAWgQ,IAAX,CAAiB;AACfxB,YAAAA,OAAO,EAAE,IADM;AAEfyB,YAAAA,OAAO,EAAE,MAAI,CAAC9P,KAAL,CAAWuO,WAFL;AAGfwB,YAAAA,OAAO,EAAEN,KAHM;AAIfrM,YAAAA,GAAG,EAAEzC,KAAK,CAACyC,GAJI;AAKfzC,YAAAA,KAAK,EAAE2O;AALQ,WAAjB;AAOD,SARD,MASK;AACH,UAAA,MAAI,CAACzP,KAAL,CAAWgQ,IAAX,CAAiB;AACfxB,YAAAA,OAAO,EAAE,KADM;AAEf0B,YAAAA,OAAO,EAAE,MAAI,CAAC/P,KAAL,CAAWuO,WAAX,GAAuB,GAAvB,GAA2B5N,KAAK,CAACyC,GAF3B;AAGfA,YAAAA,GAAG,EAAEzC,KAAK,CAACyC,GAHI;AAIfzC,YAAAA,KAAK,EAAE2O;AAJQ,WAAjB;AAMD;AACF;AACF,KAnED;AAqED,GA3QH;;AAAA,SA6QEjN,MA7QF,GA6QE,kBAAS;AAAA;;AAIP,QAAMsH,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAErB,MAAA,MAAI,CAAC9J,KAAL,CAAW8J,QAAX,CAAoB,MAAI,CAAC3J,KAAzB;AACD,KAHD;AASA,wBAAQO,6BAAC8J,UAAD;AACN,MAAA,KAAK,eAAE9J,yFAAmCA,6BAAC+D,QAAD;AAAK,QAAA,KAAK,EAAE,KAAKtE,KAAL,CAAWoN,IAAX,CAAgB7I;AAA5B,SAAoC,KAAKvE,KAAL,CAAWoN,IAAX,CAAgBpN,KAApD,CAAnC,CADD;AAEN,MAAA,QAAQ,MAFF;AAGN,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWoO,OAHd;AAIN,MAAA,KAAK,EAAE,GAJD;AAKN,MAAA,IAAI,EAAE,KAAKiB,QAAL,CAAc/E,IAAd,CAAmB,IAAnB,CALA;AAMN,MAAA,QAAQ,EAAEX;AANJ,oBAQNpJ,6BAAC,kBAAD;AACE,MAAA,GAAG,EAAE,KAAKgL,OADZ;AAEE,MAAA,MAAM,EAAE,KAAKvL,KAAL,CAAWU,MAFrB;AAGE,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWgI,KAHpB;AAIE,MAAA,IAAI,EAAE,KAAKnI,KAAL,CAAWoI,IAJnB;AAKE,MAAA,MAAM,EAAE,KAAKjI,KAAL,CAAWY,MALrB;AAME,MAAA,QAAQ,EAAE,KAAKwO,WAAL,CAAiB9E,IAAjB,CAAsB,IAAtB;AANZ,MARM,CAAR;AAkBD,GA5SH;;AAAA;AAAA,EAAgD/J,cAAK,CAACC,SAAtD;;IC/BawP,qBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SAEE/P,KAFF,GAEE,eAAMJ,KAAN,EAAaS,KAAb,EAAoB;AAAA;;AAClB,QAAMN,KAAK,GAAG;AACZuI,MAAAA,KAAK,EAAE,KADK;AAEZ0H,MAAAA,SAAS,EAAE,IAFC;AAGZC,MAAAA,gBAAgB,EAAE;AAHN,KAAd;;AAMA,SAAKjP,QAAL,GAAgB,YAAI,EAApB;;AACA,QAAGpB,KAAK,CAACoB,QAAT,EAAmB,KAAKA,QAAL,GAAgBpB,KAAK,CAACoB,QAAtB;AAEnB,SAAKP,MAAL,GAAcb,KAAK,CAACa,MAApB;AAEAV,IAAAA,KAAK,CAACkQ,gBAAN,GAAyB,KAAKC,gBAAL,EAAzB;AAEA,SAAKvG,OAAL,GAAe,CACb;AACEC,MAAAA,KAAK,EAAE,KADT;AAEEC,MAAAA,SAAS,EAAE,MAFb;AAGE1G,MAAAA,GAAG,EAAE;AAHP,KADa,EAMb;AACEyG,MAAAA,KAAK,EAAE,aADT;AAEEC,MAAAA,SAAS,EAAE,KAFb;AAGE1G,MAAAA,GAAG,EAAE;AAHP,KANa,EAWb;AACEyG,MAAAA,KAAK,eAAEtJ;AAAK,QAAA,SAAS,EAAC;AAAf,sBACLA;AAAM,QAAA,SAAS,EAAC,0BAAhB;AAA2C,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAAC6P,WAAL,EAAN;AAAA;AAApD,sBACE7P,gEAAUA,6BAACwJ,kBAAD,OAAV,CADF,CADK,CADT;AAMED,MAAAA,SAAS,EAAE,SANb;AAOE1G,MAAAA,GAAG,EAAE,SAPP;AAQE4G,MAAAA,KAAK,EAAE;AART,KAXa,CAAf;AAuBA,WAAOhK,KAAP;AACD,GAxCH;;AAAA,SA0CEqQ,YA1CF,GA0CE,wBAAe;AACb,QAAMC,EAAE,GAAG,KAAK5P,MAAL,YAAX;AACA,SAAKA,MAAL,CAAY2K,OAAZ,CAAoBiF,EAApB;AAGA,SAAKrP,QAAL,CAAcqP,EAAd;AACD,GAhDH;;AAAA,SAkDEC,WAlDF,GAkDE,qBAAYC,GAAZ,EAAiB;AACf,QAAIA,GAAG,CAACnC,OAAJ,KAAgB,IAApB,EAA0B;AACxB,UAAMoC,MAAM,GAAG,KAAK5Q,KAAL,CAAWa,MAAX,CAAkBgQ,SAAlB,CAA4BF,GAAG,CAACV,OAAhC,CAAf;AAGA,WAAKjQ,KAAL,CAAWa,MAAX,CAAkBiQ,YAAlB,CAA+BH,GAAG,CAACV,OAAnC;AAGA,WAAKjQ,KAAL,CAAWa,MAAX,CAAkBkQ,SAAlB,CAA4BJ,GAAG,CAACT,OAAhC,EAAyCS,GAAG,CAAC7P,KAA7C;AAEAkQ,MAAAA,iBAAY,CAACC,OAAb,CAAqB;AACnB1O,QAAAA,OAAO,EAAE,eADU;AAEnB+C,QAAAA,WAAW,gBAAcqL,GAAG,CAACV,OAAlB;AAFQ,OAArB;AAID,KAbD,MAgBK;AAEH,aAAKjQ,KAAL,CAAWa,MAAX,CAAkBkQ,SAAlB,CAA4BJ,GAAG,CAACT,OAAhC,EAAyCS,GAAG,CAAC7P,KAA7C;AAEAkQ,QAAAA,iBAAY,CAACC,OAAb,CAAqB;AACnB1O,UAAAA,OAAO,EAAE,aADU;AAEnB+C,UAAAA,WAAW,gBAAcqL,GAAG,CAACT,OAAlB;AAFQ,SAArB;AAID;;AAED,SAAKM,YAAL;AAEA,SAAKhQ,QAAL,CAAc;AACZkI,MAAAA,KAAK,EAAE,KADK;AAEZwI,MAAAA,YAAY,EAAE,IAFF;AAGZd,MAAAA,SAAS,EAAE,IAHC;AAIZC,MAAAA,gBAAgB,EAAE,KAAKC,gBAAL;AAJN,KAAd;AAMD,GArFH;;AAAA,SAuFEa,UAvFF,GAuFE,oBAAWvE,IAAX,EAAiB;AACf,SAAK5M,KAAL,CAAWa,MAAX,CAAkBiQ,YAAlB,CAA+BlE,IAAI,CAACc,MAApC;AAEA,SAAK8C,YAAL;AAEA,SAAKhQ,QAAL,CAAc;AACZ6P,MAAAA,gBAAgB,EAAE,KAAKC,gBAAL;AADN,KAAd;AAIAU,IAAAA,iBAAY,CAACC,OAAb,CAAqB;AACnB1O,MAAAA,OAAO,EAAE,eADU;AAEnB+C,MAAAA,WAAW,gBAAcsH,IAAI,CAACc,MAAnB;AAFQ,KAArB;AAID,GApGH;;AAAA,SAsGE6C,WAtGF,GAsGE,qBAAYtN,IAAZ,EAAkB;AAChBA,IAAAA,IAAI,GAAGA,IAAI,IAAI,GAAf;AAEA,QAAM2N,MAAM,GAAG,KAAK5Q,KAAL,CAAWa,MAAX,CAAkBgQ,SAAlB,CAA4B5N,IAA5B,KAAqC,KAAKpC,MAAL,CAAYY,OAAZ,CAAoBZ,MAAxE;AAEA,QAAMV,KAAK,GAAG;AACZuI,MAAAA,KAAK,EAAE,IADK;AAEZwI,MAAAA,YAAY,EAAE,IAFF;AAGZd,MAAAA,SAAS,EAAEQ;AAHC,KAAd;AAMA,SAAKpQ,QAAL,CAAcL,KAAd;AACD,GAlHH;;AAAA,SAoHEiR,YApHF,GAoHE,sBAAaxE,IAAb,EAAmB;AACjB,QAAM3J,IAAI,GAAG2J,IAAI,CAACc,MAAL,IAAe,GAA5B;AAEA,QAAMkD,MAAM,GAAG,KAAK5Q,KAAL,CAAWa,MAAX,CAAkBgQ,SAAlB,CAA4B5N,IAA5B,KAAqC,KAAKpC,MAAL,CAAYY,OAAZ,CAAoBZ,MAAxE;AAEA,QAAMV,KAAK,GAAG;AACZuI,MAAAA,KAAK,EAAE,IADK;AAEZwI,MAAAA,YAAY,EAAEtE,IAFF;AAGZwD,MAAAA,SAAS,EAAEQ;AAHC,KAAd;AAMA,SAAKpQ,QAAL,CAAcL,KAAd;AACD,GAhIH;;AAAA,SAkIEmQ,gBAlIF,GAkIE,4BAAmB;AACjB,QAAMe,IAAI,GAAG,IAAb;;AACA,aAASC,qBAAT,CAA+BzQ,MAA/B,EAAuC0Q,IAAvC,EAA6C;AAC3C,UAAI,CAACA,IAAL,EACEA,IAAI,GAAG,EAAP;AACF,UAAMC,OAAO,GAAG,EAAhB;AACA/E,MAAAA,cAAK,CAACC,WAAN,CAAkB7L,MAAlB,EAA0B,UAAC8L,KAAD,EAAQC,IAAR,EAAiB;AACzC,YAAMC,MAAM,gBAAQ1B,KAAK,CAAC2B,OAAN,CAAcF,IAAd,IAAsBA,IAAI,CAAC,CAAD,CAA1B,GAAgCA,IAAxC,CAAZ;;AACA,YAAI3J,IAAI,GAAGsO,IAAI,GAAG,GAAP,GAAa3E,IAAI,CAACI,KAA7B;AACAJ,QAAAA,IAAI,CAAC6E,MAAL,GAAcxO,IAAd;;AAGA,YAAG4J,MAAM,CAACK,OAAP,KAAmB,IAAtB,EAA4B;AAC1BjK,UAAAA,IAAI,GAAGsO,IAAI,GAAG,GAAP,GAAa3E,IAAI,CAAC,CAAD,CAAJ,CAAQI,KAA5B;AACAJ,UAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQ6E,MAAR,GAAiBxO,IAAjB;AAEA,cAAIyO,SAAS,gBAAGhR,6BAACiR,YAAD;AAAS,YAAA,KAAK,EAAC;AAAf,0BACdjR,6BAAC+D,QAAD;AAAK,YAAA,KAAK,EAAC;AAAX,0BAAqB/D,6BAACkR,2BAAD,OAArB,CADc,CAAhB;;AAIA,cAAI,WAAWhF,IAAI,CAAC,CAAD,CAAnB,EAAwB;AACtB,gBAAMhI,QAAQ,GAAGgI,IAAI,CAAC,CAAD,CAAJ,CAAQ5E,KAAR,CAAczC,IAA/B;AACAmM,YAAAA,SAAS,gBAAGhR,6BAAC,QAAD,OAAZ;AACD;;AACD8Q,UAAAA,OAAO,CAACjK,IAAR,CAAa;AACXsK,YAAAA,GAAG,EAAEjF,IAAI,CAAC,CAAD,CADE;AAEXrJ,YAAAA,GAAG,EAAEN,IAFM;AAGXoI,YAAAA,IAAI,eAAE3K,uDACJA,6BAACiR,YAAD;AAAS,cAAA,KAAK,EAAC;AAAf,4BACEjR,6BAAC+D,QAAD;AAAK,cAAA,KAAK,EAAC;AAAX,4BAAqB/D,6BAACoR,kBAAD,OAArB,CADF,CADI,EAIHJ,SAJG,eAKJhR,6CAASkM,IAAI,CAAC,CAAD,CAAJ,CAAQI,KAAjB,CALI,CAHK;AAUXiB,YAAAA,GAAG,EAAErB,IAAI,CAAC,CAAD,CAAJ,CAAQjK,IAVF;AAWXF,YAAAA,QAAQ,EAAE,EAAE,WAAWmK,IAAI,CAAC,CAAD,CAAjB,IAAwB0E,qBAAqB,CAAC1E,IAAI,CAAC,CAAD,CAAL,EAAU3J,IAAV,CAA7C,GAA+D,IAX9D;AAYXgG,YAAAA,OAAO,eAAEvI;AAAK,cAAA,SAAS,EAAC;AAAf,4BACPA,6BAACqR,eAAD;AAAY,cAAA,KAAK,eAAErR,6FAAuCA,6CAASuC,IAAT,CAAvC,CAAnB;AAA0F,cAAA,SAAS,EAAE;AAAA,uBAAMoO,IAAI,CAACF,UAAL,CAAgBvE,IAAI,CAAC,CAAD,CAApB,CAAN;AAAA,eAArG;AAAqI,cAAA,MAAM,EAAC,KAA5I;AAAkJ,cAAA,UAAU,EAAC;AAA7J,4BACElM;AAAM,cAAA,SAAS,EAAC;AAAhB,4BACEA,wDAAMA,6BAACyI,oBAAD,OAAN,CADF,CADF,CADO,eAOPzI;AAAM,cAAA,SAAS,EAAC,0BAAhB;AAA2C,cAAA,OAAO,EAAE;AAAA,uBAAM2Q,IAAI,CAACD,YAAL,CAAkBxE,IAAI,CAAC,CAAD,CAAtB,CAAN;AAAA;AAApD,4BACElM,wDAAMA,6BAAC2I,kBAAD,OAAN,CADF,CAPO,EAWN,EAAE,WAAWuD,IAAI,CAAC,CAAD,CAAjB,iBACClM;AAAM,cAAA,SAAS,EAAC,0BAAhB;AAA2C,cAAA,OAAO,EAAE;AAAA,uBAAM2Q,IAAI,CAACd,WAAL,CAAiBtN,IAAjB,CAAN;AAAA;AAApD,4BACEvC,wDAAMA,6BAACwJ,kBAAD,OAAN,CADF,CADD,GAIG,IAfG;AAZE,WAAb;AA8BD,SA1CD,MA4CK,IAAG2C,MAAM,CAACK,OAAP,KAAmB,IAAnB,IAA2BL,MAAM,CAACQ,QAAP,KAAoB,IAAlD,EAAwD;AAC3DmE,YAAAA,OAAO,CAACjK,IAAR,CAAa;AACXsK,cAAAA,GAAG,EAAEjF,IADM;AAEXrJ,cAAAA,GAAG,EAAEN,IAFM;AAGXoI,cAAAA,IAAI,eAAE3K,uDACJA,6BAACiR,YAAD;AAAS,gBAAA,KAAK,EAAC;AAAf,8BACEjR,6BAAC+D,QAAD;AAAK,gBAAA,KAAK,EAAC;AAAX,8BAAqB/D,6BAACkR,2BAAD,OAArB,CADF,CADI,eAIJlR,6CAASkM,IAAI,CAACI,KAAd,CAJI,CAHK;AASXiB,cAAAA,GAAG,EAAErB,IAAI,CAACjK,IATC;AAUXF,cAAAA,QAAQ,EAAE6O,qBAAqB,CAAC1E,IAAD,EAAO3J,IAAP,CAVpB;AAWXgG,cAAAA,OAAO,eAAEvI;AAAK,gBAAA,SAAS,EAAC;AAAf,8BACPA,6BAACqR,eAAD;AAAY,gBAAA,KAAK,eAAErR,0FAAoCA,6CAASuC,IAAT,CAApC,CAAnB;AAAuF,gBAAA,SAAS,EAAE;AAAA,yBAAMoO,IAAI,CAACF,UAAL,CAAgBvE,IAAhB,CAAN;AAAA,iBAAlG;AAA+H,gBAAA,MAAM,EAAC,KAAtI;AAA4I,gBAAA,UAAU,EAAC;AAAvJ,8BACElM;AAAM,gBAAA,SAAS,EAAC;AAAhB,8BACEA,wDAAMA,6BAACyI,oBAAD,OAAN,CADF,CADF,CADO,eAOPzI;AAAM,gBAAA,SAAS,EAAC,0BAAhB;AAA2C,gBAAA,OAAO,EAAE;AAAA,yBAAM2Q,IAAI,CAACD,YAAL,CAAkBxE,IAAlB,CAAN;AAAA;AAApD,8BACElM,wDAAMA,6BAAC2I,kBAAD,OAAN,CADF,CAPO,eAWP3I;AAAM,gBAAA,SAAS,EAAC,0BAAhB;AAA2C,gBAAA,OAAO,EAAE;AAAA,yBAAM2Q,IAAI,CAACd,WAAL,CAAiBtN,IAAjB,CAAN;AAAA;AAApD,8BACEvC,wDAAMA,6BAACwJ,kBAAD,OAAN,CADF,CAXO;AAXE,aAAb;AA2BD,WA5BI,MA6BA,IAAI2C,MAAM,CAACK,OAAP,KAAmB,IAAnB,IAA2BL,MAAM,CAACQ,QAAP,KAAoB,IAAnD,EAAyD;AAC5D,gBAAMzI,SAAQ,GAAGgI,IAAI,CAAC5E,KAAL,CAAWzC,IAA5B;AACAiM,YAAAA,OAAO,CAACjK,IAAR,CAAa;AACXsK,cAAAA,GAAG,EAAEjF,IADM;AAEXrJ,cAAAA,GAAG,EAAEN,IAFM;AAGXoI,cAAAA,IAAI,eAAE3K,uDACJA,6BAAC,SAAD,OADI,OACUkM,IAAI,CAACI,KADf,CAHK;AAMXiB,cAAAA,GAAG,EAAErB,IAAI,CAACjK,IANC;AAOXsG,cAAAA,OAAO,eAAEvI;AAAK,gBAAA,SAAS,EAAC;AAAf,8BACPA,6BAACqR,eAAD;AAAY,gBAAA,KAAK,eAAErR,mFAA6BA,6CAASuC,IAAT,CAA7B,CAAnB;AAAgF,gBAAA,SAAS,EAAE;AAAA,yBAAMoO,IAAI,CAACF,UAAL,CAAgBvE,IAAhB,CAAN;AAAA,iBAA3F;AAEE,gBAAA,MAAM,EAAC,KAFT;AAEe,gBAAA,UAAU,EAAC;AAF1B,8BAGElM;AAAM,gBAAA,SAAS,EAAC;AAAhB,8BACEA,wDAAMA,6BAACyI,oBAAD,OAAN,CADF,CAHF,CADO,eASPzI;AAAM,gBAAA,SAAS,EAAC,0BAAhB;AAA2C,gBAAA,OAAO,EAAE;AAAA,yBAAM2Q,IAAI,CAACD,YAAL,CAAkBxE,IAAlB,CAAN;AAAA;AAApD,8BACElM,wDAAMA,6BAAC2I,kBAAD,OAAN,CADF,CATO;AAPE,aAAb;AAqBD;AACF,OAvGD;AAwGA,aAAQmI,OAAR;AACD;;AAED,QAAIjI,IAAI,GAAG,IAAX;;AACA,QAAI,KAAK1I,MAAT,EAAiB;AACf0I,MAAAA,IAAI,GAAG+H,qBAAqB,CAAC,KAAKzQ,MAAL,CAAYY,OAAZ,CAAoBZ,MAArB,CAA5B;AACA,aAAQ0I,IAAR;AACD;;AAED,WAAQ,EAAR;AACD,GA1PH;;AAAA,SA4PE/G,MA5PF,GA4PE,kBAAS;AAAA;;AACP,QAAMwP,GAAG,GAAG,KAAK7R,KAAL,CAAWkQ,gBAAvB;AAEA,wBAAQ3P,uDACNA,6BAAC,0BAAD;AACE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWiQ,SADnB;AAEE,MAAA,OAAO,EAAE,KAAKjQ,KAAL,CAAWuI,KAFtB;AAGE,MAAA,KAAK,EAAE,KAAKvI,KAAL,CAAW+Q,YAHpB;AAIE,MAAA,QAAQ,EAAE;AAAA,eAAM,MAAI,CAAC1Q,QAAL,CAAc;AAAEkI,UAAAA,KAAK,EAAE;AAAT,SAAd,CAAN;AAAA,OAJZ;AAKE,MAAA,IAAI,EAAE,KAAKgI,WAAL,CAAiBjG,IAAjB,CAAsB,IAAtB;AALR,MADM,eASN/J,6BAACiK,UAAD;AAAO,MAAA,OAAO,EAAE,KAAKZ,OAArB;AAA8B,MAAA,UAAU,EAAEiI,GAA1C;AAA+C,MAAA,IAAI,EAAC,OAApD;AAA4D,MAAA,UAAU,EAAE;AACtEpH,QAAAA,KAAK,EAAEoH,GAAG,CAACnH,MAD2D;AAEtEC,QAAAA,QAAQ,EAAEkH,GAAG,CAACnH,MAFwD;AAGtEE,QAAAA,gBAAgB,EAAE;AAHoD,OAAxE;AAIG,MAAA,UAAU,EAAE;AAAEkH,QAAAA,oBAAoB,EAAE;AAAxB;AAJf,MATM,CAAR;AAeD,GA9QH;;AAAA;AAAA,EAA2ClS,iBAA3C;;ICjBamS,oBAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,SAEE1P,MAFF,GAEE,kBAAS;AACP,wBAAQ9B,iDAAR;AACD,GAJH;;AAAA;AAAA,EAA0CA,cAAK,CAACC,SAAhD;;;;;;;;;;ICLawD,KAAb;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA2BgE,cAA3B;AAGA,IAAagK,MAAM,GAAGtR,MAAf;AAGP,IAAa0K,KAAK,GAAGnG,KAAd;;;;;;"}