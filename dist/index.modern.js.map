{"version":3,"file":"index.modern.js","sources":["../src/lib/TypeForm.js","../src/lib/TypeRender.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/Select.js","../src/Types/Object.js","../src/Types/Array.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types.js","../src/Schema/Schema.js","../src/lib/TypeDataset.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema/Render.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props.schema !== props.schema) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n    \n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      options: {}\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) {\n      this.schema = {}\n      return (state)\n    }\n\n    state.help = this.schema.$help;\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n\n    // if (props.verify === true) {\n    //   this.verify(props.value, (ret) => {\n    //     this.state = { ...this.state, ...ret }\n    //   })\n    // }\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        \n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    if(!this.handler) {\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: \"No Handler on verifier\"\n      }))\n    }\n    \n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  Col,\n  Row,\n  Form,\n  Input\n} from \"antd\";\n\nexport default class FieldifyTypeRender extends RecycledComponent {\n\n  cycle(props) {\n    const state = {\n      schema: props.schema,\n      value: props.value,\n      injected: props.injected\n    }\n\n    return (state)\n  }\n\n  subRender(children) {\n\n    if(this.state.injected === true) {\n      return (\n        <Form.Item\n          label={this.state.schema.$doc}\n          hasFeedback={true}\n          validateStatus=\"success\"\n          style={{ marginBottom: \"0px\" }}\n          wrapperCol={{ sm: 24 }}\n        >\n          {children}\n        </Form.Item>\n      )\n    }\n    return (\n      <Form.Item\n        label={this.state.schema.$doc}\n        hasFeedback={true}\n        validateStatus=\"success\"\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n\n  render() {\n    return (this.subRender(\n      <div style={{ width: \"100%\" }}>\n        {this.state.value}\n      </div>\n    ));\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\n/* <div class=\"ant-form-item-control-input\">\n  <div class=\"ant-form-item-control-input-content\">\n    <input type=\"text\" class=\"ant-input\" value=\"vdvfsdvfdsvfds\" style=\"width: 100%;\">\n      </div><span class=\"ant-form-item-children-icon\">\n        <span role=\"img\" aria-label=\"check-circle\" class=\"anticon anticon-check-circle\">\n          <svg viewBox=\"64 64 896 896\" focusable=\"false\" class=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\">\n              </path>\n              </svg>\n              </span>\n              </span>\n              </div> */\n\n\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm,\n  Render: StringRender,\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(state.value && typeof state.value === \"object\") {\n      var final = \"\"\n\n      if(state.value.first) final += state.value.first\n      if(state.value.last) final += \" \"+state.value.last\n\n      state.value = final.trim()\n    }\n    return(state)\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n  Render: NameRender,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailRender extends TypeRender {\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm,\n  Render: EmailRender\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm,\n  Render: NumberRender\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input placeholder=\"Checkbox of characters\" />\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Checkbox min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(typeof state.value === \"string\") {\n\n      if(props.schema.$options && props.schema.$options.items) {\n        const ptr = props.schema.$options.items\n        if(ptr[state.value]) state.value = ptr[state.value]\n      }\n    }\n    return(state)\n  }\n\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm,\n  Render: SelectRender\n}\n\n\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ObjectClass extends fieldifyType {\n}\n\n\nexport default {\n  code: \"Object\",\n  description: \"Nested Sub Object\",\n  class: ObjectClass\n}\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\nclass ArrayClass extends fieldifyType {\n  configuration () {\n    return ({\n      min: {\n        $doc: 'Minimum of items',\n        $required: false,\n        $type: 'Number'\n      },\n      max: {\n        $doc: 'Maximun of items',\n        $required: false,\n        $type: 'Number'\n      }\n    })\n  }\n}\n\nexport default {\n  code: \"Array\",\n  description: \"Array\",\n  class: ArrayClass\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types, input as FieldifyInput } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVRender extends TypeRender {\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value\n      })\n    }\n    return (ds)\n  }\n\n\n  render() {\n    const columns = [\n      {\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        dataIndex: 'value',\n        key: 'value',\n      }\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.subRender(<div>\n      <Table\n        showHeader={false}\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm,\n  Render: KVRender\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport Select from \"./Types/Select\"\nimport Object from \"./Types/Object\"\nimport Array from \"./Types/Array\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Checkbox,\n  Object,\n  Array,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  compile(schema) {\n    // process normal compilation\n    super.compile(schema);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\n\nexport class TypeDataset extends RecycledComponent {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n\n  }\n\n  cycle(props, first) {\n\n    const state = {\n      layout: props.layout ? props.layout : \"horizontal\"\n    }\n\n    // compile the schema\n    state.rawSchema = props.schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(state.rawSchema)\n\n    // create an input instance\n    // console.log(\"rawInput\", state.rawInput === props.rawInput)\n    state.rawInput = props.input\n    state.input = new FieldifyInput(state.schema)\n    state.input.setValue(props.input)\n\n    state.inputValue = state.input.getValue()\n    state.verify = props.verify || false\n\n    state.actions = props.actions;\n    state.generator = props.generator;\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    // state.reactive = this.update(state.schema, state.inputValue, state.verify);\n    state.reactive = this.update({\n      state,\n      root: state.schema,\n      input: state.inputValue,\n      verify: state.verify\n    })\n    return (state)\n  }\n\n  getValue() {\n    return (this.state.input.getValue())\n  }\n\n  clickAddArray(line) {\n    this.state.input.set(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      // reactive: this.update(this.state.schema, _value, false)\n      reactive: this.update({\n        state: this.state,\n        root: this.state.schema,\n        input: _value,\n        verify: false,\n      })\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.state.input.remove(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      // reactive: this.update(this.state.schema, _value, false)\n\n      reactive: this.update({\n        state: this.state,\n        root: this.state.schema,\n        input: _value,\n        verify: false,\n      })\n\n    })\n  }\n\n\n  setValue(line, value) {\n    if (!this.state.input) return;\n\n    this.state.input.set(line, value)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value\n    })\n  }\n\n  update(up) {\n\n    var { root, input, verify, state } = up;\n\n    const follower = (schema, schematized, input, ret, line) => {\n      line = line || \"\"\n\n      if (!input) input = {}\n\n      utils.orderedRead(schema, (index, item) => {\n\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        const schematizedSrc = schematized[source.$_key];\n        const sourceSchematized = { ...Array.isArray(schematizedSrc) ? schematizedSrc[0] : schematizedSrc };\n\n        const inputPtr = input ? input[source.$_key] : null;\n        const lineKey = line + \".\" + source.$_key;\n\n        if (source.$_array === true) {\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            }\n          ];\n\n          if (state.actions === true) {\n            columns.push({\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            })\n          }\n\n          const dataSource = []\n\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          if (source.$_nested === true) {\n            var inputPtr2 = input[source.$_key]\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[source.$_key] = [];\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const child = [];\n              follower(source, sourceSchematized, value, child, key);\n\n              const toPush = { key, form: child }\n              if (state.actions === true) {\n                toPush.actions = <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              }\n              dataSource.push(toPush)\n            }\n          }\n          else if (source.$type) {\n            delete sourceSchematized.$doc; // source is cloned\n            const TypeForm = source.$type[state.generator];\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[source.$_key] = [];\n              inputPtr2 = input[source.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const toPush = {\n                key,\n                form: <TypeForm\n                  schema={sourceSchematized}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />\n              }\n              if (state.actions === true) {\n                toPush.actions = <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              }\n              dataSource.push(toPush)\n            }\n          }\n\n          ret.push(<Form.Item key={source.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                {inputPtr2 && state.actions === true ?\n                  <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                    <span><PlusIcon /></span>\n                  </span>\n                  : null}\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n\n        }\n        else {\n          if (source.$_nested === true) {\n            const child = [];\n\n            follower(source, sourceSchematized, inputPtr, child, lineKey);\n\n            ret.push(<div key={source.$_wire} className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$doc}>\n                {child}\n              </Card>\n            </div>);\n          }\n          else if (item.$type) {\n            const TypeForm = item.$type[state.generator];\n\n            ret.push(<TypeForm\n              schema={sourceSchematized}\n              value={inputPtr}\n              key={source.$_wire}\n              verify={verify}\n              user={this.props.user}\n              onChange={(schema, value) => this.setValue(lineKey, value)}\n\n              // reference errors\n              onError={(error, message) => {\n                if (error === true) {\n                  this.references[source.$_wire] = message;\n                }\n                else {\n                  const ref = this.references[source.$_wire];\n                  if (ref) {\n                    delete this.references[source.$_wire];\n                  }\n                }\n              }}\n            />);\n          }\n        }\n      });\n      return (ret);\n    };\n\n    const ret = [];\n    follower(\n      root.handler.schema,\n      root.handlerSchematized.schema,\n      input,\n      ret\n    );\n    return (ret);\n  }\n\n  render() {\n    var layout = {};\n\n    if (this.state.layout === 'horizontal') {\n      layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n      }\n    }\n    return (<Form\n      layout={this.state.layout}\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { TypeDataset } from \"../lib/TypeDataset\";\n\nexport class FieldifySchemaForm extends RecycledComponent {\n  cycle(props) {\n    const state = {\n      layout: props.layout,\n      schema: props.schema,\n      input: props.input,\n      onChange: props.onChange,\n    }\n\n    return(state)\n  }\n\n  render() {\n    return (<TypeDataset\n      schema={this.state.schema}\n      input={this.state.input}\n      onChange={this.state.onChange}\n      actions={true}\n      layout={this.state.layout}\n      generator=\"Form\"\n    />);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n// build all available types\nconst allTypes = {}\nconst allTypesNoArray = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n  if (a !== \"Array\") {\n    allTypesNoArray[a] = Types[a].description\n  }\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true,\n    $position: 10\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: \"Select\",\n    $required: true,\n    $options: {\n      items: allTypes\n    },\n    $position: 11\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: false,\n    $type: \"String\",\n    $position: 22\n  },\n  position: {\n    $doc: \"Position in the serie\",\n    $required: false,\n    $type: \"Number\",\n    $default: 0,\n    $options: {\n      acceptedTypes: \"integer\"\n    },\n    $position: 23\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n\n    // here we have 3 cases\n    // normal case = $_array !== true && $_nested !== true\n    // nested in array = $_array === true && $_nested === true\n    // normal in array = $_array === true && $_nested !== true\n    // single nested = $_array !== true && $_nested === true\n\n    const state = {\n      edition: false,\n      original: props.value,\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user,\n      verify: false\n    };\n   \n    if (state.user && state.user.$_wire) {\n      state.initialPath = state.user.$_wire;\n    }\n    else state.initialPath = '';\n\n    if (props.value) {\n      const val = props.value;\n\n      state.edition = true;\n\n      // normal case\n      if (val.$_array !== true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // nested in array\n      else if (val.$_array === true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // normal in array\n      else if (val.$_array === true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: typeof val.$type === \"string\" ? val.$type : val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // special handle for objects\n      else if (val.$_array !== true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n    }\n    // single addition\n    else {\n      // nothing to set\n      state.value = {}\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    return (state)\n  }\n\n  driveSchema(state, force) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n\n      // special cases for array \n      if (value.type === \"Array\") {\n        this.currentSchema.content = {\n          $doc: \"Item content type\",\n          $type: \"Select\",\n          $required: true,\n          $options: {\n            default: value.content || \"Object\",\n            items: allTypesNoArray\n          },\n          $position: 12\n        }\n      }\n\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      state.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n\n  }\n\n  handleOK() {\n    this.state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"red\"\n        state.form.state = \"Error\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n\n        this.setState(state)\n\n        // get the current input values \n        const value = result.result\n        // const value = this.state.input.getValue()\n        var nvalue = {}\n\n        // rename all root value with $\n        for (var key in value) nvalue['$' + key] = value[key]\n\n        // we will save the last path in order to reconstruct the field name\n        const source = this.state.initialPath.split('.')\n        source.pop()\n        source.push(value.key)\n        const npath = source.join('.')\n        delete nvalue.$key;\n\n        // because object and array are virtualized in the builder \n        // then we need to remap the item with the correct schema underlining\n\n        if (nvalue.$type === \"Array\" && nvalue.$content === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // normal in array\n        else if (nvalue.$type === \"Array\" && nvalue.$content !== \"Object\") {\n          nvalue.$type = nvalue.$content;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // special handle for objects\n        else if (nvalue.$type === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n        }\n\n        if (this.state.edition === true) {\n          this.props.onOk(({\n            edition: true,\n            oldPath: this.state.initialPath,\n            newPath: npath,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n        else {\n          this.props.onOk(({\n            edition: false,\n            newPath: this.state.initialPath + \".\" + value.key,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n      }\n    })\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={this.handleOK.bind(this)}\n      onCancel={onCancel}\n    >\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.currentSchema}\n        input={this.state.value}\n        user={this.props.user}\n        verify={this.state.verify}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\n\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends RecycledComponent {\n\n  cycle(props, first) {\n    const state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.onChange = ()=>{}\n    if(props.onChange) this.onChange = props.onChange\n\n    // compile the schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(props.schema)\n\n    state.schemaDataSource = this.updateDataSource(state.schema)\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    return(state)\n  }\n\n  fireOnChange() {\n    const ex = this.state.schema.export()\n    // this.state.schema.compile(ex)\n\n    // fire on change for exporting the new schema\n    this.onChange(ex)\n  }\n\n  itemChanged(arg) {\n\n    if (arg.edition === true) {\n      const lineup = this.state.schema.getLineup(arg.oldPath);\n\n      // delete org\n      this.state.schema.removeLineup(arg.oldPath)\n\n      // put new\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field updated\",\n        description: `Field at ${arg.oldPath} has been successfully updated`\n      })\n    }\n\n    // manage addition\n    else {\n      // just put the new one\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field added\",\n        description: `Field at ${arg.newPath} has been successfully added`\n      })\n    }\n\n    this.fireOnChange();\n\n    this.setState({\n      modal: false,\n      modalContent: null,\n      modalUser: null,\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n  }\n\n  itemRemove(item) {\n    this.state.schema.removeLineup(item.$_wire);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_wire} has been successfully removed`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: null, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  handlingEdit(item) {\n    const path = item.$_wire || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: item, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  updateDataSource(root) {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        var path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if (Array.isArray(item)) {\n          path = wire + \".\" + item[0].$_key;\n          item[0].$_path = path;\n          item[0].$_array = true;\n\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          else {\n            item[0].$_nested = true;\n          }\n\n          current.push({\n            ptr: item[0],\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item[0].$_key}</strong>\n            </div>,\n            doc: item[0].$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item[0])} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item[0])}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if (typeof item === \"object\" && !item.$type) {\n          item.$_nested = true;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (root) {\n      data = fieldify2antDataTable(root.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { TypeDataset } from \"../lib/TypeDataset\";\n\nexport class FieldifySchemaRender extends RecycledComponent {\n  cycle(props) {\n    const state = {\n      layout: props.layout,\n      schema: props.schema,\n      input: props.input,\n    }\n\n    return(state)\n  }\n\n  render() {\n    return (<TypeDataset\n      schema={this.state.schema}\n      input={this.state.input}\n      actions={false}\n      layout={this.state.layout}\n      generator=\"Render\"\n    />);\n  }\n}\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\n\n"],"names":["FieldifyTypeForm","props","state","cycle","componentDidUpdate","schema","setState","value","verify","feedback","status","options","isInjected","onChange","onError","help","$help","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","ret","error","message","render","children","$doc","$required","marginBottom","sm","Component","FieldifyTypeRender","injected","subRender","width","RecycledComponent","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","pNew","pOld","changed","key","o","n","setup","prev","a","p","configure","changeIt","change","Object","assign","StringForm","Input","placeholder","target","TypeForm","StringRender","TypeRender","StringInfo","color","Icon","TypeInfo","StringBuilder","minSize","maxSize","TypeBuilder","code","types","String","description","Info","Builder","Form","Render","TString","NameForm","result","from","setField","first","last","NameInfo","NameRender","getDerivedStateFromProps","final","trim","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","EmailRender","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberRender","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxBuilder","SelectForm","items","updateItems","push","Select","SelectInfo","SelectRender","ptr","SelectBuilder","ObjectClass","fieldifyType","ArrayClass","configuration","min","$type","max","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","bind","total","length","pageSize","hideOnSinglePage","KVInfo","KVRender","KVBuilder","KV","Array","FieldifySchema","name","resolver","Types","compile","TypeDataset","formRef","React","createRef","rawSchema","rawInput","FieldifyInput","setValue","inputValue","getValue","generator","references","reactive","update","root","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","up","follower","schematized","utils","orderedRead","index","item","source","isArray","schematizedSrc","$_key","sourceSchematized","inputPtr","lineKey","$_array","inputPtr2","$array","$_nested","child","toPush","form","ref","$_wire","$_access","handlerSchematized","FieldifySchemaForm","allTypes","allTypesNoArray","baseSchema","$position","doc","position","$default","acceptedTypes","FieldifySchemaBuilderModal","currentSchema","visible","edition","original","initialPath","val","required","read","$read","write","$write","content","driveSchema","force","Type","currentType","TypeObject","formChanged","handleOK","nvalue","split","pop","npath","join","$key","$content","no","getNO","nestedObject","onOk","oldPath","newPath","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","ex","itemChanged","arg","lineup","getLineup","removeLineup","setLineup","notification","success","modalContent","itemRemove","handlingEdit","self","fieldify2antDataTable","wire","current","$_path","composite","ObjectIcon","ArrayIcon","sds","defaultExpandAllRows","FieldifySchemaRender","Schema"],"mappings":"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"}