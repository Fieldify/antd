{"version":3,"file":"index.js","sources":["../src/lib/TypeForm.js","../src/lib/TypeRender.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/DateTimePicker.js","../src/Types/DatePicker.js","../src/Types/DatePickerRange.js","../src/Types/TimePicker.js","../src/Types/TimePickerRange.js","../src/Types/Select.js","../src/Types/Radio.js","../src/Types/Object.js","../src/Types/Array.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types/Hash.js","../src/Types.js","../src/Schema/Schema.js","../src/lib/TypeDataset.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema/Render.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props.schema !== props.schema) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n    \n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      options: {}\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) {\n      this.schema = {}\n      return (state)\n    }\n\n    state.help = this.schema.$help;\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n\n    // if (props.verify === true) {\n    //   this.verify(props.value, (ret) => {\n    //     this.state = { ...this.state, ...ret }\n    //   })\n    // }\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        // console.log(\"TypeForm\", this.schema, this._lastValue);\n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    if(!this.handler) {\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: \"No Handler on verifier\"\n      }))\n    }\n    \n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  Col,\n  Row,\n  Form,\n  Input\n} from \"antd\";\n\nexport default class FieldifyTypeRender extends RecycledComponent {\n\n  cycle(props) {\n    const state = {\n      schema: props.schema,\n      value: props.value,\n      injected: props.injected\n    }\n\n    return (state)\n  }\n\n  subRender(children) {\n\n    if(this.state.injected === true) {\n      return (\n        <Form.Item\n          label={this.state.schema.$doc}\n          hasFeedback={true}\n          validateStatus=\"success\"\n          style={{ marginBottom: \"0px\" }}\n          wrapperCol={{ sm: 24 }}\n        >\n          {children}\n        </Form.Item>\n      )\n    }\n    return (\n      <Form.Item\n        label={this.state.schema.$doc}\n        hasFeedback={true}\n        validateStatus=\"success\"\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n\n  render() {\n    return (this.subRender(\n      <div style={{ width: \"100%\" }}>\n        {this.state.value}\n      </div>\n    ));\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\n/* <div class=\"ant-form-item-control-input\">\n  <div class=\"ant-form-item-control-input-content\">\n    <input type=\"text\" class=\"ant-input\" value=\"vdvfsdvfdsvfds\" style=\"width: 100%;\">\n      </div><span class=\"ant-form-item-children-icon\">\n        <span role=\"img\" aria-label=\"check-circle\" class=\"anticon anticon-check-circle\">\n          <svg viewBox=\"64 64 896 896\" focusable=\"false\" class=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\">\n              </path>\n              </svg>\n              </span>\n              </span>\n              </div> */\n\n\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm,\n  Render: StringRender,\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(state.value && typeof state.value === \"object\") {\n      var final = \"\"\n\n      if(state.value.first) final += state.value.first\n      if(state.value.last) final += \" \"+state.value.last\n\n      state.value = final.trim()\n    }\n    return(state)\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n  Render: NameRender,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailRender extends TypeRender {\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm,\n  Render: EmailRender\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm,\n  Render: NumberRender\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row,\n  Checkbox\n} from \"antd\";\n\nimport { CheckSquareOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\nimport TypeRender from '../lib/TypeRender';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Checkbox\n        checked={this.state.value}\n        onChange={({ target }) => this.changeValue(target.checked)}\n        style={{ width: \"100%\" }}\n      >\n        {this.state.options.placeholder}\n      </Checkbox>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#85144b\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n    this.configure()\n  }\n\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm,\n  Render: CheckboxRender,\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row,\n  DatePicker\n} from \"antd\";\n\nimport { FieldTimeOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DateTimePickerForm extends TypeForm {\n  render() {\n    return (super.render(\n      <DatePicker showTime defaultValue={this.state.value} onChange={(date) => {\n        if(date) this.changeValue(date.format())\n        else this.changeValue(null)\n      }}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DateTimePickerInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fa541c\"><FieldTimeOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DateTimePickerRender extends TypeRender {\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DateTimePickerBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n    this.configure()\n  }\n}\n\n\nexport default {\n  code: types.DateTimePicker.code,\n  description: types.DateTimePicker.description,\n  class: types.DateTimePicker.class,\n\n  Info: DateTimePickerInfo,\n  Builder: DateTimePickerBuilder,\n  Form: DateTimePickerForm,\n  Render: DateTimePickerRender\n}","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row,\n  DatePicker\n} from \"antd\";\n\nimport { FieldTimeOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DatePickerForm extends TypeForm {\n  render() {\n    return (super.render(\n      <DatePicker defaultValue={this.state.value} onChange={(date, dateString) => this.changeValue(dateString)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DatePickerInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ad2102\"><FieldTimeOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DatePickerRender extends TypeRender {\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DatePickerBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n    this.configure()\n  }\n}\n\n\nexport default {\n  code: types.DatePicker.code,\n  description: types.DatePicker.description,\n  class: types.DatePicker.class,\n\n  Info: DatePickerInfo,\n  Builder: DatePickerBuilder,\n  Form: DatePickerForm,\n  Render: DatePickerRender\n}","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row,\n  DatePicker\n} from \"antd\";\n\nimport { FieldTimeOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nconst { RangePicker } = DatePicker;\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DatePickerRangeForm extends TypeForm {\n  render() {\n    return (super.render(\n      <RangePicker onChange={(date, dateString) => {\n        if(date) {\n          const res = {\n            from: dateString[0],\n            to: dateString[1],\n          }\n          this.changeValue(res);\n        }\n        else {\n          const res = {\n            from: null,\n            to: null,\n          }\n          this.changeValue(res);\n        }\n      }} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DatePickerRangeInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ad2102\"><FieldTimeOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DatePickerRangeRender extends TypeRender {\n  render() {\n    return (this.subRender(\n      <div style={{ width: \"100%\" }}>\n        {typeof this.state.value === \"object\" && this.state.value.from && this.state.value.to ? \n          `${this.state.value.from} - ${this.state.value.to}` : `-`}\n      </div>\n    ));\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass DatePickerRangeBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n    this.configure()\n  }\n}\n\n\nexport default {\n  code: types.DatePickerRange.code,\n  description: types.DatePickerRange.description,\n  class: types.DatePickerRange.class,\n\n  Info: DatePickerRangeInfo,\n  Builder: DatePickerRangeBuilder,\n  Form: DatePickerRangeForm,\n  Render: DatePickerRangeRender\n}","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row,\n  TimePicker\n} from \"antd\";\n\nimport { FieldTimeOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass TimePickerForm extends TypeForm {\n  render() {\n    return (super.render(\n      <TimePicker defaultValue={this.state.value} onChange={(date, dateString) => this.changeValue(dateString)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass TimePickerInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ad2102\"><FieldTimeOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass TimePickerRender extends TypeRender {\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass TimePickerBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n    this.configure()\n  }\n}\n\n\nexport default {\n  code: types.TimePicker.code,\n  description: types.TimePicker.description,\n  class: types.TimePicker.class,\n\n  Info: TimePickerInfo,\n  Builder: TimePickerBuilder,\n  Form: TimePickerForm,\n  Render: TimePickerRender\n}","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row,\n  TimePicker\n} from \"antd\";\n\nimport { FieldTimeOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nconst { RangePicker } = TimePicker;\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass TimePickerRangeForm extends TypeForm {\n  render() {\n    return (super.render(\n      <RangePicker onChange={(date, dateString) => {\n        if(date) {\n          const res = {\n            from: dateString[0],\n            to: dateString[1],\n          }\n          this.changeValue(res);\n        }\n        else {\n          const res = {\n            from: null,\n            to: null,\n          }\n          this.changeValue(res);\n        }\n      }} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass TimePickerRangeInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ad2102\"><FieldTimeOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass TimePickerRangeRender extends TypeRender {\n  render() {\n    return (this.subRender(\n      <div style={{ width: \"100%\" }}>\n        {typeof this.state.value === \"object\" ? \n          `${this.state.value.from} - ${this.state.value.to}` : `-`}\n      </div>\n    ));\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass TimePickerRangeBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n    this.configure()\n  }\n}\n\n\nexport default {\n  code: types.TimePickerRange.code,\n  description: types.TimePickerRange.description,\n  class: types.TimePickerRange.class,\n\n  Info: TimePickerRangeInfo,\n  Builder: TimePickerRangeBuilder,\n  Form: TimePickerRangeForm,\n  Render: TimePickerRangeRender\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(typeof state.value === \"string\") {\n\n      if(props.schema.$options && props.schema.$options.items) {\n        const ptr = props.schema.$options.items\n        if(ptr[state.value]) state.value = ptr[state.value]\n      }\n    }\n    return(state)\n  }\n\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm,\n  Render: SelectRender\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Radio,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldBinaryOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nconst _radioVertical = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass RadioForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if (!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  componentDidUpdate(props, state) {\n    // if(state.options.default !== this.state.options.default) changed = true;\n    // if(state.items !== this.state.items) changed = true;\n    // if(state.options.horizontal !== this.state.options.horizontal) changed = true;\n\n    if (props.schema !== this.props.schema) {\n      this.setState({\n        options: props.schema.$options,\n        items: this.updateItems()\n      });\n      this.onChange(this.schema, this.state.value);\n    }\n\n    // if(changed === true) this.setState({items: this.updateItems()})\n  }\n\n  updateItems() {\n    var style = _radioVertical;\n    if(this.props.schema.$options.horizontal === true) style = null;\n    if (!this.props.schema.$options.items) return ([])\n\n    const options = []\n    for (var key in this.props.schema.$options.items) {\n      const value = this.props.schema.$options.items[key];\n      options.push(<Radio style={style} value={key} key={key}>{value}</Radio>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Radio.Group value={this.state.value} onChange={({ target }) => this.changeValue(target.value) }>\n        {this.state.items}\n      </Radio.Group>\n    ))\n  }\n}\n\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass RadioInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#096dd9\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass RadioRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if (typeof state.value === \"string\") {\n\n      if (props.schema.$options && props.schema.$options.items) {\n        const ptr = props.schema.$options.items\n        if (ptr[state.value]) state.value = ptr[state.value]\n      }\n    }\n    return (state)\n  }\n\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass RadioBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Radio min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Radio.code,\n  description: types.Radio.description,\n  class: types.Radio.class,\n\n  Info: RadioInfo,\n  Builder: RadioBuilder,\n  Form: RadioForm,\n  Render: RadioRender\n}\n\n\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ObjectClass extends fieldifyType {\n}\n\n\nexport default {\n  code: \"Object\",\n  description: \"Nested Sub Object\",\n  class: ObjectClass\n}\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\nclass ArrayClass extends fieldifyType {\n  configuration () {\n    return ({\n      min: {\n        $doc: 'Minimum of items',\n        $required: false,\n        $type: 'Number'\n      },\n      max: {\n        $doc: 'Maximun of items',\n        $required: false,\n        $type: 'Number'\n      }\n    })\n  }\n}\n\nexport default {\n  code: \"Array\",\n  description: \"Array\",\n  class: ArrayClass\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVRender extends TypeRender {\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value\n      })\n    }\n    return (ds)\n  }\n\n\n  render() {\n    const columns = [\n      {\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        dataIndex: 'value',\n        key: 'value',\n      }\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.subRender(<div>\n      <Table\n        showHeader={false}\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm,\n  Render: KVRender\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { LinkOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass HashForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass HashRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass HashInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#badb64\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass HashBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.configure()\n  }\n}\n\n/* <div class=\"ant-form-item-control-input\">\n  <div class=\"ant-form-item-control-input-content\">\n    <input type=\"text\" class=\"ant-input\" value=\"vdvfsdvfdsvfds\" style=\"width: 100%;\">\n      </div><span class=\"ant-form-item-children-icon\">\n        <span role=\"img\" aria-label=\"check-circle\" class=\"anticon anticon-check-circle\">\n          <svg viewBox=\"64 64 896 896\" focusable=\"false\" class=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\">\n              </path>\n              </svg>\n              </span>\n              </span>\n              </div> */\n\n\n\nexport default {\n  code: types.Hash.code,\n  description: types.Hash.description,\n  class: types.Hash.class,\n\n  Info: HashInfo,\n  Builder: HashBuilder,\n  Form: HashForm,\n  Render: HashRender,\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport DateTimePicker from \"./Types/DateTimePicker\"\nimport DatePicker from \"./Types/DatePicker\"\nimport DatePickerRange from \"./Types/DatePickerRange\"\n\nimport TimePicker from \"./Types/TimePicker\"\nimport TimePickerRange from \"./Types/TimePickerRange\"\n\nimport Select from \"./Types/Select\"\nimport Radio from \"./Types/Radio\"\nimport Object from \"./Types/Object\"\nimport Array from \"./Types/Array\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\nimport Hash from \"./Types/Hash\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Radio,\n  Checkbox,\n  DateTimePicker,\n  DatePicker,\n  DatePickerRange,\n  TimePicker,\n  TimePickerRange,\n  Hash,\n  Object,\n  Array,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  // compile(schema) {\n  //   // process normal compilation\n  //   super.compile(schema);\n  // }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\n\nexport class TypeDataset extends RecycledComponent {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n\n  }\n\n  cycle(props, first) {\n\n    const state = {\n      layout: props.layout ? props.layout : \"horizontal\"\n    }\n\n    // compile the schema\n    state.rawSchema = props.schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(state.rawSchema)\n\n    // create an input instance\n    // console.log(\"rawInput\", state.rawInput === props.rawInput)\n    state.rawInput = props.input\n    state.input = new FieldifyInput(state.schema)\n    state.input.setValue(props.input)\n\n    state.inputValue = state.input.getValue()\n    state.verify = props.verify || false\n\n    state.actions = props.actions;\n    state.generator = props.generator;\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    // state.reactive = this.update(state.schema, state.inputValue, state.verify);\n    state.reactive = this.update({\n      state,\n      root: state.schema,\n      input: state.inputValue,\n      verify: state.verify\n    })\n    return (state)\n  }\n\n  getValue() {\n    return (this.state.input.getValue())\n  }\n\n  clickAddArray(line) {\n    this.state.input.set(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      // reactive: this.update(this.state.schema, _value, false)\n      reactive: this.update({\n        state: this.state,\n        root: this.state.schema,\n        input: _value,\n        verify: false,\n      })\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.state.input.remove(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      // reactive: this.update(this.state.schema, _value, false)\n\n      reactive: this.update({\n        state: this.state,\n        root: this.state.schema,\n        input: _value,\n        verify: false,\n      })\n\n    })\n  }\n\n\n  setValue(line, value) {\n    if (!this.state.input) return;\n\n    this.state.input.set(line, value)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value\n    })\n  }\n\n  update(up) {\n\n    var { root, input, verify, state } = up;\n\n    const follower = (schema, schematized, input, ret, line) => {\n      line = line || \"\"\n\n      if (!input) input = {}\n\n      utils.orderedRead(schema, (index, item) => {\n\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        const schematizedSrc = schematized[source.$_key];\n        const sourceSchematized = { ...Array.isArray(schematizedSrc) ? schematizedSrc[0] : schematizedSrc };\n\n        const inputPtr = input ? input[source.$_key] : null;\n        const lineKey = line + \".\" + source.$_key;\n\n        if (source.$_array === true) {\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            }\n          ];\n\n          if (state.actions === true) {\n            columns.push({\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            })\n          }\n\n          const dataSource = []\n\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          if (source.$_nested === true) {\n            var inputPtr2 = input[source.$_key]\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[source.$_key] = [];\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const child = [];\n              follower(source, sourceSchematized, value, child, key);\n\n              const toPush = { key, form: child }\n              if (state.actions === true) {\n                toPush.actions = <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              }\n              dataSource.push(toPush)\n            }\n          }\n          else if (source.$type) {\n            delete sourceSchematized.$doc; // source is cloned\n            const TypeForm = source.$type[state.generator];\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[source.$_key] = [];\n              inputPtr2 = input[source.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const toPush = {\n                key,\n                form: <TypeForm\n                  schema={sourceSchematized}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />\n              }\n              if (state.actions === true) {\n                toPush.actions = <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              }\n              dataSource.push(toPush)\n            }\n          }\n\n          ret.push(<Form.Item key={source.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                {inputPtr2 && state.actions === true ?\n                  <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                    <span><PlusIcon /></span>\n                  </span>\n                  : null}\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n\n        }\n        else {\n          if (source.$_nested === true) {\n            const child = [];\n\n            follower(source, sourceSchematized, inputPtr, child, lineKey);\n\n            ret.push(<div key={source.$_wire} className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$doc}>\n                {child}\n              </Card>\n            </div>);\n          }\n          else if (item.$type) {\n            const TypeForm = item.$type[state.generator];\n\n            ret.push(<TypeForm\n              schema={sourceSchematized}\n              value={inputPtr}\n              key={source.$_wire}\n              verify={verify}\n              user={this.props.user}\n              onChange={(schema, value) => this.setValue(lineKey, value)}\n\n              // reference errors\n              onError={(error, message) => {\n                if (error === true) {\n                  this.references[source.$_wire] = message;\n                }\n                else {\n                  const ref = this.references[source.$_wire];\n                  if (ref) {\n                    delete this.references[source.$_wire];\n                  }\n                }\n              }}\n            />);\n          }\n        }\n      });\n      return (ret);\n    };\n\n    const ret = [];\n    follower(\n      root.handler.schema,\n      root.handlerSchematized.schema,\n      input,\n      ret\n    );\n    return (ret);\n  }\n\n  render() {\n    var layout = {};\n\n    if (this.state.layout === 'horizontal') {\n      layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n      }\n    }\n    return (<Form\n      layout={this.state.layout}\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { TypeDataset } from \"../lib/TypeDataset\";\n\nexport class FieldifySchemaForm extends RecycledComponent {\n  cycle(props) {\n    const state = {\n      layout: props.layout,\n      schema: props.schema,\n      input: props.input,\n      onChange: props.onChange,\n    }\n\n    return(state)\n  }\n\n  render() {\n    return (<TypeDataset\n      schema={this.state.schema}\n      input={this.state.input}\n      onChange={this.state.onChange}\n      actions={true}\n      layout={this.state.layout}\n      generator=\"Form\"\n    />);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n// build all available types\nconst allTypes = {}\nconst allTypesNoArray = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n  if (a !== \"Array\") {\n    allTypesNoArray[a] = Types[a].description\n  }\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true,\n    $position: 10\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: \"Select\",\n    $required: true,\n    $options: {\n      items: allTypes\n    },\n    $position: 11\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: false,\n    $type: \"String\",\n    $position: 22\n  },\n  position: {\n    $doc: \"Position in the serie\",\n    $required: false,\n    $type: \"Number\",\n    $default: 0,\n    $options: {\n      acceptedTypes: \"integer\"\n    },\n    $position: 23\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n\n    // here we have 3 cases\n    // normal case = $_array !== true && $_nested !== true\n    // nested in array = $_array === true && $_nested === true\n    // normal in array = $_array === true && $_nested !== true\n    // single nested = $_array !== true && $_nested === true\n\n    const state = {\n      edition: false,\n      original: props.value,\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user,\n      verify: false\n    };\n   \n    if (state.user && state.user.$_wire) {\n      state.initialPath = state.user.$_wire;\n    }\n    else state.initialPath = '';\n\n    if (props.value) {\n      const val = props.value;\n\n      state.edition = true;\n\n      // normal case\n      if (val.$_array !== true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // nested in array\n      else if (val.$_array === true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // normal in array\n      else if (val.$_array === true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: typeof val.$type === \"string\" ? val.$type : val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // special handle for objects\n      else if (val.$_array !== true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n    }\n    // single addition\n    else {\n      // nothing to set\n      state.value = {}\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    return (state)\n  }\n\n  driveSchema(state, force) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n\n      // special cases for array \n      if (value.type === \"Array\") {\n        this.currentSchema.content = {\n          $doc: \"Item content type\",\n          $type: \"Select\",\n          $required: true,\n          $options: {\n            default: value.content || \"Object\",\n            items: allTypesNoArray\n          },\n          $position: 12\n        }\n      }\n\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      state.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n\n  }\n\n  handleOK() {\n    this.state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"red\"\n        state.form.state = \"Error\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n\n        this.setState(state)\n\n        // get the current input values \n        const value = result.result\n        // const value = this.state.input.getValue()\n        var nvalue = {}\n\n        // rename all root value with $\n        for (var key in value) nvalue['$' + key] = value[key]\n\n        // we will save the last path in order to reconstruct the field name\n        const source = this.state.initialPath.split('.')\n        source.pop()\n        source.push(value.key)\n        const npath = source.join('.')\n        delete nvalue.$key;\n\n        // because object and array are virtualized in the builder \n        // then we need to remap the item with the correct schema underlining\n\n        if (nvalue.$type === \"Array\" && nvalue.$content === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // normal in array\n        else if (nvalue.$type === \"Array\" && nvalue.$content !== \"Object\") {\n          nvalue.$type = nvalue.$content;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // special handle for objects\n        else if (nvalue.$type === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n        }\n\n        if (this.state.edition === true) {\n          this.props.onOk(({\n            edition: true,\n            oldPath: this.state.initialPath,\n            newPath: npath,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n        else {\n          this.props.onOk(({\n            edition: false,\n            newPath: this.state.initialPath + \".\" + value.key,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n      }\n    })\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={this.handleOK.bind(this)}\n      onCancel={onCancel}\n    >\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.currentSchema}\n        input={this.state.value}\n        user={this.props.user}\n        verify={this.state.verify}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\n\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"./Schema\";\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends RecycledComponent {\n\n  cycle(props, first) {\n    const state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.onChange = () => { }\n    if (props.onChange) this.onChange = props.onChange\n\n    // compile the schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(props.schema)\n\n    state.schemaDataSource = this.updateDataSource(state.schema)\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    return (state)\n  }\n\n  fireOnChange() {\n    const ex = this.state.schema.export()\n    // this.state.schema.compile(ex)\n\n    // fire on change for exporting the new schema\n    this.onChange(ex)\n  }\n\n  itemChanged(arg) {\n\n    if (arg.edition === true) {\n      const lineup = this.state.schema.getLineup(arg.oldPath);\n\n      // delete org\n      this.state.schema.removeLineup(arg.oldPath)\n\n      // put new\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field updated\",\n        description: `Field at ${arg.oldPath} has been successfully updated`\n      })\n    }\n\n    // manage addition\n    else {\n      // just put the new one\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field added\",\n        description: `Field at ${arg.newPath} has been successfully added`\n      })\n    }\n\n    this.fireOnChange();\n\n    this.setState({\n      modal: false,\n      modalContent: null,\n      modalUser: null,\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n  }\n\n  itemRemove(item) {\n    this.state.schema.removeLineup(item.$_wire);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_wire} has been successfully removed`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true,\n      modalContent: null,\n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  handlingEdit(item) {\n    const path = item.$_wire || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true,\n      modalContent: item,\n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  updateDataSource(root) {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        var path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if (Array.isArray(item)) {\n          path = wire + \".\" + item[0].$_key;\n          item[0].$_path = path;\n          item[0].$_array = true;\n\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          else {\n            item[0].$_nested = true;\n          }\n\n          current.push({\n            ptr: item[0],\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item[0].$_key}</strong>\n            </div>,\n            doc: item[0].$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item[0])} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item[0])}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if (typeof item === \"object\" && !item.$type) {\n          item.$_nested = true;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (root) {\n      data = fieldify2antDataTable(root.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { TypeDataset } from \"../lib/TypeDataset\";\n\nexport class FieldifySchemaRender extends RecycledComponent {\n  cycle(props) {\n    const state = {\n      layout: props.layout,\n      schema: props.schema,\n      input: props.input,\n    }\n\n    return(state)\n  }\n\n  render() {\n    return (<TypeDataset\n      schema={this.state.schema}\n      input={this.state.input}\n      actions={false}\n      layout={this.state.layout}\n      generator=\"Render\"\n    />);\n  }\n}\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\n// get current version\nimport pack from '../package.json'\nexport const Version = pack.version;\n\nimport \"antd/dist/antd.css\";\n\n"],"names":["FieldifyTypeForm","Component","constructor","props","state","cycle","componentDidUpdate","schema","setState","value","verify","feedback","status","options","isInjected","onChange","onError","help","$help","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","ret","error","message","render","children","React","Form","$doc","$required","marginBottom","sm","FieldifyTypeRender","RecycledComponent","injected","subRender","width","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","default","pNew","pOld","changed","key","o","n","setup","prev","a","p","configure","changeIt","change","Object","assign","StringForm","TypeForm","Input","placeholder","target","StringRender","TypeRender","StringInfo","TypeInfo","Tag","color","Icon","StringBuilder","TypeBuilder","minSize","maxSize","Space","InputNumber","code","types","String","description","class","Info","Builder","Render","TString","NameForm","result","from","setField","Row","Col","first","last","NameInfo","NameRender","getDerivedStateFromProps","final","trim","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","MailOutlined","EmailRender","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberRender","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxRender","CheckboxBuilder","DateTimePickerForm","DatePicker","date","format","DateTimePickerInfo","FieldTimeOutlined","DateTimePickerRender","DateTimePickerBuilder","DateTimePicker","DatePickerForm","dateString","DatePickerInfo","DatePickerRender","DatePickerBuilder","RangePicker","DatePickerRangeForm","res","to","DatePickerRangeInfo","DatePickerRangeRender","DatePickerRangeBuilder","DatePickerRange","TimePickerForm","TimePicker","TimePickerInfo","TimePickerRender","TimePickerBuilder","TimePickerRangeForm","TimePickerRangeInfo","TimePickerRangeRender","TimePickerRangeBuilder","TimePickerRange","SelectForm","items","updateItems","push","Select","SelectInfo","SelectRender","ptr","SelectBuilder","_radioVertical","display","height","lineHeight","RadioForm","style","horizontal","Radio","RadioInfo","RadioRender","RadioBuilder","ObjectClass","fieldifyType","ArrayClass","configuration","min","$type","max","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","Modal","bind","Alert","Table","total","length","pageSize","hideOnSinglePage","KVInfo","KVRender","KVBuilder","KV","HashForm","HashRender","HashInfo","HashBuilder","Hash","Array","FieldifySchema","name","resolver","Types","TypeDataset","formRef","createRef","rawSchema","compile","rawInput","FieldifyInput","setValue","inputValue","getValue","generator","references","reactive","update","root","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","up","follower","schematized","utils","orderedRead","index","item","source","isArray","schematizedSrc","$_key","sourceSchematized","inputPtr","lineKey","$_array","inputPtr2","$array","$_nested","child","toPush","form","Button","ref","$_wire","Card","$_access","handlerSchematized","FieldifySchemaForm","allTypes","allTypesNoArray","baseSchema","$position","doc","position","$default","acceptedTypes","FieldifySchemaBuilderModal","currentSchema","visible","edition","original","initialPath","val","required","read","$read","write","$write","content","driveSchema","force","Type","currentType","TypeObject","formChanged","handleOK","nvalue","split","pop","npath","join","$key","$content","no","getNO","nestedObject","onOk","oldPath","newPath","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","ex","export","itemChanged","arg","lineup","getLineup","removeLineup","setLineup","notification","success","modalContent","itemRemove","handlingEdit","self","fieldify2antDataTable","wire","current","$_path","composite","Tooltip","ObjectIcon","ArrayIcon","Popconfirm","sds","defaultExpandAllRows","FieldifySchemaRender","Schema","Version","pack","version"],"mappings":"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"}