{"version":3,"file":"index.umd.js","sources":["../src/lib/TypeForm.js","../src/lib/TypeRender.js","../src/lib/TypeInfo.js","../src/lib/TypeBuilder.js","../src/Types/String.js","../src/Types/Name.js","../src/Types/Email.js","../src/Types/Number.js","../src/Types/Checkbox.js","../src/Types/Select.js","../src/Types/Object.js","../src/Types/Array.js","../src/Types/FieldName.js","../src/Types/KV.js","../src/Types/Hash.js","../src/Types.js","../src/Schema/Schema.js","../src/lib/TypeDataset.js","../src/Schema/Form.js","../src/Schema/BuilderModal.js","../src/Schema/Builder.js","../src/Schema/Render.js","../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Form\n} from \"antd\";\n\nexport default class FieldifyTypeForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.cycle(props)\n  }\n\n\n  componentDidUpdate(props, state) {\n    if (this.props.schema !== props.schema) {\n      const cycle = this.cycle(this.props);\n      this.setState(cycle)\n    }\n  }\n\n  cycle(props) {\n    this.schema = props.schema;\n    \n    const state = {\n      value: props.value,\n      verify: props.verify,\n      feedback: false,\n      status: null,\n      options: {}\n    }\n\n    this.isInjected = props.isInjected;\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n    this.onError = props.onError ? props.onError : () => { };\n\n    if (!this.schema) {\n      this.schema = {}\n      return (state)\n    }\n\n    state.help = this.schema.$help;\n    state.options = this.schema.$options || {};\n    this.handler = this.schema.$_type;\n\n\n    // if (props.verify === true) {\n    //   this.verify(props.value, (ret) => {\n    //     this.state = { ...this.state, ...ret }\n    //   })\n    // }\n\n    return (state)\n  }\n\n  timedChange(cb, speed) {\n    if (this._changeTimer) {\n      this._changeTimerQueue++;\n      this._changeTimerCb = cb;\n      return;\n    }\n\n    cb = cb || this._changeTimerCb;\n    if (!cb) return;\n\n    delete this._changeTimerCb;\n    this._changeTimerQueue = 0;\n    this._changeTimer = setTimeout(() => {\n      cb(() => {\n        delete this._changeTimer;\n\n        // update in queue ?\n        if (this._changeTimerQueue > 0) {\n          this.timedChange(cb, speed);\n        }\n      })\n    }, speed)\n  }\n\n  changeValue(value, speed) {\n    speed = speed || 100;\n\n    this.setState({\n      value: value\n    })\n\n    this._lastValue = value;\n\n    this.timedChange((end) => {\n      this.verify(this._lastValue, (ret) => {\n        this.setState(ret);\n        if (ret.status !== \"success\") {\n          end();\n          return;\n        }\n        \n        this.onChange(this.schema, this._lastValue);\n        end();\n      })\n    }, speed)\n  }\n\n  verify(value, cb) {\n    if(!this.handler) {\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: \"No Handler on verifier\"\n      }))\n    }\n    \n    this.handler.verify(value, (error, message) => {\n      if (error === false) {\n        this.onError(false);\n        return (cb({\n          status: \"success\",\n          feedback: true,\n          help: null\n        }));\n      }\n\n      \n      this.onError(true, message);\n      return (cb({\n        status: \"error\",\n        feedback: true,\n        help: message\n      }))\n    })\n  }\n\n\n  render(children) {\n    // return(children)\n\n    if (this.isInjected === true) return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"0px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n\n    return (\n      <Form.Item\n        label={this.schema.$doc}\n        required={this.schema.$required}\n        validateStatus={this.state.status}\n        hasFeedback={this.state.feedback}\n        help={this.state.help}\n        style={{ marginBottom: \"8px\" }}\n        wrapperCol={{ sm: 24 }}\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n}\n\n","import React, { Component } from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  Col,\n  Row,\n  Form,\n  Input\n} from \"antd\";\n\nexport default class FieldifyTypeRender extends RecycledComponent {\n\n  cycle(props) {\n    const state = {\n      schema: props.schema,\n      value: props.value,\n      injected: props.injected\n    }\n\n    return (state)\n  }\n\n  subRender(children) {\n\n    if(this.state.injected === true) {\n      return (\n        <Form.Item\n          label={this.state.schema.$doc}\n          hasFeedback={true}\n          validateStatus=\"success\"\n          style={{ marginBottom: \"0px\" }}\n          wrapperCol={{ sm: 24 }}\n        >\n          {children}\n        </Form.Item>\n      )\n    }\n    return (\n      <Form.Item\n        label={this.state.schema.$doc}\n        hasFeedback={true}\n        validateStatus=\"success\"\n      >\n        {children}\n      </Form.Item>\n    )\n  }\n\n  render() {\n    return (this.subRender(\n      <div style={{ width: \"100%\" }}>\n        {this.state.value}\n      </div>\n    ));\n  }\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeInfo extends Component {\n  constructor(props) {\n    super(props)\n    this.props = props;\n    if (props.match) this.path = props.match.path;\n    this.state = {}\n  }\n\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.schema || {};\n    const pOld = prevProps.schema || {};\n    // console.log(\"SignderivaTypeInfo.update\", pOld, pNew)\n  }\n\n}\n\n","import { Component } from 'react';\n\nexport default class SignderivaTypeBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    if (props.match) this.path = props.match.path;\n\n    this.state = { ...props.options };\n\n    this.default = {};\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const pNew = this.props.options || {};\n    const pOld = prevProps.options || {};\n    \n    var changed = 0;\n    for (var key in this.default) {\n      const o = pOld[key];\n      const n = pNew[key];\n      if (o !== n)\n        changed++;\n    }\n\n    // console.log(\"TypeBuilder.update\", changed, pOld, pNew)\n    if (changed > 0) {\n      this.setState(pNew);\n      this.onChange({...pNew});\n    }\n    \n  }\n\n  setup(prev) {\n    // console.log(\"setup\")\n    const state = { ...prev };\n\n    // clean non valid field\n    for (var a in state) {\n      const p = this.default[a];\n      if (!p) delete state[a]\n    }\n\n    // setup default\n    for (var a in this.default) {\n      if (!(a in state))\n        state[a] = this.default[a];\n    }\n    return (state);\n  }\n\n  configure() {\n    this.state = this.setup(this.state);\n    this.onChange({ ...this.state });\n  }\n\n  changeIt(key, value) {\n    const change = Object.assign({}, this.state);\n    change[key] = value;\n\n    // console.log(\"TypeBuilder\", change)\n    this.setState(change);\n    this.onChange({...change});\n  }\n\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#fadb14\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass StringBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"String min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\n/* <div class=\"ant-form-item-control-input\">\n  <div class=\"ant-form-item-control-input-content\">\n    <input type=\"text\" class=\"ant-input\" value=\"vdvfsdvfdsvfds\" style=\"width: 100%;\">\n      </div><span class=\"ant-form-item-children-icon\">\n        <span role=\"img\" aria-label=\"check-circle\" class=\"anticon anticon-check-circle\">\n          <svg viewBox=\"64 64 896 896\" focusable=\"false\" class=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\">\n              </path>\n              </svg>\n              </span>\n              </span>\n              </div> */\n\n\n\nexport default {\n  code: types.String.code,\n  description: types.String.description,\n  class: types.String.class,\n\n  Info: StringInfo,\n  Builder: StringBuilder,\n  Form: StringForm,\n  Render: StringRender,\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { UserSwitchOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport TString from './String';\n\nconst StringForm = TString.Form\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameForm extends TypeForm {\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n    if (!ret.value) ret.value = {}\n    \n    this.result = {...ret.value}\n    return (ret)\n  }\n\n  error(from, error, message) {\n    // this.setState({\n    //   help: \"Please fill the form\"\n    // })\n  }\n\n  setField(key, schema, value) {\n    this.result[key] = value;\n    this.onChange(this.schema, this.result);\n  }\n\n  render() {\n\n    return (super.render(\n      <Row gutter={16}>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.first}\n            verify={this.state.verify}\n            value={this.state.value.first}\n            onChange={(schema, value) => this.setField(\"first\", schema, value)}\n            // onError={(error, message) => this.error(\"first\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n        <Col className=\"gutter-row\" span={12}>\n          <StringForm\n            schema={this.schema.last}\n            verify={this.state.verify}\n            value={this.state.value.last}\n            onChange={(schema, value) => this.setField(\"last\", schema, value)}\n            // onError={(error, message) => this.error(\"last\", error, message)}\n            isInjected={true}\n          />\n        </Col>\n      </Row>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#36cfc9\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(state.value && typeof state.value === \"object\") {\n      var final = \"\"\n\n      if(state.value.first) final += state.value.first\n      if(state.value.last) final += \" \"+state.value.last\n\n      state.value = final.trim()\n    }\n    return(state)\n  }\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Name min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Name.code,\n  description: types.Name.description,\n  class: types.Name.class,\n\n  Info: NameInfo,\n  Builder: NameBuilder,\n  Form: NameForm,\n  Render: NameRender,\n\n  noFormItem: true\n}\n\n\n","import { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Checkbox,\n  Form,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { MailOutlined } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input value={this.state.value} placeholder={this.state.options.placeholder} onChange={({ target }) => this.changeValue(target.value)} />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#1890ff\"><MailOutlined /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailRender extends TypeRender {\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Complement builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass EmailBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      subAddressing: true\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Sub-addressing\">\n          <Checkbox checked={this.state.subAddressing} onChange={({ target }) => this.changeIt(\"subAddressing\", target.checked)}>Allowed</Checkbox>\n        </Form.Item>\n      </div>\n    )\n  }\n}\n\n\nexport default {\n  code: types.Email.code,\n  description: types.Email.description,\n  class: types.Email.class,\n\n  Info: EmailInfo,\n  Builder: EmailBuilder,\n  Form: EmailForm,\n  Render: EmailRender\n}","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { NumberOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberForm extends TypeForm {\n  render() {\n    return (super.render(\n      <InputNumber \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={(value) => this.changeValue(value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#ff7a45\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass NumberBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Number.code,\n  description: types.Number.description,\n  class: types.Number.class,\n\n  Info: NumberInfo,\n  Builder: NumberBuilder,\n  Form: NumberForm,\n  Render: NumberRender\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row,\n  Checkbox\n} from \"antd\";\n\nimport { CheckSquareOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\nimport TypeRender from '../lib/TypeRender';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Checkbox\n        checked={this.state.value}\n        onChange={({ target }) => this.changeValue(target.checked)}\n        style={{ width: \"100%\" }}\n      >\n        {this.state.options.placeholder}\n      </Checkbox>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#85144b\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass CheckboxBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n    this.configure()\n  }\n\n}\n\nexport default {\n  code: types.Checkbox.code,\n  description: types.Checkbox.description,\n  class: types.Checkbox.class,\n\n  Info: CheckboxInfo,\n  Builder: CheckboxBuilder,\n  Form: CheckboxForm,\n  Render: CheckboxRender,\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Select,\n  Col,\n  Row\n} from \"antd\";\n\nimport { SelectOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectForm extends TypeForm {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: props.value,\n      options: {}\n    }\n\n    if (props.schema.$options) this.state.options = props.schema.$options\n\n    if(!this.state.value && this.state.options.default) {\n      this.state.value = this.state.options.default\n      // inform the change\n      this.onChange(this.schema, this.state.value);\n    }\n\n    this.state.items = this.updateItems()\n  }\n\n  updateItems() {\n    if (!this.state.options.items) return ([])\n\n    const options = []\n    for (var key in this.state.options.items) {\n      const value = this.state.options.items[key];\n      options.push(<Select.Option value={key} key={key}>{value}</Select.Option>)\n    }\n\n    return (options)\n  }\n\n  render() {\n    return (super.render(\n      <Select value={this.state.value} onChange={(value)  => this.changeValue(value)}>\n        {this.state.items}\n      </Select>\n    ))\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#52c41a\" style={{ color: \"white\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectRender extends TypeRender {\n  static getDerivedStateFromProps(props, state) {\n    if(typeof state.value === \"string\") {\n\n      if(props.schema.$options && props.schema.$options.items) {\n        const ptr = props.schema.$options.items\n        if(ptr[state.value]) state.value = ptr[state.value]\n      }\n    }\n    return(state)\n  }\n\n}\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass SelectBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"Select min/max size\">\n          <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space>\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.Select.code,\n  description: types.Select.description,\n  class: types.Select.class,\n\n  Info: SelectInfo,\n  Builder: SelectBuilder,\n  Form: SelectForm,\n  Render: SelectRender\n}\n\n\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\n\nclass ObjectClass extends fieldifyType {\n}\n\n\nexport default {\n  code: \"Object\",\n  description: \"Nested Sub Object\",\n  class: ObjectClass\n}\n","// this is a hidden type\n// to manage nested object\nimport { types,  fieldifyType } from 'fieldify'\n\nclass ArrayClass extends fieldifyType {\n  configuration () {\n    return ({\n      min: {\n        $doc: 'Minimum of items',\n        $required: false,\n        $type: 'Number'\n      },\n      max: {\n        $doc: 'Maximun of items',\n        $required: false,\n        $type: 'Number'\n      }\n    })\n  }\n}\n\nexport default {\n  code: \"Array\",\n  description: \"Array\",\n  class: ArrayClass\n}\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { FieldStringOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\nimport String from './String'\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameForm extends String.Form { \n  constructor(props){\n    super(props)\n  }\n\n  verify(input, cb) {\n    super.verify(input, (ret)=>{\n      if(ret.status !== \"success\") {\n        return(cb(ret))\n      }\n\n      // check if the key is already used\n      if(this.props.user && input in this.props.user) {\n        const msg = `Field name already used`\n        \n        this.onError(true, msg);\n        return (cb({\n          status: \"error\",\n          feedback: true,\n          help: msg\n        }))\n      }\n\n      cb(ret)\n    })\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameInfo extends String.Info { }\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass FieldNameBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    // this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n        <Form.Item label=\"FieldName min/max size\">\n          {/* <Space>\n            <InputNumber min={0} value={this.state.minSize} onChange={(value) => this.changeIt(\"minSize\", value)} />\n\n            <InputNumber min={0} value={this.state.maxSize} onChange={(value) => this.changeIt(\"maxSize\", value)} />\n          </Space> */}\n        </Form.Item>\n\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.FieldName.code,\n  description: types.FieldName.description,\n  class: types.FieldName.class,\n\n  Info: FieldNameInfo,\n  Builder: FieldNameBuilder,\n  Form: FieldNameForm\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  Table,\n  Form,\n  Input,\n  Tag,\n  Modal,\n  Alert,\n  Row\n} from \"antd\";\n\nimport {\n  SmallDashOutlined as Icon,\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVForm extends TypeForm {\n\n  constructor(props) {\n    super(props)\n  }\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.modal = false\n    ret.modalCurrent = {\n      key: \"\",\n      value: \"\"\n    }\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value,\n        actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.removeKey(key)}>\n            <span><DeleteIcon /></span>\n          </span>\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal({ key, value })}>\n            <span><EditIcon /></span>\n          </span>\n        </div>\n      })\n    }\n    return (ds)\n  }\n\n  handleModalChange(key, value) {\n    const modalCurrent = { ...this.state.modalCurrent }\n    modalCurrent[key] = value;\n    this.setState({ modalCurrent })\n  }\n\n  openModal(data) {\n    const state = {\n      modalError: false,\n      modalInitial: null,\n      modalCurrent: data || {\n        key: \"\",\n        value: \"\"\n      },\n      modal: true\n    }\n\n    if (data) state.modalInitial = { ...state.modalCurrent }\n\n    this.setState(state)\n  }\n\n  removeKey(key) {\n    const state = { ...this.state }\n    delete state.dataTree[key]\n    state.dataSource = this.computeDataSource(state.dataTree);\n    this.setState(state)\n\n    this.changeValue(state.dataTree)\n  }\n\n  editedButton() {\n    const state = { ...this.state }\n\n    const mc = this.state.modalCurrent;\n\n    // check the key input\n    const type = this.schema.$_type;\n\n    // verify the input\n    const data = {}\n    data[mc.key] = mc.value;\n    type.verify(data, (error, message) => {\n      state.modalError = error;\n      state.modalErrorMessage = message;\n\n      if (error === false) {\n        // remove old entry and add new one\n        if (state.modalInitial) {\n          delete state.dataTree[state.modalInitial.key];\n        }\n        state.dataTree[state.modalCurrent.key] = state.modalCurrent.value\n\n        state.dataSource = this.computeDataSource(state.dataTree);\n\n        state.modal = false;\n      }\n\n      this.setState(state)\n      this.changeValue(state.dataTree)\n    })\n\n  }\n\n  render() {\n    const onCancel = () => {\n      this.setState({ modal: false });\n    };\n\n    const columns = [\n      {\n        title: 'Key',\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        title: 'Value',\n        dataIndex: 'value',\n        key: 'value',\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.openModal()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.render(<div>\n      <Modal\n        centered\n        closable={false}\n        visible={this.state.modal}\n        width={300}\n        onOk={this.editedButton.bind(this)}\n        onCancel={onCancel}\n      >\n        {this.state.modalError === true ?\n          <div style={{ marginBottom: 8 }}>\n            <Alert size=\"small\" message={this.state.modalErrorMessage} type=\"error\" />\n          </div>\n\n          : null}\n\n        <Form\n          {...layout}\n        >\n          <Form.Item label=\"Key\">\n            <Input value={this.state.modalCurrent.key} onChange={({ target }) => this.handleModalChange(\"key\", target.value)} />\n          </Form.Item>\n\n          <Form.Item label=\"Value\">\n            <Input value={this.state.modalCurrent.value} onChange={({ target }) => this.handleModalChange(\"value\", target.value)} />\n          </Form.Item>\n\n        </Form>\n\n\n      </Modal>\n      <Table\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#22075e\"><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVRender extends TypeRender {\n\n  cycle(props) {\n    const ret = super.cycle(props)\n\n    if (!ret.value) ret.value = {}\n\n    this.result = { ...ret.value }\n\n    ret.dataTree = { ...ret.value }\n    ret.dataSource = this.computeDataSource(ret.dataTree);\n\n    return (ret)\n  }\n\n  computeDataSource(tree) {\n    const ds = []\n    for (let key in tree) {\n      const value = tree[key]\n      ds.push({\n        key: key,\n        value: value\n      })\n    }\n    return (ds)\n  }\n\n\n  render() {\n    const columns = [\n      {\n        dataIndex: 'key',\n        key: 'key',\n      },\n      {\n        dataIndex: 'value',\n        key: 'value',\n      }\n    ];\n\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (super.subRender(<div>\n      <Table\n        showHeader={false}\n        size=\"small\"\n        dataSource={this.state.dataSource}\n        columns={columns}\n        pagination={{\n          total: this.state.dataSource.length,\n          pageSize: this.state.dataSource.length,\n          hideOnSinglePage: true\n        }}\n      />\n    </div>));\n  }\n\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass KVBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.default = {\n      minSize: 1,\n      maxSize: 128\n    }\n\n    this.configure()\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default {\n  code: types.KV.code,\n  description: types.KV.description,\n  class: types.KV.class,\n\n  Info: KVInfo,\n  Builder: KVBuilder,\n  Form: KVForm,\n  Render: KVRender\n}\n\n\n","\nimport { types } from 'fieldify'\n\nimport React from 'react';\n\nimport {\n  InputNumber,\n  Form,\n  Space,\n  Tag,\n  Input,\n  Col,\n  Row\n} from \"antd\";\n\nimport { LinkOutlined as Icon } from '@ant-design/icons';\n\nimport TypeForm from '../lib/TypeForm';\nimport TypeRender from '../lib/TypeRender';\nimport TypeInfo from '../lib/TypeInfo';\nimport TypeBuilder from '../lib/TypeBuilder';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field in a form\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass HashForm extends TypeForm {\n  render() {\n    return (super.render(\n      <Input \n      value={this.state.value} \n      placeholder={this.state.options.placeholder} \n      onChange={({ target }) => this.changeValue(target.value)} \n      style={{width: \"100%\"}}\n      />\n    ));\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Rendering of the field\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass HashRender extends TypeRender {\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Information of the field show fancy information of the type\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass HashInfo extends TypeInfo {\n  render() {\n    return (\n      <span>\n        <Tag color=\"#badb64\" style={{ color: \"#555555\" }}><Icon /></Tag>\n      </span>\n    )\n  }\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *\n *\n * Field builder\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\nclass HashBuilder extends TypeBuilder {\n  constructor(props) {\n    super(props)\n\n    this.configure()\n  }\n}\n\n/* <div class=\"ant-form-item-control-input\">\n  <div class=\"ant-form-item-control-input-content\">\n    <input type=\"text\" class=\"ant-input\" value=\"vdvfsdvfdsvfds\" style=\"width: 100%;\">\n      </div><span class=\"ant-form-item-children-icon\">\n        <span role=\"img\" aria-label=\"check-circle\" class=\"anticon anticon-check-circle\">\n          <svg viewBox=\"64 64 896 896\" focusable=\"false\" class=\"\" data-icon=\"check-circle\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\">\n              </path>\n              </svg>\n              </span>\n              </span>\n              </div> */\n\n\n\nexport default {\n  code: types.Hash.code,\n  description: types.Hash.description,\n  class: types.Hash.class,\n\n  Info: HashInfo,\n  Builder: HashBuilder,\n  Form: HashForm,\n  Render: HashRender,\n}\n\n\n","import Name from \"./Types/Name\"\nimport Email from \"./Types/Email\"\nimport String from \"./Types/String\"\nimport Number from \"./Types/Number\"\nimport Checkbox from \"./Types/Checkbox\"\nimport Select from \"./Types/Select\"\nimport Object from \"./Types/Object\"\nimport Array from \"./Types/Array\"\nimport FieldName from \"./Types/FieldName\"\nimport KV from \"./Types/KV\"\nimport Hash from \"./Types/Hash\"\n\nexport default {\n  Name,\n  Email,\n  String,\n  Number,\n  Select,\n  Checkbox,\n  Hash,\n  Object,\n  Array,\n  FieldName,\n  KV\n}\n","import { schema } from \"fieldify\";\nimport Types from \"../Types\"\n\nexport class FieldifySchema extends schema {\n  constructor(name, options) {\n    super(name, options);\n  }\n\n  resolver(type) {\n    return (Types[type])\n  }\n\n  compile(schema) {\n    // process normal compilation\n    super.compile(schema);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\n\n\nexport class TypeDataset extends RecycledComponent {\n  constructor(props) {\n    super(props)\n\n    this.formRef = React.createRef()\n\n  }\n\n  cycle(props, first) {\n\n    const state = {\n      layout: props.layout ? props.layout : \"horizontal\"\n    }\n\n    // compile the schema\n    state.rawSchema = props.schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(state.rawSchema)\n\n    // create an input instance\n    // console.log(\"rawInput\", state.rawInput === props.rawInput)\n    state.rawInput = props.input\n    state.input = new FieldifyInput(state.schema)\n    state.input.setValue(props.input)\n\n    state.inputValue = state.input.getValue()\n    state.verify = props.verify || false\n\n    state.actions = props.actions;\n    state.generator = props.generator;\n\n    this.references = {};\n\n    this.onChange = props.onChange ? props.onChange : () => { };\n\n    // state.reactive = this.update(state.schema, state.inputValue, state.verify);\n    state.reactive = this.update({\n      state,\n      root: state.schema,\n      input: state.inputValue,\n      verify: state.verify\n    })\n    return (state)\n  }\n\n  getValue() {\n    return (this.state.input.getValue())\n  }\n\n  clickAddArray(line) {\n    this.state.input.set(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      // reactive: this.update(this.state.schema, _value, false)\n      reactive: this.update({\n        state: this.state,\n        root: this.state.schema,\n        input: _value,\n        verify: false,\n      })\n    })\n  }\n\n  clickRemoveArrayItem(line) {\n    this.state.input.remove(line)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value,\n      // reactive: this.update(this.state.schema, _value, false)\n\n      reactive: this.update({\n        state: this.state,\n        root: this.state.schema,\n        input: _value,\n        verify: false,\n      })\n\n    })\n  }\n\n\n  setValue(line, value) {\n    if (!this.state.input) return;\n\n    this.state.input.set(line, value)\n    const _value = this.state.input.getValue();\n    this.onChange(this.state.input, _value)\n    this.setState({\n      inputValue: _value\n    })\n  }\n\n  update(up) {\n\n    var { root, input, verify, state } = up;\n\n    const follower = (schema, schematized, input, ret, line) => {\n      line = line || \"\"\n\n      if (!input) input = {}\n\n      utils.orderedRead(schema, (index, item) => {\n\n        const source = { ...Array.isArray(item) ? item[0] : item };\n        const schematizedSrc = schematized[source.$_key];\n        const sourceSchematized = { ...Array.isArray(schematizedSrc) ? schematizedSrc[0] : schematizedSrc };\n\n        const inputPtr = input ? input[source.$_key] : null;\n        const lineKey = line + \".\" + source.$_key;\n\n        if (source.$_array === true) {\n          const columns = [\n            {\n              dataIndex: 'form',\n              key: 'form',\n              width: \"100%\"\n            }\n          ];\n\n          if (state.actions === true) {\n            columns.push({\n              dataIndex: 'actions',\n              key: 'actions',\n              align: \"right\"\n            })\n          }\n\n          const dataSource = []\n\n          var inputPtr2 = inputPtr;\n          const options = source.$array || {};\n          const min = options.min ? options.min : (source.$required === true ? 1 : 0)\n\n          if (source.$_nested === true) {\n            var inputPtr2 = input[source.$_key]\n\n            if (!Array.isArray(inputPtr)) inputPtr2 = input[source.$_key] = [];\n\n            // force to create min form\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push({})\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const child = [];\n              follower(source, sourceSchematized, value, child, key);\n\n              const toPush = { key, form: child }\n              if (state.actions === true) {\n                toPush.actions = <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              }\n              dataSource.push(toPush)\n            }\n          }\n          else if (source.$type) {\n            delete sourceSchematized.$doc; // source is cloned\n            const TypeForm = source.$type[state.generator];\n\n            // console.log(\"Array non nested\", min, inputPtr2)\n\n            if (verify === true) {\n              // console.log()\n            }\n\n            if (!Array.isArray(inputPtr)) {\n              input[source.$_key] = [];\n              inputPtr2 = input[source.$_key];\n            }\n\n            if (!inputPtr2) return (ret);\n\n            if (min - inputPtr2.length > 0) {\n              for (var a = 0; a <= min - inputPtr2.length; a++) {\n                inputPtr2.push(null)\n              }\n            }\n\n            for (var a = 0; a < inputPtr2.length; a++) {\n              const value = inputPtr2[a];\n              const key = lineKey + \".\" + a\n\n              const toPush = {\n                key,\n                form: <TypeForm\n                  schema={sourceSchematized}\n                  value={value}\n                  verify={verify}\n                  user={this.props.user}\n                  onChange={(schema, value) => this.setValue(key, value)}\n                  isInjected={true}\n\n                  // reference errors\n                  onError={(error, message) => {\n                    if (error === true) {\n                      this.references[key] = message;\n                    }\n                    else {\n                      const ref = this.references[key];\n                      if (ref) {\n                        delete this.references[key];\n                      }\n                    }\n                  }}\n                />\n              }\n              if (state.actions === true) {\n                toPush.actions = <Button size=\"small\" onClick={() => this.clickRemoveArrayItem(key)}>\n                  <span><DeleteIcon /></span>\n                </Button>\n              }\n              dataSource.push(toPush)\n            }\n          }\n\n          ret.push(<Form.Item key={source.$_wire} noStyle={true}>\n            <div className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$_access.$doc} extra={<div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n                {inputPtr2 && state.actions === true ?\n                  <span className=\"ant-radio-button-wrapper\" onClick={() => this.clickAddArray(lineKey + \".\" + inputPtr2.length)}>\n                    <span><PlusIcon /></span>\n                  </span>\n                  : null}\n              </div>}>\n                <Table\n                  size=\"small\"\n                  dataSource={dataSource}\n                  columns={columns}\n                  verticalAlign='middle'\n                  showHeader={false}\n                  pagination={{\n                    total: dataSource.length,\n                    pageSize: dataSource.length,\n                    hideOnSinglePage: true\n                  }}\n                  bordered\n                />\n              </Card>\n            </div>\n          </Form.Item>);\n\n        }\n        else {\n          if (source.$_nested === true) {\n            const child = [];\n\n            follower(source, sourceSchematized, inputPtr, child, lineKey);\n\n            ret.push(<div key={source.$_wire} className=\"ant-form-item\">\n              <Card size=\"small\" title={source.$doc}>\n                {child}\n              </Card>\n            </div>);\n          }\n          else if (item.$type) {\n            const TypeForm = item.$type[state.generator];\n\n            ret.push(<TypeForm\n              schema={sourceSchematized}\n              value={inputPtr}\n              key={source.$_wire}\n              verify={verify}\n              user={this.props.user}\n              onChange={(schema, value) => this.setValue(lineKey, value)}\n\n              // reference errors\n              onError={(error, message) => {\n                if (error === true) {\n                  this.references[source.$_wire] = message;\n                }\n                else {\n                  const ref = this.references[source.$_wire];\n                  if (ref) {\n                    delete this.references[source.$_wire];\n                  }\n                }\n              }}\n            />);\n          }\n        }\n      });\n      return (ret);\n    };\n\n    const ret = [];\n    follower(\n      root.handler.schema,\n      root.handlerSchematized.schema,\n      input,\n      ret\n    );\n    return (ret);\n  }\n\n  render() {\n    var layout = {};\n\n    if (this.state.layout === 'horizontal') {\n      layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n      }\n    }\n    return (<Form\n      layout={this.state.layout}\n      key={this.formRef}\n      {...layout}\n      name=\"basic\" >\n      {this.state.reactive}\n    </Form>);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { TypeDataset } from \"../lib/TypeDataset\";\n\nexport class FieldifySchemaForm extends RecycledComponent {\n  cycle(props) {\n    const state = {\n      layout: props.layout,\n      schema: props.schema,\n      input: props.input,\n      onChange: props.onChange,\n    }\n\n    return(state)\n  }\n\n  render() {\n    return (<TypeDataset\n      schema={this.state.schema}\n      input={this.state.input}\n      onChange={this.state.onChange}\n      actions={true}\n      layout={this.state.layout}\n      generator=\"Form\"\n    />);\n  }\n}\n","import { utils, input as FieldifyInput } from \"fieldify\";\n\nimport React from 'react';\nimport Types from '../Types';\nimport { Modal, Form, Input, Select, Checkbox, Tag } from \"antd\";\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { FieldifySchemaForm } from './Form'\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n// build all available types\nconst allTypes = {}\nconst allTypesNoArray = {}\nfor (var a in Types) {\n  allTypes[a] = Types[a].description\n  if (a !== \"Array\") {\n    allTypesNoArray[a] = Types[a].description\n  }\n}\n\n// set the very basic schema for the modal\nconst baseSchema = {\n  key: {\n    $doc: \"Name of the field\",\n    $type: Types.FieldName,\n    $required: true,\n    $position: 10\n  },\n  type: {\n    $doc: \"Field type\",\n    $type: \"Select\",\n    $required: true,\n    $options: {\n      items: allTypes\n    },\n    $position: 11\n  },\n  doc: {\n    $doc: \"Description\",\n    $required: false,\n    $type: \"String\",\n    $position: 22\n  },\n  position: {\n    $doc: \"Position in the serie\",\n    $required: false,\n    $type: \"Number\",\n    $default: 0,\n    $options: {\n      acceptedTypes: \"integer\"\n    },\n    $position: 23\n  },\n  // options: {\n  //   $doc: \"Options\",\n  //   $type: Types.Checkbox,\n  //   $options: {\n  //     required: \"Field is required\",\n  //     readOnly: \"Field is read only\",\n  //   }\n  // },\n}\n\nexport class FieldifySchemaBuilderModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formRef = React.createRef()\n    this.state = this.cycle(props, true)\n    this.currentSchema = baseSchema\n  }\n\n  componentDidUpdate(props) {\n    var changed = false\n    var state = { ...this.state }\n\n    if (this.props.visible !== props.visible) {\n      this.currentSchema = baseSchema\n      state = this.cycle(this.props)\n      changed = true;\n    }\n\n    if (changed === true) this.setState(state)\n  }\n\n  cycle(props, first) {\n\n    // here we have 3 cases\n    // normal case = $_array !== true && $_nested !== true\n    // nested in array = $_array === true && $_nested === true\n    // normal in array = $_array === true && $_nested !== true\n    // single nested = $_array !== true && $_nested === true\n\n    const state = {\n      edition: false,\n      original: props.value,\n      form: {\n        state: \"Filling\",\n        color: \"blue\"\n      },\n      value: {},\n      visible: props.visible,\n      user: props.user,\n      verify: false\n    };\n   \n    if (state.user && state.user.$_wire) {\n      state.initialPath = state.user.$_wire;\n    }\n    else state.initialPath = '';\n\n    if (props.value) {\n      const val = props.value;\n\n      state.edition = true;\n\n      // normal case\n      if (val.$_array !== true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // nested in array\n      else if (val.$_array === true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // normal in array\n      else if (val.$_array === true && val.$_nested !== true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Array\",\n          content: typeof val.$type === \"string\" ? val.$type : val.$type.code,\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n      // special handle for objects\n      else if (val.$_array !== true && val.$_nested === true) {\n        state.value = {\n          key: val.$_key,\n          type: \"Object\",\n          doc: val.$doc,\n          required: val.$required,\n          read: val.$read,\n          write: val.$write,\n          options: val.$options,\n          position: val.$position,\n        }\n      }\n    }\n    // single addition\n    else {\n      // nothing to set\n      state.value = {}\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    return (state)\n  }\n\n  driveSchema(state, force) {\n    const value = state.value;\n\n    const Type = Types[value.type]\n    if (Type && Type !== this.currentType) {\n      // create a fake tmp type\n      const TypeObject = new Type.class\n\n      const configuration = TypeObject.configuration()\n\n      this.currentSchema = { ...baseSchema }\n\n      // special cases for array \n      if (value.type === \"Array\") {\n        this.currentSchema.content = {\n          $doc: \"Item content type\",\n          $type: \"Select\",\n          $required: true,\n          $options: {\n            default: value.content || \"Object\",\n            items: allTypesNoArray\n          },\n          $position: 12\n        }\n      }\n\n      if (configuration) this.currentSchema.options = {\n        ...configuration,\n        $doc: \"Type configuration\"\n      };\n\n      // const upSchema = Type.\n      state.currentType = Type;\n\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n\n    }\n    else {\n      state.schema = new FieldifySchema(\"modal\");\n      state.schema.compile(this.currentSchema);\n      state.input = new FieldifyInput(state.schema)\n    }\n  }\n\n\n  formChanged(value) {\n\n    const state = {\n      schema: this.state.schema,\n      input: this.state.input,\n      value: { ...this.state.value, ...value }\n    }\n\n    this.driveSchema(state)\n    state.input.setValue(state.value)\n    this.setState(state)\n\n    state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"blue\"\n        state.form.state = \"Filling\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n      }\n\n      this.setState(state)\n    })\n\n  }\n\n  handleOK() {\n    this.state.input.verify((result) => {\n      const state = { form: {} }\n      state.verify = true;\n\n      state.error = result.error\n\n      if (result.error === true) {\n        state.form.color = \"red\"\n        state.form.state = \"Error\"\n      }\n      else {\n        state.form.color = \"green\"\n        state.form.state = \"Passed\"\n\n        this.setState(state)\n\n        // get the current input values \n        const value = result.result\n        // const value = this.state.input.getValue()\n        var nvalue = {}\n\n        // rename all root value with $\n        for (var key in value) nvalue['$' + key] = value[key]\n\n        // we will save the last path in order to reconstruct the field name\n        const source = this.state.initialPath.split('.')\n        source.pop()\n        source.push(value.key)\n        const npath = source.join('.')\n        delete nvalue.$key;\n\n        // because object and array are virtualized in the builder \n        // then we need to remap the item with the correct schema underlining\n\n        if (nvalue.$type === \"Array\" && nvalue.$content === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // normal in array\n        else if (nvalue.$type === \"Array\" && nvalue.$content !== \"Object\") {\n          nvalue.$type = nvalue.$content;\n          delete nvalue.$content;\n          nvalue = [nvalue]\n        }\n        // special handle for objects\n        else if (nvalue.$type === \"Object\") {\n\n          if (this.state.edition === true) {\n            // recopy nestedObjects if exists\n            // avoid root copy\n            if (this.props.user.$_wire) {\n              const no = utils.getNO(this.props.user)\n              for (var a in no.nestedObject) {\n                const p = no.nestedObject[a]\n                nvalue[p[0]] = p[1]\n              }\n            }\n          }\n          else if(!nvalue.$doc) nvalue.$doc = \"\"\n\n          delete nvalue.$type;\n        }\n\n        if (this.state.edition === true) {\n          this.props.onOk(({\n            edition: true,\n            oldPath: this.state.initialPath,\n            newPath: npath,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n        else {\n          this.props.onOk(({\n            edition: false,\n            newPath: this.state.initialPath + \".\" + value.key,\n            key: value.key,\n            value: nvalue\n          }))\n        }\n      }\n    })\n\n  }\n\n  render() {\n    const onOk = () => {\n      // this.onOk(this.state);\n    };\n    const onCancel = () => {\n      // this.setState({ visible: false });\n      this.props.onCancel(this.state);\n    };\n    const layout = {\n      labelCol: { span: 8 },\n      wrapperCol: { span: 16 },\n    };\n\n    return (<Modal\n      title={<span>Add New Field To Your Schema <Tag color={this.state.form.color}>{this.state.form.state}</Tag></span>}\n      centered\n      visible={this.state.visible}\n      width={600}\n      onOk={this.handleOK.bind(this)}\n      onCancel={onCancel}\n    >\n      <FieldifySchemaForm\n        ref={this.formRef}\n        schema={this.currentSchema}\n        input={this.state.value}\n        user={this.props.user}\n        verify={this.state.verify}\n        onChange={this.formChanged.bind(this)}\n      />\n\n    </Modal>);\n  }\n}\n","import React from 'react';\n\nimport RecycledComponent from 'react-recycling';\n\nimport {\n  schema,\n  iterator,\n  assign,\n  fusion,\n  utils\n} from \"fieldify\"\n\nimport {\n  notification,\n  Table,\n  Tag,\n  Popconfirm,\n  Tooltip\n} from 'antd';\n\nimport {\n  EditOutlined as EditIcon,\n  DeleteOutlined as DeleteIcon,\n  UnorderedListOutlined as ObjectIcon,\n  PlusOutlined as PlusIcon,\n  CopyOutlined as ArrayIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"./Schema\";\n\nimport { FieldifySchemaBuilderModal } from './BuilderModal';\n\nimport String from \"../Types/String\";\n\nexport class FieldifySchemaBuilder extends RecycledComponent {\n\n  cycle(props, first) {\n    const state = {\n      modal: false,\n      modalUser: null,\n      schemaDataSource: []\n    };\n\n    this.onChange = ()=>{}\n    if(props.onChange) this.onChange = props.onChange\n\n    // compile the schema\n    state.schema = new FieldifySchema(\"form\")\n    state.schema.compile(props.schema)\n\n    state.schemaDataSource = this.updateDataSource(state.schema)\n\n    this.columns = [\n      {\n        title: 'Key',\n        dataIndex: 'name',\n        key: 'key',\n      },\n      {\n        title: 'Description',\n        dataIndex: 'doc',\n        key: 'doc'\n      },\n      {\n        title: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n          <span className=\"ant-radio-button-wrapper\" onClick={() => this.handlingAdd()}>\n            <span>Add <PlusIcon /></span>\n          </span>\n        </div>,\n        dataIndex: 'actions',\n        key: 'actions',\n        align: \"right\"\n      },\n    ];\n\n    return(state)\n  }\n\n  fireOnChange() {\n    const ex = this.state.schema.export()\n    // this.state.schema.compile(ex)\n\n    // fire on change for exporting the new schema\n    this.onChange(ex)\n  }\n\n  itemChanged(arg) {\n\n    if (arg.edition === true) {\n      const lineup = this.state.schema.getLineup(arg.oldPath);\n\n      // delete org\n      this.state.schema.removeLineup(arg.oldPath)\n\n      // put new\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field updated\",\n        description: `Field at ${arg.oldPath} has been successfully updated`\n      })\n    }\n\n    // manage addition\n    else {\n      // just put the new one\n      this.state.schema.setLineup(arg.newPath, arg.value)\n\n      notification.success({\n        message: \"Field added\",\n        description: `Field at ${arg.newPath} has been successfully added`\n      })\n    }\n\n    this.fireOnChange();\n\n    this.setState({\n      modal: false,\n      modalContent: null,\n      modalUser: null,\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n  }\n\n  itemRemove(item) {\n    this.state.schema.removeLineup(item.$_wire);\n\n    this.fireOnChange();\n\n    this.setState({\n      schemaDataSource: this.updateDataSource(this.state.schema)\n    });\n\n    notification.success({\n      message: \"Field removed\",\n      description: `Field at ${item.$_wire} has been successfully removed`\n    })\n  }\n\n  handlingAdd(path) {\n    path = path || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: null, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  handlingEdit(item) {\n    const path = item.$_wire || \".\";\n\n    const lineup = this.state.schema.getLineup(path) || this.state.schema.handler.schema;\n\n    const state = {\n      modal: true, \n      modalContent: item, \n      modalUser: lineup\n    }\n\n    this.setState(state);\n  }\n\n  updateDataSource(root) {\n    const self = this;\n    function fieldify2antDataTable(schema, wire) {\n      if (!wire)\n        wire = \"\";\n      const current = [];\n      utils.orderedRead(schema, (index, item) => {\n        var path = wire + \".\" + item.$_key;\n        item.$_path = path;\n\n        // Is array\n        if (Array.isArray(item)) {\n          path = wire + \".\" + item[0].$_key;\n          item[0].$_path = path;\n          item[0].$_array = true;\n\n          var composite = <Tooltip title=\"... of objects\">\n            <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n          </Tooltip>;\n          // for direct type assignation\n          if (\"$type\" in item[0]) {\n            const TypeInfo = item[0].$type.Info;\n            composite = <TypeInfo />;\n          }\n          else {\n            item[0].$_nested = true;\n          }\n\n          current.push({\n            ptr: item[0],\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an array ...\">\n                <Tag color=\"#eb2f96\"><ArrayIcon /></Tag>\n              </Tooltip>\n              {composite}\n              <strong>{item[0].$_key}</strong>\n            </div>,\n            doc: item[0].$doc,\n            children: !(\"$type\" in item[0]) ? fieldify2antDataTable(item[0], path) : null,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete the Array <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item[0])} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item[0])}>\n                <span><EditIcon /></span>\n              </span>\n\n              {!(\"$type\" in item[0]) ?\n                <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                  <span><PlusIcon /></span>\n                </span>\n                : null}\n            </div>\n          });\n        }\n        // is object\n        else if (typeof item === \"object\" && !item.$type) {\n          item.$_nested = true;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <Tooltip title=\"This field is an object\">\n                <Tag color=\"#722ed1\"><ObjectIcon /></Tag>\n              </Tooltip>\n              <strong>{item.$_key}</strong>\n            </div>,\n            doc: item.$doc,\n            children: fieldify2antDataTable(item, path),\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete Object <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)} okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingAdd(path)}>\n                <span><PlusIcon /></span>\n              </span>\n            </div>\n          });\n        }\n        else {\n          const TypeInfo = item.$type.Info;\n          current.push({\n            ptr: item,\n            key: path,\n            name: <div>\n              <TypeInfo /> {item.$_key}\n            </div>,\n            doc: item.$doc,\n            actions: <div className=\"ant-radio-group ant-radio-group-outline ant-radio-group-small\">\n              <Popconfirm title={<span>Are you sure to delete <strong>{path}</strong></span>} onConfirm={() => self.itemRemove(item)}\n                // onCancel={cancel}\n                okText=\"Yes\" cancelText=\"No\">\n                <span className=\"ant-radio-button-wrapper\">\n                  <span><DeleteIcon /></span>\n                </span>\n              </Popconfirm>\n\n              <span className=\"ant-radio-button-wrapper\" onClick={() => self.handlingEdit(item)}>\n                <span><EditIcon /></span>\n              </span>\n            </div>\n          });\n        }\n      });\n      return (current);\n    }\n\n    var data = null;\n    if (root) {\n      data = fieldify2antDataTable(root.handler.schema);\n      return (data)\n    }\n\n    return ([])\n  }\n\n  render() {\n    const sds = this.state.schemaDataSource;\n\n    return (<div>\n      <FieldifySchemaBuilderModal\n        user={this.state.modalUser}\n        visible={this.state.modal}\n        value={this.state.modalContent}\n        onCancel={() => this.setState({ modal: false })}\n        onOk={this.itemChanged.bind(this)}\n      />\n\n      <Table columns={this.columns} dataSource={sds} size=\"small\" pagination={{\n        total: sds.length,\n        pageSize: sds.length,\n        hideOnSinglePage: true\n      }} expandable={{ defaultExpandAllRows: true }} />\n    </div>);\n  }\n}","import { utils, input as FieldifyInput } from \"fieldify\";\nimport React from 'react';\nimport RecycledComponent from 'react-recycling';\n\nimport { Form, Table, Button, Input, Card } from \"antd\";\nimport {\n  PlusOutlined as PlusIcon,\n  DeleteOutlined as DeleteIcon\n} from '@ant-design/icons';\n\nimport { FieldifySchema } from \"../Schema/Schema\";\nimport { TypeDataset } from \"../lib/TypeDataset\";\n\nexport class FieldifySchemaRender extends RecycledComponent {\n  cycle(props) {\n    const state = {\n      layout: props.layout,\n      schema: props.schema,\n      input: props.input,\n    }\n\n    return(state)\n  }\n\n  render() {\n    return (<TypeDataset\n      schema={this.state.schema}\n      input={this.state.input}\n      actions={false}\n      layout={this.state.layout}\n      generator=\"Render\"\n    />);\n  }\n}\n","import { input } from \"fieldify\"\n\nimport React from 'react'\nimport styles from './styles.module.css'\n\nimport * as schema from './Schema'\nimport types from './Types'\n\n// just map the input class from fieldify\nexport class Input extends input {}\n\n// export the schema\nexport const Schema = schema;\n\n// export types\nexport const Types = types;\n\nimport \"antd/dist/antd.css\";\n\n"],"names":["FieldifyTypeForm","Component","constructor","props","state","cycle","componentDidUpdate","schema","setState","value","verify","feedback","status","options","isInjected","onChange","onError","help","$help","$options","handler","$_type","timedChange","cb","speed","_changeTimer","_changeTimerQueue","_changeTimerCb","setTimeout","changeValue","_lastValue","end","ret","error","message","render","children","React","Form","$doc","$required","marginBottom","sm","FieldifyTypeRender","RecycledComponent","injected","subRender","width","SignderivaTypeInfo","match","path","prevProps","prevState","SignderivaTypeBuilder","default","pNew","pOld","changed","key","o","n","setup","prev","a","p","configure","changeIt","change","Object","assign","StringForm","TypeForm","Input","placeholder","target","StringRender","TypeRender","StringInfo","TypeInfo","Tag","color","Icon","StringBuilder","TypeBuilder","minSize","maxSize","Space","InputNumber","code","types","String","description","class","Info","Builder","Render","TString","NameForm","result","from","setField","Row","Col","first","last","NameInfo","NameRender","getDerivedStateFromProps","final","trim","NameBuilder","Name","noFormItem","EmailForm","EmailInfo","MailOutlined","EmailRender","EmailBuilder","subAddressing","Checkbox","checked","Email","NumberForm","NumberInfo","NumberRender","NumberBuilder","Number","CheckboxForm","CheckboxInfo","CheckboxRender","CheckboxBuilder","SelectForm","items","updateItems","push","Select","SelectInfo","SelectRender","ptr","SelectBuilder","ObjectClass","fieldifyType","ArrayClass","configuration","min","$type","max","FieldNameForm","input","user","msg","FieldNameInfo","FieldNameBuilder","FieldName","KVForm","modal","modalCurrent","dataTree","dataSource","computeDataSource","tree","ds","actions","removeKey","DeleteIcon","openModal","EditIcon","handleModalChange","data","modalError","modalInitial","editedButton","mc","type","modalErrorMessage","onCancel","columns","title","dataIndex","PlusIcon","align","layout","labelCol","span","wrapperCol","Modal","bind","Alert","Table","total","length","pageSize","hideOnSinglePage","KVInfo","KVRender","KVBuilder","KV","HashForm","HashRender","HashInfo","HashBuilder","Hash","Array","FieldifySchema","name","resolver","Types","compile","TypeDataset","formRef","createRef","rawSchema","rawInput","FieldifyInput","setValue","inputValue","getValue","generator","references","reactive","update","root","clickAddArray","line","set","_value","clickRemoveArrayItem","remove","up","follower","schematized","utils","orderedRead","index","item","source","isArray","schematizedSrc","$_key","sourceSchematized","inputPtr","lineKey","$_array","inputPtr2","$array","$_nested","child","toPush","form","Button","ref","$_wire","Card","$_access","handlerSchematized","FieldifySchemaForm","allTypes","allTypesNoArray","baseSchema","$position","doc","position","$default","acceptedTypes","FieldifySchemaBuilderModal","currentSchema","visible","edition","original","initialPath","val","required","read","$read","write","$write","content","driveSchema","force","Type","currentType","TypeObject","formChanged","handleOK","nvalue","split","pop","npath","join","$key","$content","no","getNO","nestedObject","onOk","oldPath","newPath","FieldifySchemaBuilder","modalUser","schemaDataSource","updateDataSource","handlingAdd","fireOnChange","ex","export","itemChanged","arg","lineup","getLineup","removeLineup","setLineup","notification","success","modalContent","itemRemove","handlingEdit","self","fieldify2antDataTable","wire","current","$_path","composite","Tooltip","ObjectIcon","ArrayIcon","Popconfirm","sds","defaultExpandAllRows","FieldifySchemaRender","Schema"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;EAOe,MAAMA,gBAAN,SAA+BC,eAA/B,CAAyC;EACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EACA,SAAKC,KAAL,GAAa,KAAKC,KAAL,CAAWF,KAAX,CAAb;EACD;;EAGDG,EAAAA,kBAAkB,CAACH,KAAD,EAAQC,KAAR,EAAe;EAC/B,QAAI,KAAKD,KAAL,CAAWI,MAAX,KAAsBJ,KAAK,CAACI,MAAhC,EAAwC;EACtC,UAAMF,KAAK,GAAG,KAAKA,KAAL,CAAW,KAAKF,KAAhB,CAAd;EACA,WAAKK,QAAL,CAAcH,KAAd;EACD;EACF;;EAEDA,EAAAA,KAAK,CAACF,KAAD,EAAQ;EACX,SAAKI,MAAL,GAAcJ,KAAK,CAACI,MAApB;EAEA,QAAMH,KAAK,GAAG;EACZK,MAAAA,KAAK,EAAEN,KAAK,CAACM,KADD;EAEZC,MAAAA,MAAM,EAAEP,KAAK,CAACO,MAFF;EAGZC,MAAAA,QAAQ,EAAE,KAHE;EAIZC,MAAAA,MAAM,EAAE,IAJI;EAKZC,MAAAA,OAAO,EAAE;EALG,KAAd;EAQA,SAAKC,UAAL,GAAkBX,KAAK,CAACW,UAAxB;EAEA,SAAKC,QAAL,GAAgBZ,KAAK,CAACY,QAAN,GAAiBZ,KAAK,CAACY,QAAvB,GAAkC,MAAM,EAAxD;EACA,SAAKC,OAAL,GAAeb,KAAK,CAACa,OAAN,GAAgBb,KAAK,CAACa,OAAtB,GAAgC,MAAM,EAArD;;EAEA,QAAI,CAAC,KAAKT,MAAV,EAAkB;EAChB,WAAKA,MAAL,GAAc,EAAd;EACA,aAAQH,KAAR;EACD;;EAEDA,IAAAA,KAAK,CAACa,IAAN,GAAa,KAAKV,MAAL,CAAYW,KAAzB;EACAd,IAAAA,KAAK,CAACS,OAAN,GAAgB,KAAKN,MAAL,CAAYY,QAAZ,IAAwB,EAAxC;EACA,SAAKC,OAAL,GAAe,KAAKb,MAAL,CAAYc,MAA3B;EASA,WAAQjB,KAAR;EACD;;EAEDkB,EAAAA,WAAW,CAACC,EAAD,EAAKC,KAAL,EAAY;EACrB,QAAI,KAAKC,YAAT,EAAuB;EACrB,WAAKC,iBAAL;EACA,WAAKC,cAAL,GAAsBJ,EAAtB;EACA;EACD;;EAEDA,IAAAA,EAAE,GAAGA,EAAE,IAAI,KAAKI,cAAhB;EACA,QAAI,CAACJ,EAAL,EAAS;EAET,WAAO,KAAKI,cAAZ;EACA,SAAKD,iBAAL,GAAyB,CAAzB;EACA,SAAKD,YAAL,GAAoBG,UAAU,CAAC,MAAM;EACnCL,MAAAA,EAAE,CAAC,MAAM;EACP,eAAO,KAAKE,YAAZ;;EAGA,YAAI,KAAKC,iBAAL,GAAyB,CAA7B,EAAgC;EAC9B,eAAKJ,WAAL,CAAiBC,EAAjB,EAAqBC,KAArB;EACD;EACF,OAPC,CAAF;EAQD,KAT6B,EAS3BA,KAT2B,CAA9B;EAUD;;EAEDK,EAAAA,WAAW,CAACpB,KAAD,EAAQe,KAAR,EAAe;EACxBA,IAAAA,KAAK,GAAGA,KAAK,IAAI,GAAjB;EAEA,SAAKhB,QAAL,CAAc;EACZC,MAAAA,KAAK,EAAEA;EADK,KAAd;EAIA,SAAKqB,UAAL,GAAkBrB,KAAlB;EAEA,SAAKa,WAAL,CAAkBS,GAAD,IAAS;EACxB,WAAKrB,MAAL,CAAY,KAAKoB,UAAjB,EAA8BE,GAAD,IAAS;EACpC,aAAKxB,QAAL,CAAcwB,GAAd;;EACA,YAAIA,GAAG,CAACpB,MAAJ,KAAe,SAAnB,EAA8B;EAC5BmB,UAAAA,GAAG;EACH;EACD;;EAED,aAAKhB,QAAL,CAAc,KAAKR,MAAnB,EAA2B,KAAKuB,UAAhC;EACAC,QAAAA,GAAG;EACJ,OATD;EAUD,KAXD,EAWGP,KAXH;EAYD;;EAEDd,EAAAA,MAAM,CAACD,KAAD,EAAQc,EAAR,EAAY;EAChB,QAAG,CAAC,KAAKH,OAAT,EAAkB;EAChB,aAAQG,EAAE,CAAC;EACTX,QAAAA,MAAM,EAAE,OADC;EAETD,QAAAA,QAAQ,EAAE,IAFD;EAGTM,QAAAA,IAAI,EAAE;EAHG,OAAD,CAAV;EAKD;;EAED,SAAKG,OAAL,CAAaV,MAAb,CAAoBD,KAApB,EAA2B,CAACwB,KAAD,EAAQC,OAAR,KAAoB;EAC7C,UAAID,KAAK,KAAK,KAAd,EAAqB;EACnB,aAAKjB,OAAL,CAAa,KAAb;EACA,eAAQO,EAAE,CAAC;EACTX,UAAAA,MAAM,EAAE,SADC;EAETD,UAAAA,QAAQ,EAAE,IAFD;EAGTM,UAAAA,IAAI,EAAE;EAHG,SAAD,CAAV;EAKD;;EAGD,WAAKD,OAAL,CAAa,IAAb,EAAmBkB,OAAnB;EACA,aAAQX,EAAE,CAAC;EACTX,QAAAA,MAAM,EAAE,OADC;EAETD,QAAAA,QAAQ,EAAE,IAFD;EAGTM,QAAAA,IAAI,EAAEiB;EAHG,OAAD,CAAV;EAKD,KAjBD;EAkBD;;EAGDC,EAAAA,MAAM,CAACC,QAAD,EAAW;EAGf,QAAI,KAAKtB,UAAL,KAAoB,IAAxB,EAA8B,oBAC5BuB,6BAACC,SAAD,CAAM,IAAN;EACE,MAAA,KAAK,EAAE,KAAK/B,MAAL,CAAYgC,IADrB;EAEE,MAAA,QAAQ,EAAE,KAAKhC,MAAL,CAAYiC,SAFxB;EAGE,MAAA,cAAc,EAAE,KAAKpC,KAAL,CAAWQ,MAH7B;EAIE,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWO,QAJ1B;EAKE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWa,IALnB;EAME,MAAA,KAAK,EAAE;EAAEwB,QAAAA,YAAY,EAAE;EAAhB,OANT;EAOE,MAAA,UAAU,EAAE;EAAEC,QAAAA,EAAE,EAAE;EAAN;EAPd,OASGN,QATH,CAD4B;EAc9B,wBACEC,6BAACC,SAAD,CAAM,IAAN;EACE,MAAA,KAAK,EAAE,KAAK/B,MAAL,CAAYgC,IADrB;EAEE,MAAA,QAAQ,EAAE,KAAKhC,MAAL,CAAYiC,SAFxB;EAGE,MAAA,cAAc,EAAE,KAAKpC,KAAL,CAAWQ,MAH7B;EAIE,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWO,QAJ1B;EAKE,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWa,IALnB;EAME,MAAA,KAAK,EAAE;EAAEwB,QAAAA,YAAY,EAAE;EAAhB,OANT;EAOE,MAAA,UAAU,EAAE;EAAEC,QAAAA,EAAE,EAAE;EAAN;EAPd,OASGN,QATH,CADF;EAaD;;EA5JqD;;ECGzC,MAAMO,kBAAN,SAAiCC,iBAAjC,CAAmD;EAEhEvC,EAAAA,KAAK,CAACF,KAAD,EAAQ;EACX,QAAMC,KAAK,GAAG;EACZG,MAAAA,MAAM,EAAEJ,KAAK,CAACI,MADF;EAEZE,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAFD;EAGZoC,MAAAA,QAAQ,EAAE1C,KAAK,CAAC0C;EAHJ,KAAd;EAMA,WAAQzC,KAAR;EACD;;EAED0C,EAAAA,SAAS,CAACV,QAAD,EAAW;EAElB,QAAG,KAAKhC,KAAL,CAAWyC,QAAX,KAAwB,IAA3B,EAAiC;EAC/B,0BACER,6BAACC,SAAD,CAAM,IAAN;EACE,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWG,MAAX,CAAkBgC,IAD3B;EAEE,QAAA,WAAW,EAAE,IAFf;EAGE,QAAA,cAAc,EAAC,SAHjB;EAIE,QAAA,KAAK,EAAE;EAAEE,UAAAA,YAAY,EAAE;EAAhB,SAJT;EAKE,QAAA,UAAU,EAAE;EAAEC,UAAAA,EAAE,EAAE;EAAN;EALd,SAOGN,QAPH,CADF;EAWD;;EACD,wBACEC,6BAACC,SAAD,CAAM,IAAN;EACE,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWG,MAAX,CAAkBgC,IAD3B;EAEE,MAAA,WAAW,EAAE,IAFf;EAGE,MAAA,cAAc,EAAC;EAHjB,OAKGH,QALH,CADF;EASD;;EAEDD,EAAAA,MAAM,GAAG;EACP,WAAQ,KAAKW,SAAL,eACNT;EAAK,MAAA,KAAK,EAAE;EAAEU,QAAAA,KAAK,EAAE;EAAT;EAAZ,OACG,KAAK3C,KAAL,CAAWK,KADd,CADM,CAAR;EAKD;;EA5C+D;;ECRnD,MAAMuC,kBAAN,SAAiC/C,eAAjC,CAA2C;EACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EACA,SAAKA,KAAL,GAAaA,KAAb;EACA,QAAIA,KAAK,CAAC8C,KAAV,EAAiB,KAAKC,IAAL,GAAY/C,KAAK,CAAC8C,KAAN,CAAYC,IAAxB;EACjB,SAAK9C,KAAL,GAAa,EAAb;EACD;;EAGDE,EAAAA,kBAAkB,CAAC6C,SAAD,EAAYC,SAAZ,EAAuB;AACvC,EAGD;;EAbuD;;ECA3C,MAAMC,qBAAN,SAAoCpD,eAApC,CAA8C;EAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EACA,SAAKA,KAAL,GAAaA,KAAb;EACA,SAAKY,QAAL,GAAgBZ,KAAK,CAACY,QAAN,GAAiBZ,KAAK,CAACY,QAAvB,GAAkC,MAAM,EAAxD;EAEA,QAAIZ,KAAK,CAAC8C,KAAV,EAAiB,KAAKC,IAAL,GAAY/C,KAAK,CAAC8C,KAAN,CAAYC,IAAxB;EAEjB,SAAK9C,KAAL,gBAAkBD,KAAK,CAACU,OAAxB;EAEA,SAAKyC,OAAL,GAAe,EAAf;EACD;;EAEDhD,EAAAA,kBAAkB,CAAC6C,SAAD,EAAYC,SAAZ,EAAuB;EACvC,QAAMG,IAAI,GAAG,KAAKpD,KAAL,CAAWU,OAAX,IAAsB,EAAnC;EACA,QAAM2C,IAAI,GAAGL,SAAS,CAACtC,OAAV,IAAqB,EAAlC;EAEA,QAAI4C,OAAO,GAAG,CAAd;;EACA,SAAK,IAAIC,GAAT,IAAgB,KAAKJ,OAArB,EAA8B;EAC5B,UAAMK,CAAC,GAAGH,IAAI,CAACE,GAAD,CAAd;EACA,UAAME,CAAC,GAAGL,IAAI,CAACG,GAAD,CAAd;EACA,UAAIC,CAAC,KAAKC,CAAV,EACEH,OAAO;EACV;;EAGD,QAAIA,OAAO,GAAG,CAAd,EAAiB;EACf,WAAKjD,QAAL,CAAc+C,IAAd;EACA,WAAKxC,QAAL,cAAkBwC,IAAlB;EACD;EAEF;;EAEDM,EAAAA,KAAK,CAACC,IAAD,EAAO;EAEV,QAAM1D,KAAK,gBAAQ0D,IAAR,CAAX;;EAGA,SAAK,IAAIC,CAAT,IAAc3D,KAAd,EAAqB;EACnB,UAAM4D,CAAC,GAAG,KAAKV,OAAL,CAAaS,CAAb,CAAV;EACA,UAAI,CAACC,CAAL,EAAQ,OAAO5D,KAAK,CAAC2D,CAAD,CAAZ;EACT;;EAGD,SAAK,IAAIA,CAAT,IAAc,KAAKT,OAAnB,EAA4B;EAC1B,UAAI,EAAES,CAAC,IAAI3D,KAAP,CAAJ,EACEA,KAAK,CAAC2D,CAAD,CAAL,GAAW,KAAKT,OAAL,CAAaS,CAAb,CAAX;EACH;;EACD,WAAQ3D,KAAR;EACD;;EAED6D,EAAAA,SAAS,GAAG;EACV,SAAK7D,KAAL,GAAa,KAAKyD,KAAL,CAAW,KAAKzD,KAAhB,CAAb;EACA,SAAKW,QAAL,cAAmB,KAAKX,KAAxB;EACD;;EAED8D,EAAAA,QAAQ,CAACR,GAAD,EAAMjD,KAAN,EAAa;EACnB,QAAM0D,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKjE,KAAvB,CAAf;EACA+D,IAAAA,MAAM,CAACT,GAAD,CAAN,GAAcjD,KAAd;EAGA,SAAKD,QAAL,CAAc2D,MAAd;EACA,SAAKpD,QAAL,cAAkBoD,MAAlB;EACD;;EA/D0D;;ECyB7D,MAAMG,UAAN,SAAyBC,gBAAzB,CAAkC;EAChCpC,EAAAA,MAAM,GAAG;EACP,WAAQ,MAAMA,MAAN,eACNE,6BAACmC,UAAD;EACA,MAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWK,KADlB;EAEA,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWS,OAAX,CAAmB4D,WAFhC;EAGA,MAAA,QAAQ,EAAE;EAAA,YAAC;EAAEC,UAAAA;EAAF,SAAD;EAAA,eAAgB,KAAK7C,WAAL,CAAiB6C,MAAM,CAACjE,KAAxB,CAAhB;EAAA,OAHV;EAIA,MAAA,KAAK,EAAE;EAACsC,QAAAA,KAAK,EAAE;EAAR;EAJP,MADM,CAAR;EAQD;;EAV+B;;EAkBlC,MAAM4B,YAAN,SAA2BC,kBAA3B,CAAsC;;EAQtC,MAAMC,UAAN,SAAyBC,kBAAzB,CAAkC;EAChC3C,EAAAA,MAAM,GAAG;EACP,wBACEE,wDACEA,6BAAC0C,QAAD;EAAK,MAAA,KAAK,EAAC,SAAX;EAAqB,MAAA,KAAK,EAAE;EAAEC,QAAAA,KAAK,EAAE;EAAT;EAA5B,oBAAkD3C,6BAAC4C,yBAAD,OAAlD,CADF,CADF;EAKD;;EAP+B;;EAelC,MAAMC,aAAN,SAA4BC,qBAA5B,CAAwC;EACtCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAKmD,OAAL,GAAe;EACb8B,MAAAA,OAAO,EAAE,CADI;EAEbC,MAAAA,OAAO,EAAE;EAFI,KAAf;EAKA,SAAKpB,SAAL;EACD;;EAED9B,EAAAA,MAAM,GAAG;EACP,wBACEE,uDACEA,6BAACC,SAAD,CAAM,IAAN;EAAW,MAAA,KAAK,EAAC;EAAjB,oBACED,6BAACiD,UAAD,qBACEjD,6BAACkD,gBAAD;EAAa,MAAA,GAAG,EAAE,CAAlB;EAAqB,MAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWgF,OAAvC;EAAgD,MAAA,QAAQ,EAAG3E,KAAD,IAAW,KAAKyD,QAAL,CAAc,SAAd,EAAyBzD,KAAzB;EAArE,MADF,eAGE4B,6BAACkD,gBAAD;EAAa,MAAA,GAAG,EAAE,CAAlB;EAAqB,MAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWiF,OAAvC;EAAgD,MAAA,QAAQ,EAAG5E,KAAD,IAAW,KAAKyD,QAAL,CAAc,SAAd,EAAyBzD,KAAzB;EAArE,MAHF,CADF,CADF,CADF;EAYD;;EAzBqC;;AA2CxC,eAAe;EACb+E,EAAAA,IAAI,EAAEC,cAAK,CAACC,MAAN,CAAaF,IADN;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACC,MAAN,CAAaC,WAFb;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAACC,MAAN,CAAaE,KAHP;EAKbC,EAAAA,IAAI,EAAEhB,UALO;EAMbiB,EAAAA,OAAO,EAAEZ,aANI;EAOb5C,EAAAA,IAAI,EAAEgC,UAPO;EAQbyB,EAAAA,MAAM,EAAEpB;EARK,CAAf;;ECvFA,IAAML,YAAU,GAAG0B,MAAO,CAAC1D,IAA3B;;EAOA,MAAM2D,QAAN,SAAuB1B,gBAAvB,CAAgC;EAC9BrE,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EACD;;EAEDE,EAAAA,KAAK,CAACF,KAAD,EAAQ;EACX,QAAM6B,GAAG,GAAG,MAAM3B,KAAN,CAAYF,KAAZ,CAAZ;EACA,QAAI,CAAC6B,GAAG,CAACvB,KAAT,EAAgBuB,GAAG,CAACvB,KAAJ,GAAY,EAAZ;EAEhB,SAAKyF,MAAL,gBAAkBlE,GAAG,CAACvB,KAAtB;EACA,WAAQuB,GAAR;EACD;;EAEDC,EAAAA,KAAK,CAACkE,IAAD,EAAOlE,KAAP,EAAcC,OAAd,EAAuB;;EAM5BkE,EAAAA,QAAQ,CAAC1C,GAAD,EAAMnD,MAAN,EAAcE,KAAd,EAAqB;EAC3B,SAAKyF,MAAL,CAAYxC,GAAZ,IAAmBjD,KAAnB;EACA,SAAKM,QAAL,CAAc,KAAKR,MAAnB,EAA2B,KAAK2F,MAAhC;EACD;;EAED/D,EAAAA,MAAM,GAAG;EAEP,WAAQ,MAAMA,MAAN,eACNE,6BAACgE,QAAD;EAAK,MAAA,MAAM,EAAE;EAAb,oBACEhE,6BAACiE,QAAD;EAAK,MAAA,SAAS,EAAC,YAAf;EAA4B,MAAA,IAAI,EAAE;EAAlC,oBACEjE,6BAACiC,YAAD;EACE,MAAA,MAAM,EAAE,KAAK/D,MAAL,CAAYgG,KADtB;EAEE,MAAA,MAAM,EAAE,KAAKnG,KAAL,CAAWM,MAFrB;EAGE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWK,KAAX,CAAiB8F,KAH1B;EAIE,MAAA,QAAQ,EAAE,CAAChG,MAAD,EAASE,KAAT,KAAmB,KAAK2F,QAAL,CAAc,OAAd,EAAuB7F,MAAvB,EAA+BE,KAA/B,CAJ/B;EAME,MAAA,UAAU,EAAE;EANd,MADF,CADF,eAWE4B,6BAACiE,QAAD;EAAK,MAAA,SAAS,EAAC,YAAf;EAA4B,MAAA,IAAI,EAAE;EAAlC,oBACEjE,6BAACiC,YAAD;EACE,MAAA,MAAM,EAAE,KAAK/D,MAAL,CAAYiG,IADtB;EAEE,MAAA,MAAM,EAAE,KAAKpG,KAAL,CAAWM,MAFrB;EAGE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWK,KAAX,CAAiB+F,IAH1B;EAIE,MAAA,QAAQ,EAAE,CAACjG,MAAD,EAASE,KAAT,KAAmB,KAAK2F,QAAL,CAAc,MAAd,EAAsB7F,MAAtB,EAA8BE,KAA9B,CAJ/B;EAME,MAAA,UAAU,EAAE;EANd,MADF,CAXF,CADM,CAAR;EAwBD;;EAlD6B;;EA0DhC,MAAMgG,QAAN,SAAuB3B,kBAAvB,CAAgC;EAC9B3C,EAAAA,MAAM,GAAG;EACP,wBACEE,wDACEA,6BAAC0C,QAAD;EAAK,MAAA,KAAK,EAAC,SAAX;EAAqB,MAAA,KAAK,EAAE;EAAEC,QAAAA,KAAK,EAAE;EAAT;EAA5B,oBAAkD3C,6BAAC4C,wBAAD,OAAlD,CADF,CADF;EAKD;;EAP6B;;EAgBhC,MAAMyB,UAAN,SAAyB9B,kBAAzB,CAAoC;EAClC,SAAO+B,wBAAP,CAAgCxG,KAAhC,EAAuCC,KAAvC,EAA8C;EAC5C,QAAGA,KAAK,CAACK,KAAN,IAAe,OAAOL,KAAK,CAACK,KAAb,KAAuB,QAAzC,EAAmD;EACjD,UAAImG,KAAK,GAAG,EAAZ;EAEA,UAAGxG,KAAK,CAACK,KAAN,CAAY8F,KAAf,EAAsBK,KAAK,IAAIxG,KAAK,CAACK,KAAN,CAAY8F,KAArB;EACtB,UAAGnG,KAAK,CAACK,KAAN,CAAY+F,IAAf,EAAqBI,KAAK,IAAI,MAAIxG,KAAK,CAACK,KAAN,CAAY+F,IAAzB;EAErBpG,MAAAA,KAAK,CAACK,KAAN,GAAcmG,KAAK,CAACC,IAAN,EAAd;EACD;;EACD,WAAOzG,KAAP;EACD;;EAXiC;;EAoBpC,MAAM0G,WAAN,SAA0B3B,qBAA1B,CAAsC;EACpCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAKmD,OAAL,GAAe;EACb8B,MAAAA,OAAO,EAAE,CADI;EAEbC,MAAAA,OAAO,EAAE;EAFI,KAAf;EAKA,SAAKpB,SAAL;EACD;;EAED9B,EAAAA,MAAM,GAAG;EACP,wBACEE,uDACEA,6BAACC,SAAD,CAAM,IAAN;EAAW,MAAA,KAAK,EAAC;EAAjB,oBACED,6BAACiD,UAAD,qBACEjD,6BAACkD,gBAAD;EAAa,MAAA,GAAG,EAAE,CAAlB;EAAqB,MAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWgF,OAAvC;EAAgD,MAAA,QAAQ,EAAG3E,KAAD,IAAW,KAAKyD,QAAL,CAAc,SAAd,EAAyBzD,KAAzB;EAArE,MADF,eAGE4B,6BAACkD,gBAAD;EAAa,MAAA,GAAG,EAAE,CAAlB;EAAqB,MAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWiF,OAAvC;EAAgD,MAAA,QAAQ,EAAG5E,KAAD,IAAW,KAAKyD,QAAL,CAAc,SAAd,EAAyBzD,KAAzB;EAArE,MAHF,CADF,CADF,CADF;EAYD;;EAzBmC;;AA4BtC,aAAe;EACb+E,EAAAA,IAAI,EAAEC,cAAK,CAACsB,IAAN,CAAWvB,IADJ;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACsB,IAAN,CAAWpB,WAFX;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAACsB,IAAN,CAAWnB,KAHL;EAKbC,EAAAA,IAAI,EAAEY,QALO;EAMbX,EAAAA,OAAO,EAAEgB,WANI;EAObxE,EAAAA,IAAI,EAAE2D,QAPO;EAQbF,EAAAA,MAAM,EAAEW,UARK;EAUbM,EAAAA,UAAU,EAAE;EAVC,CAAf;;EC/HA,MAAMC,SAAN,SAAwB1C,gBAAxB,CAAiC;EAC/BpC,EAAAA,MAAM,GAAG;EACP,WAAQ,MAAMA,MAAN,eACNE,6BAACmC,UAAD;EAAO,MAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWK,KAAzB;EAAgC,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWS,OAAX,CAAmB4D,WAAhE;EAA6E,MAAA,QAAQ,EAAE;EAAA,YAAC;EAAEC,UAAAA;EAAF,SAAD;EAAA,eAAgB,KAAK7C,WAAL,CAAiB6C,MAAM,CAACjE,KAAxB,CAAhB;EAAA;EAAvF,MADM,CAAR;EAGD;;EAL8B;;EAajC,MAAMyG,SAAN,SAAwBpC,kBAAxB,CAAiC;EAC/B3C,EAAAA,MAAM,GAAG;EACP,wBACEE,wDACEA,6BAAC0C,QAAD;EAAK,MAAA,KAAK,EAAC;EAAX,oBAAqB1C,6BAAC8E,kBAAD,OAArB,CADF,CADF;EAKD;;EAP8B;;EAejC,MAAMC,WAAN,SAA0BxC,kBAA1B,CAAqC;;EASrC,MAAMyC,YAAN,SAA2BlC,qBAA3B,CAAuC;EACrCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAKmD,OAAL,GAAe;EACbgE,MAAAA,aAAa,EAAE;EADF,KAAf;EAIA,SAAKrD,SAAL;EACD;;EAED9B,EAAAA,MAAM,GAAG;EACP,wBACEE,uDACEA,6BAACC,SAAD,CAAM,IAAN;EAAW,MAAA,KAAK,EAAC;EAAjB,oBACED,6BAACkF,aAAD;EAAU,MAAA,OAAO,EAAE,KAAKnH,KAAL,CAAWkH,aAA9B;EAA6C,MAAA,QAAQ,EAAE;EAAA,YAAC;EAAE5C,UAAAA;EAAF,SAAD;EAAA,eAAgB,KAAKR,QAAL,CAAc,eAAd,EAA+BQ,MAAM,CAAC8C,OAAtC,CAAhB;EAAA;EAAvD,iBADF,CADF,CADF;EAOD;;EAnBoC;;AAuBvC,cAAe;EACbhC,EAAAA,IAAI,EAAEC,cAAK,CAACgC,KAAN,CAAYjC,IADL;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACgC,KAAN,CAAY9B,WAFZ;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAACgC,KAAN,CAAY7B,KAHN;EAKbC,EAAAA,IAAI,EAAEqB,SALO;EAMbpB,EAAAA,OAAO,EAAEuB,YANI;EAOb/E,EAAAA,IAAI,EAAE2E,SAPO;EAQblB,EAAAA,MAAM,EAAEqB;EARK,CAAf;;EC3DA,MAAMM,UAAN,SAAyBnD,gBAAzB,CAAkC;EAChCpC,EAAAA,MAAM,GAAG;EACP,WAAQ,MAAMA,MAAN,eACNE,6BAACkD,gBAAD;EACA,MAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWK,KADlB;EAEA,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWS,OAAX,CAAmB4D,WAFhC;EAGA,MAAA,QAAQ,EAAGhE,KAAD,IAAW,KAAKoB,WAAL,CAAiBpB,KAAjB,CAHrB;EAIA,MAAA,KAAK,EAAE;EAACsC,QAAAA,KAAK,EAAE;EAAR;EAJP,MADM,CAAR;EAQD;;EAV+B;;EAkBlC,MAAM4E,UAAN,SAAyB7C,kBAAzB,CAAkC;EAChC3C,EAAAA,MAAM,GAAG;EACP,wBACEE,wDACEA,6BAAC0C,QAAD;EAAK,MAAA,KAAK,EAAC;EAAX,oBAAqB1C,6BAAC4C,oBAAD,OAArB,CADF,CADF;EAKD;;EAP+B;;EAelC,MAAM2C,YAAN,SAA2BhD,kBAA3B,CAAsC;;EAQtC,MAAMiD,aAAN,SAA4B1C,qBAA5B,CAAwC;EACtCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAKmD,OAAL,GAAe;EACb8B,MAAAA,OAAO,EAAE,CADI;EAEbC,MAAAA,OAAO,EAAE;EAFI,KAAf;EAKA,SAAKpB,SAAL;EACD;;EAED9B,EAAAA,MAAM,GAAG;EACP,wBACEE,yCADF;EAID;;EAjBqC;;AAoBxC,eAAe;EACbmD,EAAAA,IAAI,EAAEC,cAAK,CAACqC,MAAN,CAAatC,IADN;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACqC,MAAN,CAAanC,WAFb;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAACqC,MAAN,CAAalC,KAHP;EAKbC,EAAAA,IAAI,EAAE8B,UALO;EAMb7B,EAAAA,OAAO,EAAE+B,aANI;EAObvF,EAAAA,IAAI,EAAEoF,UAPO;EAQb3B,EAAAA,MAAM,EAAE6B;EARK,CAAf;;EC5DA,MAAMG,YAAN,SAA2BxD,gBAA3B,CAAoC;EAClCpC,EAAAA,MAAM,GAAG;EACP,WAAQ,MAAMA,MAAN,eACNE,6BAACkF,aAAD;EACE,MAAA,OAAO,EAAE,KAAKnH,KAAL,CAAWK,KADtB;EAEE,MAAA,QAAQ,EAAE;EAAA,YAAC;EAAEiE,UAAAA;EAAF,SAAD;EAAA,eAAgB,KAAK7C,WAAL,CAAiB6C,MAAM,CAAC8C,OAAxB,CAAhB;EAAA,OAFZ;EAGE,MAAA,KAAK,EAAE;EAAEzE,QAAAA,KAAK,EAAE;EAAT;EAHT,OAKG,KAAK3C,KAAL,CAAWS,OAAX,CAAmB4D,WALtB,CADM,CAAR;EASD;;EAXiC;;EAmBpC,MAAMuD,YAAN,SAA2BlD,kBAA3B,CAAoC;EAClC3C,EAAAA,MAAM,GAAG;EACP,wBACEE,wDACEA,6BAAC0C,QAAD;EAAK,MAAA,KAAK,EAAC,SAAX;EAAqB,MAAA,KAAK,EAAE;EAAEC,QAAAA,KAAK,EAAE;EAAT;EAA5B,oBAAgD3C,6BAAC4C,yBAAD,OAAhD,CADF,CADF;EAKD;;EAPiC;;EAepC,MAAMgD,cAAN,SAA6BrD,kBAA7B,CAAwC;;EAQxC,MAAMsD,eAAN,SAA8B/C,qBAA9B,CAA0C;EACxCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EACA,SAAK8D,SAAL;EACD;;EAJuC;;AAQ1C,iBAAe;EACbuB,EAAAA,IAAI,EAAEC,cAAK,CAAC8B,QAAN,CAAe/B,IADR;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAAC8B,QAAN,CAAe5B,WAFf;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAAC8B,QAAN,CAAe3B,KAHT;EAKbC,EAAAA,IAAI,EAAEmC,YALO;EAMblC,EAAAA,OAAO,EAAEoC,eANI;EAOb5F,EAAAA,IAAI,EAAEyF,YAPO;EAQbhC,EAAAA,MAAM,EAAEkC;EARK,CAAf;;EClDA,MAAME,UAAN,SAAyB5D,gBAAzB,CAAkC;EAChCrE,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAKC,KAAL,GAAa;EACXK,MAAAA,KAAK,EAAEN,KAAK,CAACM,KADF;EAEXI,MAAAA,OAAO,EAAE;EAFE,KAAb;EAKA,QAAIV,KAAK,CAACI,MAAN,CAAaY,QAAjB,EAA2B,KAAKf,KAAL,CAAWS,OAAX,GAAqBV,KAAK,CAACI,MAAN,CAAaY,QAAlC;;EAE3B,QAAG,CAAC,KAAKf,KAAL,CAAWK,KAAZ,IAAqB,KAAKL,KAAL,CAAWS,OAAX,CAAmByC,OAA3C,EAAoD;EAClD,WAAKlD,KAAL,CAAWK,KAAX,GAAmB,KAAKL,KAAL,CAAWS,OAAX,CAAmByC,OAAtC;EAEA,WAAKvC,QAAL,CAAc,KAAKR,MAAnB,EAA2B,KAAKH,KAAL,CAAWK,KAAtC;EACD;;EAED,SAAKL,KAAL,CAAWgI,KAAX,GAAmB,KAAKC,WAAL,EAAnB;EACD;;EAEDA,EAAAA,WAAW,GAAG;EACZ,QAAI,CAAC,KAAKjI,KAAL,CAAWS,OAAX,CAAmBuH,KAAxB,EAA+B,OAAQ,EAAR;EAE/B,QAAMvH,OAAO,GAAG,EAAhB;;EACA,SAAK,IAAI6C,GAAT,IAAgB,KAAKtD,KAAL,CAAWS,OAAX,CAAmBuH,KAAnC,EAA0C;EACxC,UAAM3H,KAAK,GAAG,KAAKL,KAAL,CAAWS,OAAX,CAAmBuH,KAAnB,CAAyB1E,GAAzB,CAAd;EACA7C,MAAAA,OAAO,CAACyH,IAAR,eAAajG,6BAACkG,WAAD,CAAQ,MAAR;EAAe,QAAA,KAAK,EAAE7E,GAAtB;EAA2B,QAAA,GAAG,EAAEA;EAAhC,SAAsCjD,KAAtC,CAAb;EACD;;EAED,WAAQI,OAAR;EACD;;EAEDsB,EAAAA,MAAM,GAAG;EACP,WAAQ,MAAMA,MAAN,eACNE,6BAACkG,WAAD;EAAQ,MAAA,KAAK,EAAE,KAAKnI,KAAL,CAAWK,KAA1B;EAAiC,MAAA,QAAQ,EAAGA,KAAD,IAAY,KAAKoB,WAAL,CAAiBpB,KAAjB;EAAvD,OACG,KAAKL,KAAL,CAAWgI,KADd,CADM,CAAR;EAKD;;EAtC+B;;EA8ClC,MAAMI,UAAN,SAAyB1D,kBAAzB,CAAkC;EAChC3C,EAAAA,MAAM,GAAG;EACP,wBACEE,wDACEA,6BAAC0C,QAAD;EAAK,MAAA,KAAK,EAAC,SAAX;EAAqB,MAAA,KAAK,EAAE;EAAEC,QAAAA,KAAK,EAAE;EAAT;EAA5B,oBAAgD3C,6BAAC4C,oBAAD,OAAhD,CADF,CADF;EAKD;;EAP+B;;EAelC,MAAMwD,YAAN,SAA2B7D,kBAA3B,CAAsC;EACpC,SAAO+B,wBAAP,CAAgCxG,KAAhC,EAAuCC,KAAvC,EAA8C;EAC5C,QAAG,OAAOA,KAAK,CAACK,KAAb,KAAuB,QAA1B,EAAoC;EAElC,UAAGN,KAAK,CAACI,MAAN,CAAaY,QAAb,IAAyBhB,KAAK,CAACI,MAAN,CAAaY,QAAb,CAAsBiH,KAAlD,EAAyD;EACvD,YAAMM,GAAG,GAAGvI,KAAK,CAACI,MAAN,CAAaY,QAAb,CAAsBiH,KAAlC;EACA,YAAGM,GAAG,CAACtI,KAAK,CAACK,KAAP,CAAN,EAAqBL,KAAK,CAACK,KAAN,GAAciI,GAAG,CAACtI,KAAK,CAACK,KAAP,CAAjB;EACtB;EACF;;EACD,WAAOL,KAAP;EACD;;EAVmC;;EAoBtC,MAAMuI,aAAN,SAA4BxD,qBAA5B,CAAwC;EACtCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAKmD,OAAL,GAAe;EACb8B,MAAAA,OAAO,EAAE,CADI;EAEbC,MAAAA,OAAO,EAAE;EAFI,KAAf;EAKA,SAAKpB,SAAL;EACD;;EAED9B,EAAAA,MAAM,GAAG;EACP,wBACEE,uDACEA,6BAACC,SAAD,CAAM,IAAN;EAAW,MAAA,KAAK,EAAC;EAAjB,oBACED,6BAACiD,UAAD,qBACEjD,6BAACkD,gBAAD;EAAa,MAAA,GAAG,EAAE,CAAlB;EAAqB,MAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWgF,OAAvC;EAAgD,MAAA,QAAQ,EAAG3E,KAAD,IAAW,KAAKyD,QAAL,CAAc,SAAd,EAAyBzD,KAAzB;EAArE,MADF,eAGE4B,6BAACkD,gBAAD;EAAa,MAAA,GAAG,EAAE,CAAlB;EAAqB,MAAA,KAAK,EAAE,KAAKnF,KAAL,CAAWiF,OAAvC;EAAgD,MAAA,QAAQ,EAAG5E,KAAD,IAAW,KAAKyD,QAAL,CAAc,SAAd,EAAyBzD,KAAzB;EAArE,MAHF,CADF,CADF,CADF;EAYD;;EAzBqC;;AA4BxC,eAAe;EACb+E,EAAAA,IAAI,EAAEC,cAAK,CAAC8C,MAAN,CAAa/C,IADN;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAAC8C,MAAN,CAAa5C,WAFb;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAAC8C,MAAN,CAAa3C,KAHP;EAKbC,EAAAA,IAAI,EAAE2C,UALO;EAMb1C,EAAAA,OAAO,EAAE6C,aANI;EAObrG,EAAAA,IAAI,EAAE6F,UAPO;EAQbpC,EAAAA,MAAM,EAAE0C;EARK,CAAf;;ECpIA,MAAMG,WAAN,SAA0BC,qBAA1B,CAAuC;;AAIvC,iBAAe;EACbrD,EAAAA,IAAI,EAAE,QADO;EAEbG,EAAAA,WAAW,EAAE,mBAFA;EAGbC,EAAAA,KAAK,EAAEgD;EAHM,CAAf;;ECLA,MAAME,UAAN,SAAyBD,qBAAzB,CAAsC;EACpCE,EAAAA,aAAa,GAAI;EACf,WAAQ;EACNC,MAAAA,GAAG,EAAE;EACHzG,QAAAA,IAAI,EAAE,kBADH;EAEHC,QAAAA,SAAS,EAAE,KAFR;EAGHyG,QAAAA,KAAK,EAAE;EAHJ,OADC;EAMNC,MAAAA,GAAG,EAAE;EACH3G,QAAAA,IAAI,EAAE,kBADH;EAEHC,QAAAA,SAAS,EAAE,KAFR;EAGHyG,QAAAA,KAAK,EAAE;EAHJ;EANC,KAAR;EAYD;;EAdmC;;AAiBtC,gBAAe;EACbzD,EAAAA,IAAI,EAAE,OADO;EAEbG,EAAAA,WAAW,EAAE,OAFA;EAGbC,EAAAA,KAAK,EAAEkD;EAHM,CAAf;;ECQA,MAAMK,aAAN,SAA4BzD,MAAM,CAACpD,IAAnC,CAAwC;EACtCpC,EAAAA,WAAW,CAACC,KAAD,EAAO;EAChB,UAAMA,KAAN;EACD;;EAEDO,EAAAA,MAAM,CAAC0I,KAAD,EAAQ7H,EAAR,EAAY;EAChB,UAAMb,MAAN,CAAa0I,KAAb,EAAqBpH,GAAD,IAAO;EACzB,UAAGA,GAAG,CAACpB,MAAJ,KAAe,SAAlB,EAA6B;EAC3B,eAAOW,EAAE,CAACS,GAAD,CAAT;EACD;;EAGD,UAAG,KAAK7B,KAAL,CAAWkJ,IAAX,IAAmBD,KAAK,IAAI,KAAKjJ,KAAL,CAAWkJ,IAA1C,EAAgD;EAC9C,YAAMC,GAAG,4BAAT;EAEA,aAAKtI,OAAL,CAAa,IAAb,EAAmBsI,GAAnB;EACA,eAAQ/H,EAAE,CAAC;EACTX,UAAAA,MAAM,EAAE,OADC;EAETD,UAAAA,QAAQ,EAAE,IAFD;EAGTM,UAAAA,IAAI,EAAEqI;EAHG,SAAD,CAAV;EAKD;;EAED/H,MAAAA,EAAE,CAACS,GAAD,CAAF;EACD,KAlBD;EAmBD;;EAzBqC;;EAiCxC,MAAMuH,aAAN,SAA4B7D,MAAM,CAACG,IAAnC,CAAwC;;EAOxC,MAAM2D,gBAAN,SAA+BrE,qBAA/B,CAA2C;EACzCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAKmD,OAAL,GAAe;EACb8B,MAAAA,OAAO,EAAE,CADI;EAEbC,MAAAA,OAAO,EAAE;EAFI,KAAf;EAMD;;EAEDlD,EAAAA,MAAM,GAAG;EACP,wBACEE,uDACEA,6BAACC,SAAD,CAAM,IAAN;EAAW,MAAA,KAAK,EAAC;EAAjB,MADF,CADF;EAYD;;EAzBwC;;AA4B3C,kBAAe;EACbkD,EAAAA,IAAI,EAAEC,cAAK,CAACgE,SAAN,CAAgBjE,IADT;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACgE,SAAN,CAAgB9D,WAFhB;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAACgE,SAAN,CAAgB7D,KAHV;EAKbC,EAAAA,IAAI,EAAE0D,aALO;EAMbzD,EAAAA,OAAO,EAAE0D,gBANI;EAOblH,EAAAA,IAAI,EAAE6G;EAPO,CAAf;;EC/DA,MAAMO,MAAN,SAAqBnF,gBAArB,CAA8B;EAE5BrE,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EACD;;EAEDE,EAAAA,KAAK,CAACF,KAAD,EAAQ;EACX,QAAM6B,GAAG,GAAG,MAAM3B,KAAN,CAAYF,KAAZ,CAAZ;EAEA,QAAI,CAAC6B,GAAG,CAACvB,KAAT,EAAgBuB,GAAG,CAACvB,KAAJ,GAAY,EAAZ;EAEhB,SAAKyF,MAAL,gBAAmBlE,GAAG,CAACvB,KAAvB;EAEAuB,IAAAA,GAAG,CAAC2H,KAAJ,GAAY,KAAZ;EACA3H,IAAAA,GAAG,CAAC4H,YAAJ,GAAmB;EACjBlG,MAAAA,GAAG,EAAE,EADY;EAEjBjD,MAAAA,KAAK,EAAE;EAFU,KAAnB;EAIAuB,IAAAA,GAAG,CAAC6H,QAAJ,gBAAoB7H,GAAG,CAACvB,KAAxB;EACAuB,IAAAA,GAAG,CAAC8H,UAAJ,GAAiB,KAAKC,iBAAL,CAAuB/H,GAAG,CAAC6H,QAA3B,CAAjB;EAEA,WAAQ7H,GAAR;EACD;;EAED+H,EAAAA,iBAAiB,CAACC,IAAD,EAAO;EAAA;;EACtB,QAAMC,EAAE,GAAG,EAAX;;EADsB,+BAEbvG,GAFa;EAGpB,UAAMjD,KAAK,GAAGuJ,IAAI,CAACtG,GAAD,CAAlB;EACAuG,MAAAA,EAAE,CAAC3B,IAAH,CAAQ;EACN5E,QAAAA,GAAG,EAAEA,GADC;EAENjD,QAAAA,KAAK,EAAEA,KAFD;EAGNyJ,QAAAA,OAAO,eAAE7H;EAAK,UAAA,SAAS,EAAC;EAAf,wBACPA;EAAM,UAAA,SAAS,EAAC,0BAAhB;EAA2C,UAAA,OAAO,EAAE,MAAM,KAAI,CAAC8H,SAAL,CAAezG,GAAf;EAA1D,wBACErB,wDAAMA,6BAAC+H,oBAAD,OAAN,CADF,CADO,eAIP/H;EAAM,UAAA,SAAS,EAAC,0BAAhB;EAA2C,UAAA,OAAO,EAAE,MAAM,KAAI,CAACgI,SAAL,CAAe;EAAE3G,YAAAA,GAAF;EAAOjD,YAAAA;EAAP,WAAf;EAA1D,wBACE4B,wDAAMA,6BAACiI,kBAAD,OAAN,CADF,CAJO;EAHH,OAAR;EAJoB;;EAEtB,SAAK,IAAI5G,GAAT,IAAgBsG,IAAhB,EAAsB;EAAA,YAAbtG,GAAa;EAcrB;;EACD,WAAQuG,EAAR;EACD;;EAEDM,EAAAA,iBAAiB,CAAC7G,GAAD,EAAMjD,KAAN,EAAa;EAC5B,QAAMmJ,YAAY,gBAAQ,KAAKxJ,KAAL,CAAWwJ,YAAnB,CAAlB;;EACAA,IAAAA,YAAY,CAAClG,GAAD,CAAZ,GAAoBjD,KAApB;EACA,SAAKD,QAAL,CAAc;EAAEoJ,MAAAA;EAAF,KAAd;EACD;;EAEDS,EAAAA,SAAS,CAACG,IAAD,EAAO;EACd,QAAMpK,KAAK,GAAG;EACZqK,MAAAA,UAAU,EAAE,KADA;EAEZC,MAAAA,YAAY,EAAE,IAFF;EAGZd,MAAAA,YAAY,EAAEY,IAAI,IAAI;EACpB9G,QAAAA,GAAG,EAAE,EADe;EAEpBjD,QAAAA,KAAK,EAAE;EAFa,OAHV;EAOZkJ,MAAAA,KAAK,EAAE;EAPK,KAAd;EAUA,QAAIa,IAAJ,EAAUpK,KAAK,CAACsK,YAAN,gBAA0BtK,KAAK,CAACwJ,YAAhC;EAEV,SAAKpJ,QAAL,CAAcJ,KAAd;EACD;;EAED+J,EAAAA,SAAS,CAACzG,GAAD,EAAM;EACb,QAAMtD,KAAK,gBAAQ,KAAKA,KAAb,CAAX;;EACA,WAAOA,KAAK,CAACyJ,QAAN,CAAenG,GAAf,CAAP;EACAtD,IAAAA,KAAK,CAAC0J,UAAN,GAAmB,KAAKC,iBAAL,CAAuB3J,KAAK,CAACyJ,QAA7B,CAAnB;EACA,SAAKrJ,QAAL,CAAcJ,KAAd;EAEA,SAAKyB,WAAL,CAAiBzB,KAAK,CAACyJ,QAAvB;EACD;;EAEDc,EAAAA,YAAY,GAAG;EACb,QAAMvK,KAAK,gBAAQ,KAAKA,KAAb,CAAX;;EAEA,QAAMwK,EAAE,GAAG,KAAKxK,KAAL,CAAWwJ,YAAtB;EAGA,QAAMiB,IAAI,GAAG,KAAKtK,MAAL,CAAYc,MAAzB;EAGA,QAAMmJ,IAAI,GAAG,EAAb;EACAA,IAAAA,IAAI,CAACI,EAAE,CAAClH,GAAJ,CAAJ,GAAekH,EAAE,CAACnK,KAAlB;EACAoK,IAAAA,IAAI,CAACnK,MAAL,CAAY8J,IAAZ,EAAkB,CAACvI,KAAD,EAAQC,OAAR,KAAoB;EACpC9B,MAAAA,KAAK,CAACqK,UAAN,GAAmBxI,KAAnB;EACA7B,MAAAA,KAAK,CAAC0K,iBAAN,GAA0B5I,OAA1B;;EAEA,UAAID,KAAK,KAAK,KAAd,EAAqB;EAEnB,YAAI7B,KAAK,CAACsK,YAAV,EAAwB;EACtB,iBAAOtK,KAAK,CAACyJ,QAAN,CAAezJ,KAAK,CAACsK,YAAN,CAAmBhH,GAAlC,CAAP;EACD;;EACDtD,QAAAA,KAAK,CAACyJ,QAAN,CAAezJ,KAAK,CAACwJ,YAAN,CAAmBlG,GAAlC,IAAyCtD,KAAK,CAACwJ,YAAN,CAAmBnJ,KAA5D;EAEAL,QAAAA,KAAK,CAAC0J,UAAN,GAAmB,KAAKC,iBAAL,CAAuB3J,KAAK,CAACyJ,QAA7B,CAAnB;EAEAzJ,QAAAA,KAAK,CAACuJ,KAAN,GAAc,KAAd;EACD;;EAED,WAAKnJ,QAAL,CAAcJ,KAAd;EACA,WAAKyB,WAAL,CAAiBzB,KAAK,CAACyJ,QAAvB;EACD,KAlBD;EAoBD;;EAED1H,EAAAA,MAAM,GAAG;EACP,QAAM4I,QAAQ,GAAG,MAAM;EACrB,WAAKvK,QAAL,CAAc;EAAEmJ,QAAAA,KAAK,EAAE;EAAT,OAAd;EACD,KAFD;;EAIA,QAAMqB,OAAO,GAAG,CACd;EACEC,MAAAA,KAAK,EAAE,KADT;EAEEC,MAAAA,SAAS,EAAE,KAFb;EAGExH,MAAAA,GAAG,EAAE;EAHP,KADc,EAMd;EACEuH,MAAAA,KAAK,EAAE,OADT;EAEEC,MAAAA,SAAS,EAAE,OAFb;EAGExH,MAAAA,GAAG,EAAE;EAHP,KANc,EAWd;EACEuH,MAAAA,KAAK,eAAE5I;EAAK,QAAA,SAAS,EAAC;EAAf,sBACLA;EAAM,QAAA,SAAS,EAAC,0BAAhB;EAA2C,QAAA,OAAO,EAAE,MAAM,KAAKgI,SAAL;EAA1D,sBACEhI,gEAAUA,6BAAC8I,kBAAD,OAAV,CADF,CADK,CADT;EAMED,MAAAA,SAAS,EAAE,SANb;EAOExH,MAAAA,GAAG,EAAE,SAPP;EAQE0H,MAAAA,KAAK,EAAE;EART,KAXc,CAAhB;EAuBA,QAAMC,MAAM,GAAG;EACbC,MAAAA,QAAQ,EAAE;EAAEC,QAAAA,IAAI,EAAE;EAAR,OADG;EAEbC,MAAAA,UAAU,EAAE;EAAED,QAAAA,IAAI,EAAE;EAAR;EAFC,KAAf;EAKA,WAAQ,MAAMpJ,MAAN,eAAaE,uDACnBA,6BAACoJ,UAAD;EACE,MAAA,QAAQ,MADV;EAEE,MAAA,QAAQ,EAAE,KAFZ;EAGE,MAAA,OAAO,EAAE,KAAKrL,KAAL,CAAWuJ,KAHtB;EAIE,MAAA,KAAK,EAAE,GAJT;EAKE,MAAA,IAAI,EAAE,KAAKgB,YAAL,CAAkBe,IAAlB,CAAuB,IAAvB,CALR;EAME,MAAA,QAAQ,EAAEX;EANZ,OAQG,KAAK3K,KAAL,CAAWqK,UAAX,KAA0B,IAA1B,gBACCpI;EAAK,MAAA,KAAK,EAAE;EAAEI,QAAAA,YAAY,EAAE;EAAhB;EAAZ,oBACEJ,6BAACsJ,UAAD;EAAO,MAAA,IAAI,EAAC,OAAZ;EAAoB,MAAA,OAAO,EAAE,KAAKvL,KAAL,CAAW0K,iBAAxC;EAA2D,MAAA,IAAI,EAAC;EAAhE,MADF,CADD,GAKG,IAbN,eAeEzI,6BAACC,SAAD,EACM+I,MADN,eAGEhJ,6BAACC,SAAD,CAAM,IAAN;EAAW,MAAA,KAAK,EAAC;EAAjB,oBACED,6BAACmC,UAAD;EAAO,MAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWwJ,YAAX,CAAwBlG,GAAtC;EAA2C,MAAA,QAAQ,EAAE;EAAA,YAAC;EAAEgB,UAAAA;EAAF,SAAD;EAAA,eAAgB,KAAK6F,iBAAL,CAAuB,KAAvB,EAA8B7F,MAAM,CAACjE,KAArC,CAAhB;EAAA;EAArD,MADF,CAHF,eAOE4B,6BAACC,SAAD,CAAM,IAAN;EAAW,MAAA,KAAK,EAAC;EAAjB,oBACED,6BAACmC,UAAD;EAAO,MAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWwJ,YAAX,CAAwBnJ,KAAtC;EAA6C,MAAA,QAAQ,EAAE;EAAA,YAAC;EAAEiE,UAAAA;EAAF,SAAD;EAAA,eAAgB,KAAK6F,iBAAL,CAAuB,OAAvB,EAAgC7F,MAAM,CAACjE,KAAvC,CAAhB;EAAA;EAAvD,MADF,CAPF,CAfF,CADmB,eA+BnB4B,6BAACuJ,UAAD;EACE,MAAA,IAAI,EAAC,OADP;EAEE,MAAA,UAAU,EAAE,KAAKxL,KAAL,CAAW0J,UAFzB;EAGE,MAAA,OAAO,EAAEkB,OAHX;EAIE,MAAA,UAAU,EAAE;EACVa,QAAAA,KAAK,EAAE,KAAKzL,KAAL,CAAW0J,UAAX,CAAsBgC,MADnB;EAEVC,QAAAA,QAAQ,EAAE,KAAK3L,KAAL,CAAW0J,UAAX,CAAsBgC,MAFtB;EAGVE,QAAAA,gBAAgB,EAAE;EAHR;EAJd,MA/BmB,CAAb,CAAR;EA0CD;;EAvL2B;;EA+L9B,MAAMC,MAAN,SAAqBnH,kBAArB,CAA8B;EAC5B3C,EAAAA,MAAM,GAAG;EACP,wBACEE,wDACEA,6BAAC0C,QAAD;EAAK,MAAA,KAAK,EAAC;EAAX,oBAAqB1C,6BAAC4C,uBAAD,OAArB,CADF,CADF;EAKD;;EAP2B;;EAe9B,MAAMiH,QAAN,SAAuBtH,kBAAvB,CAAkC;EAEhCvE,EAAAA,KAAK,CAACF,KAAD,EAAQ;EACX,QAAM6B,GAAG,GAAG,MAAM3B,KAAN,CAAYF,KAAZ,CAAZ;EAEA,QAAI,CAAC6B,GAAG,CAACvB,KAAT,EAAgBuB,GAAG,CAACvB,KAAJ,GAAY,EAAZ;EAEhB,SAAKyF,MAAL,gBAAmBlE,GAAG,CAACvB,KAAvB;EAEAuB,IAAAA,GAAG,CAAC6H,QAAJ,gBAAoB7H,GAAG,CAACvB,KAAxB;EACAuB,IAAAA,GAAG,CAAC8H,UAAJ,GAAiB,KAAKC,iBAAL,CAAuB/H,GAAG,CAAC6H,QAA3B,CAAjB;EAEA,WAAQ7H,GAAR;EACD;;EAED+H,EAAAA,iBAAiB,CAACC,IAAD,EAAO;EACtB,QAAMC,EAAE,GAAG,EAAX;;EACA,SAAK,IAAIvG,GAAT,IAAgBsG,IAAhB,EAAsB;EACpB,UAAMvJ,KAAK,GAAGuJ,IAAI,CAACtG,GAAD,CAAlB;EACAuG,MAAAA,EAAE,CAAC3B,IAAH,CAAQ;EACN5E,QAAAA,GAAG,EAAEA,GADC;EAENjD,QAAAA,KAAK,EAAEA;EAFD,OAAR;EAID;;EACD,WAAQwJ,EAAR;EACD;;EAGD9H,EAAAA,MAAM,GAAG;EACP,QAAM6I,OAAO,GAAG,CACd;EACEE,MAAAA,SAAS,EAAE,KADb;EAEExH,MAAAA,GAAG,EAAE;EAFP,KADc,EAKd;EACEwH,MAAAA,SAAS,EAAE,OADb;EAEExH,MAAAA,GAAG,EAAE;EAFP,KALc,CAAhB;AAWA,EAKA,WAAQ,MAAMZ,SAAN,eAAgBT,uDACtBA,6BAACuJ,UAAD;EACE,MAAA,UAAU,EAAE,KADd;EAEE,MAAA,IAAI,EAAC,OAFP;EAGE,MAAA,UAAU,EAAE,KAAKxL,KAAL,CAAW0J,UAHzB;EAIE,MAAA,OAAO,EAAEkB,OAJX;EAKE,MAAA,UAAU,EAAE;EACVa,QAAAA,KAAK,EAAE,KAAKzL,KAAL,CAAW0J,UAAX,CAAsBgC,MADnB;EAEVC,QAAAA,QAAQ,EAAE,KAAK3L,KAAL,CAAW0J,UAAX,CAAsBgC,MAFtB;EAGVE,QAAAA,gBAAgB,EAAE;EAHR;EALd,MADsB,CAAhB,CAAR;EAaD;;EA1D+B;;EAmElC,MAAMG,SAAN,SAAwBhH,qBAAxB,CAAoC;EAClCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAKmD,OAAL,GAAe;EACb8B,MAAAA,OAAO,EAAE,CADI;EAEbC,MAAAA,OAAO,EAAE;EAFI,KAAf;EAKA,SAAKpB,SAAL;EACD;;EAED9B,EAAAA,MAAM,GAAG;EACP,wBACEE,yCADF;EAID;;EAjBiC;;AAoBpC,WAAe;EACbmD,EAAAA,IAAI,EAAEC,cAAK,CAAC2G,EAAN,CAAS5G,IADF;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAAC2G,EAAN,CAASzG,WAFT;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAAC2G,EAAN,CAASxG,KAHH;EAKbC,EAAAA,IAAI,EAAEoG,MALO;EAMbnG,EAAAA,OAAO,EAAEqG,SANI;EAOb7J,EAAAA,IAAI,EAAEoH,MAPO;EAQb3D,EAAAA,MAAM,EAAEmG;EARK,CAAf;;EC5SA,MAAMG,QAAN,SAAuB9H,gBAAvB,CAAgC;EAC9BpC,EAAAA,MAAM,GAAG;EACP,WAAQ,MAAMA,MAAN,eACNE,6BAACmC,UAAD;EACA,MAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWK,KADlB;EAEA,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWS,OAAX,CAAmB4D,WAFhC;EAGA,MAAA,QAAQ,EAAE;EAAA,YAAC;EAAEC,UAAAA;EAAF,SAAD;EAAA,eAAgB,KAAK7C,WAAL,CAAiB6C,MAAM,CAACjE,KAAxB,CAAhB;EAAA,OAHV;EAIA,MAAA,KAAK,EAAE;EAACsC,QAAAA,KAAK,EAAE;EAAR;EAJP,MADM,CAAR;EAQD;;EAV6B;;EAkBhC,MAAMuJ,UAAN,SAAyB1H,kBAAzB,CAAoC;;EAQpC,MAAM2H,QAAN,SAAuBzH,kBAAvB,CAAgC;EAC9B3C,EAAAA,MAAM,GAAG;EACP,wBACEE,wDACEA,6BAAC0C,QAAD;EAAK,MAAA,KAAK,EAAC,SAAX;EAAqB,MAAA,KAAK,EAAE;EAAEC,QAAAA,KAAK,EAAE;EAAT;EAA5B,oBAAkD3C,6BAAC4C,kBAAD,OAAlD,CADF,CADF;EAKD;;EAP6B;;EAehC,MAAMuH,WAAN,SAA0BrH,qBAA1B,CAAsC;EACpCjF,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAK8D,SAAL;EACD;;EALmC;;AAuBtC,aAAe;EACbuB,EAAAA,IAAI,EAAEC,cAAK,CAACgH,IAAN,CAAWjH,IADJ;EAEbG,EAAAA,WAAW,EAAEF,cAAK,CAACgH,IAAN,CAAW9G,WAFX;EAGbC,EAAAA,KAAK,EAAEH,cAAK,CAACgH,IAAN,CAAW7G,KAHL;EAKbC,EAAAA,IAAI,EAAE0G,QALO;EAMbzG,EAAAA,OAAO,EAAE0G,WANI;EAOblK,EAAAA,IAAI,EAAE+J,QAPO;EAQbtG,EAAAA,MAAM,EAAEuG;EARK,CAAf;;AC/EA,cAAe;EACbvF,EAAAA,IADa;EAEbU,EAAAA,KAFa;EAGb/B,EAAAA,MAHa;EAIboC,EAAAA,MAJa;EAKbS,EAAAA,MALa;EAMbhB,EAAAA,QANa;EAObkF,EAAAA,IAPa;EAQbrI,UAAAA,QARa;EASbsI,SAAAA,OATa;EAUbjD,EAAAA,SAVa;EAWb2C,EAAAA;EAXa,CAAf;;ECTO,MAAMO,cAAN,SAA6BpM,eAA7B,CAAoC;EACzCL,EAAAA,WAAW,CAAC0M,IAAD,EAAO/L,OAAP,EAAgB;EACzB,UAAM+L,IAAN,EAAY/L,OAAZ;EACD;;EAEDgM,EAAAA,QAAQ,CAAChC,IAAD,EAAO;EACb,WAAQiC,KAAK,CAACjC,IAAD,CAAb;EACD;;EAEDkC,EAAAA,OAAO,CAACxM,MAAD,EAAS;EAEd,UAAMwM,OAAN,CAAcxM,MAAd;EACD;;EAZwC;;ECUpC,MAAMyM,WAAN,SAA0BpK,iBAA1B,CAA4C;EACjD1C,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAK8M,OAAL,GAAe5K,cAAK,CAAC6K,SAAN,EAAf;EAED;;EAED7M,EAAAA,KAAK,CAACF,KAAD,EAAQoG,KAAR,EAAe;EAElB,QAAMnG,KAAK,GAAG;EACZiL,MAAAA,MAAM,EAAElL,KAAK,CAACkL,MAAN,GAAelL,KAAK,CAACkL,MAArB,GAA8B;EAD1B,KAAd;EAKAjL,IAAAA,KAAK,CAAC+M,SAAN,GAAkBhN,KAAK,CAACI,MAAxB;EACAH,IAAAA,KAAK,CAACG,MAAN,GAAe,IAAIoM,cAAJ,CAAmB,MAAnB,CAAf;EACAvM,IAAAA,KAAK,CAACG,MAAN,CAAawM,OAAb,CAAqB3M,KAAK,CAAC+M,SAA3B;EAIA/M,IAAAA,KAAK,CAACgN,QAAN,GAAiBjN,KAAK,CAACiJ,KAAvB;EACAhJ,IAAAA,KAAK,CAACgJ,KAAN,GAAc,IAAIiE,cAAJ,CAAkBjN,KAAK,CAACG,MAAxB,CAAd;EACAH,IAAAA,KAAK,CAACgJ,KAAN,CAAYkE,QAAZ,CAAqBnN,KAAK,CAACiJ,KAA3B;EAEAhJ,IAAAA,KAAK,CAACmN,UAAN,GAAmBnN,KAAK,CAACgJ,KAAN,CAAYoE,QAAZ,EAAnB;EACApN,IAAAA,KAAK,CAACM,MAAN,GAAeP,KAAK,CAACO,MAAN,IAAgB,KAA/B;EAEAN,IAAAA,KAAK,CAAC8J,OAAN,GAAgB/J,KAAK,CAAC+J,OAAtB;EACA9J,IAAAA,KAAK,CAACqN,SAAN,GAAkBtN,KAAK,CAACsN,SAAxB;EAEA,SAAKC,UAAL,GAAkB,EAAlB;EAEA,SAAK3M,QAAL,GAAgBZ,KAAK,CAACY,QAAN,GAAiBZ,KAAK,CAACY,QAAvB,GAAkC,MAAM,EAAxD;EAGAX,IAAAA,KAAK,CAACuN,QAAN,GAAiB,KAAKC,MAAL,CAAY;EAC3BxN,MAAAA,KAD2B;EAE3ByN,MAAAA,IAAI,EAAEzN,KAAK,CAACG,MAFe;EAG3B6I,MAAAA,KAAK,EAAEhJ,KAAK,CAACmN,UAHc;EAI3B7M,MAAAA,MAAM,EAAEN,KAAK,CAACM;EAJa,KAAZ,CAAjB;EAMA,WAAQN,KAAR;EACD;;EAEDoN,EAAAA,QAAQ,GAAG;EACT,WAAQ,KAAKpN,KAAL,CAAWgJ,KAAX,CAAiBoE,QAAjB,EAAR;EACD;;EAEDM,EAAAA,aAAa,CAACC,IAAD,EAAO;EAClB,SAAK3N,KAAL,CAAWgJ,KAAX,CAAiB4E,GAAjB,CAAqBD,IAArB;;EACA,QAAME,MAAM,GAAG,KAAK7N,KAAL,CAAWgJ,KAAX,CAAiBoE,QAAjB,EAAf;;EACA,SAAKzM,QAAL,CAAc,KAAKX,KAAL,CAAWgJ,KAAzB,EAAgC6E,MAAhC;EACA,SAAKzN,QAAL,CAAc;EACZ+M,MAAAA,UAAU,EAAEU,MADA;EAGZN,MAAAA,QAAQ,EAAE,KAAKC,MAAL,CAAY;EACpBxN,QAAAA,KAAK,EAAE,KAAKA,KADQ;EAEpByN,QAAAA,IAAI,EAAE,KAAKzN,KAAL,CAAWG,MAFG;EAGpB6I,QAAAA,KAAK,EAAE6E,MAHa;EAIpBvN,QAAAA,MAAM,EAAE;EAJY,OAAZ;EAHE,KAAd;EAUD;;EAEDwN,EAAAA,oBAAoB,CAACH,IAAD,EAAO;EACzB,SAAK3N,KAAL,CAAWgJ,KAAX,CAAiB+E,MAAjB,CAAwBJ,IAAxB;;EACA,QAAME,MAAM,GAAG,KAAK7N,KAAL,CAAWgJ,KAAX,CAAiBoE,QAAjB,EAAf;;EACA,SAAKzM,QAAL,CAAc,KAAKX,KAAL,CAAWgJ,KAAzB,EAAgC6E,MAAhC;EACA,SAAKzN,QAAL,CAAc;EACZ+M,MAAAA,UAAU,EAAEU,MADA;EAIZN,MAAAA,QAAQ,EAAE,KAAKC,MAAL,CAAY;EACpBxN,QAAAA,KAAK,EAAE,KAAKA,KADQ;EAEpByN,QAAAA,IAAI,EAAE,KAAKzN,KAAL,CAAWG,MAFG;EAGpB6I,QAAAA,KAAK,EAAE6E,MAHa;EAIpBvN,QAAAA,MAAM,EAAE;EAJY,OAAZ;EAJE,KAAd;EAYD;;EAGD4M,EAAAA,QAAQ,CAACS,IAAD,EAAOtN,KAAP,EAAc;EACpB,QAAI,CAAC,KAAKL,KAAL,CAAWgJ,KAAhB,EAAuB;EAEvB,SAAKhJ,KAAL,CAAWgJ,KAAX,CAAiB4E,GAAjB,CAAqBD,IAArB,EAA2BtN,KAA3B;;EACA,QAAMwN,MAAM,GAAG,KAAK7N,KAAL,CAAWgJ,KAAX,CAAiBoE,QAAjB,EAAf;;EACA,SAAKzM,QAAL,CAAc,KAAKX,KAAL,CAAWgJ,KAAzB,EAAgC6E,MAAhC;EACA,SAAKzN,QAAL,CAAc;EACZ+M,MAAAA,UAAU,EAAEU;EADA,KAAd;EAGD;;EAEDL,EAAAA,MAAM,CAACQ,EAAD,EAAK;EAAA;;EAET,QAAI;EAAEP,MAAAA,IAAF;EAAQzE,MAAAA,KAAR;EAAe1I,MAAAA,MAAf;EAAuBN,MAAAA;EAAvB,QAAiCgO,EAArC;;EAEA,QAAMC,QAAQ,GAAG,CAAC9N,MAAD,EAAS+N,WAAT,EAAsBlF,KAAtB,EAA6BpH,GAA7B,EAAkC+L,IAAlC,KAA2C;EAC1DA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;EAEA,UAAI,CAAC3E,KAAL,EAAYA,KAAK,GAAG,EAAR;EAEZmF,MAAAA,cAAK,CAACC,WAAN,CAAkBjO,MAAlB,EAA0B,CAACkO,KAAD,EAAQC,IAAR,KAAiB;EAEzC,YAAMC,MAAM,gBAAQjC,KAAK,CAACkC,OAAN,CAAcF,IAAd,IAAsBA,IAAI,CAAC,CAAD,CAA1B,GAAgCA,IAAxC,CAAZ;;EACA,YAAMG,cAAc,GAAGP,WAAW,CAACK,MAAM,CAACG,KAAR,CAAlC;;EACA,YAAMC,iBAAiB,gBAAQrC,KAAK,CAACkC,OAAN,CAAcC,cAAd,IAAgCA,cAAc,CAAC,CAAD,CAA9C,GAAoDA,cAA5D,CAAvB;;EAEA,YAAMG,QAAQ,GAAG5F,KAAK,GAAGA,KAAK,CAACuF,MAAM,CAACG,KAAR,CAAR,GAAyB,IAA/C;EACA,YAAMG,OAAO,GAAGlB,IAAI,GAAG,GAAP,GAAaY,MAAM,CAACG,KAApC;;EAEA,YAAIH,MAAM,CAACO,OAAP,KAAmB,IAAvB,EAA6B;EAC3B,cAAMlE,OAAO,GAAG,CACd;EACEE,YAAAA,SAAS,EAAE,MADb;EAEExH,YAAAA,GAAG,EAAE,MAFP;EAGEX,YAAAA,KAAK,EAAE;EAHT,WADc,CAAhB;;EAQA,cAAI3C,KAAK,CAAC8J,OAAN,KAAkB,IAAtB,EAA4B;EAC1Bc,YAAAA,OAAO,CAAC1C,IAAR,CAAa;EACX4C,cAAAA,SAAS,EAAE,SADA;EAEXxH,cAAAA,GAAG,EAAE,SAFM;EAGX0H,cAAAA,KAAK,EAAE;EAHI,aAAb;EAKD;;EAED,cAAMtB,UAAU,GAAG,EAAnB;EAEA,cAAIqF,SAAS,GAAGH,QAAhB;EACA,cAAMnO,OAAO,GAAG8N,MAAM,CAACS,MAAP,IAAiB,EAAjC;EACA,cAAMpG,GAAG,GAAGnI,OAAO,CAACmI,GAAR,GAAcnI,OAAO,CAACmI,GAAtB,GAA6B2F,MAAM,CAACnM,SAAP,KAAqB,IAArB,GAA4B,CAA5B,GAAgC,CAAzE;;EAEA,cAAImM,MAAM,CAACU,QAAP,KAAoB,IAAxB,EAA8B;EAC5B,gBAAIF,SAAS,GAAG/F,KAAK,CAACuF,MAAM,CAACG,KAAR,CAArB;EAEA,gBAAI,CAACpC,KAAK,CAACkC,OAAN,CAAcI,QAAd,CAAL,EAA8BG,SAAS,GAAG/F,KAAK,CAACuF,MAAM,CAACG,KAAR,CAAL,GAAsB,EAAlC;;EAG9B,gBAAI9F,GAAG,GAAGmG,SAAS,CAACrD,MAAhB,GAAyB,CAA7B,EAAgC;EAC9B,mBAAK,IAAI/H,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIiF,GAAG,GAAGmG,SAAS,CAACrD,MAArC,EAA6C/H,CAAC,EAA9C,EAAkD;EAChDoL,gBAAAA,SAAS,CAAC7G,IAAV,CAAe,EAAf;EACD;EACF;;EAV2B;EAa1B,kBAAM7H,KAAK,GAAG0O,SAAS,CAACpL,CAAD,CAAvB;EACA,kBAAML,GAAG,GAAGuL,OAAO,GAAG,GAAV,GAAgBlL,CAA5B;EAEA,kBAAMuL,KAAK,GAAG,EAAd;EACAjB,cAAAA,QAAQ,CAACM,MAAD,EAASI,iBAAT,EAA4BtO,KAA5B,EAAmC6O,KAAnC,EAA0C5L,GAA1C,CAAR;EAEA,kBAAM6L,MAAM,GAAG;EAAE7L,gBAAAA,GAAF;EAAO8L,gBAAAA,IAAI,EAAEF;EAAb,eAAf;;EACA,kBAAIlP,KAAK,CAAC8J,OAAN,KAAkB,IAAtB,EAA4B;EAC1BqF,gBAAAA,MAAM,CAACrF,OAAP,gBAAiB7H,6BAACoN,WAAD;EAAQ,kBAAA,IAAI,EAAC,OAAb;EAAqB,kBAAA,OAAO,EAAE,MAAM,KAAI,CAACvB,oBAAL,CAA0BxK,GAA1B;EAApC,gCACfrB,wDAAMA,6BAAC+H,oBAAD,OAAN,CADe,CAAjB;EAGD;;EACDN,cAAAA,UAAU,CAACxB,IAAX,CAAgBiH,MAAhB;EAzB0B;;EAY5B,iBAAK,IAAIxL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoL,SAAS,CAACrD,MAA9B,EAAsC/H,CAAC,EAAvC,EAA2C;EAAA;EAc1C;EACF,WA3BD,MA4BK,IAAI4K,MAAM,CAAC1F,KAAX,EAAkB;EACrB,mBAAO8F,iBAAiB,CAACxM,IAAzB;EACA,gBAAMgC,QAAQ,GAAGoK,MAAM,CAAC1F,KAAP,CAAa7I,KAAK,CAACqN,SAAnB,CAAjB;;EAQA,gBAAI,CAACf,KAAK,CAACkC,OAAN,CAAcI,QAAd,CAAL,EAA8B;EAC5B5F,cAAAA,KAAK,CAACuF,MAAM,CAACG,KAAR,CAAL,GAAsB,EAAtB;EACAK,cAAAA,SAAS,GAAG/F,KAAK,CAACuF,MAAM,CAACG,KAAR,CAAjB;EACD;;EAED,gBAAI,CAACK,SAAL,EAAgB,OAAQnN,GAAR;;EAEhB,gBAAIgH,GAAG,GAAGmG,SAAS,CAACrD,MAAhB,GAAyB,CAA7B,EAAgC;EAC9B,mBAAK,IAAI/H,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIiF,GAAG,GAAGmG,SAAS,CAACrD,MAArC,EAA6C/H,CAAC,EAA9C,EAAkD;EAChDoL,gBAAAA,SAAS,CAAC7G,IAAV,CAAe,IAAf;EACD;EACF;;EArBoB;EAwBnB,kBAAM7H,KAAK,GAAG0O,SAAS,CAACpL,CAAD,CAAvB;EACA,kBAAML,GAAG,GAAGuL,OAAO,GAAG,GAAV,GAAgBlL,CAA5B;EAEA,kBAAMwL,MAAM,GAAG;EACb7L,gBAAAA,GADa;EAEb8L,gBAAAA,IAAI,eAAEnN,6BAAC,QAAD;EACJ,kBAAA,MAAM,EAAE0M,iBADJ;EAEJ,kBAAA,KAAK,EAAEtO,KAFH;EAGJ,kBAAA,MAAM,EAAEC,MAHJ;EAIJ,kBAAA,IAAI,EAAE,KAAI,CAACP,KAAL,CAAWkJ,IAJb;EAKJ,kBAAA,QAAQ,EAAE,CAAC9I,MAAD,EAASE,KAAT,KAAmB,KAAI,CAAC6M,QAAL,CAAc5J,GAAd,EAAmBjD,KAAnB,CALzB;EAMJ,kBAAA,UAAU,EAAE,IANR;EASJ,kBAAA,OAAO,EAAE,CAACwB,KAAD,EAAQC,OAAR,KAAoB;EAC3B,wBAAID,KAAK,KAAK,IAAd,EAAoB;EAClB,sBAAA,KAAI,CAACyL,UAAL,CAAgBhK,GAAhB,IAAuBxB,OAAvB;EACD,qBAFD,MAGK;EACH,0BAAMwN,GAAG,GAAG,KAAI,CAAChC,UAAL,CAAgBhK,GAAhB,CAAZ;;EACA,0BAAIgM,GAAJ,EAAS;EACP,+BAAO,KAAI,CAAChC,UAAL,CAAgBhK,GAAhB,CAAP;EACD;EACF;EACF;EAnBG;EAFO,eAAf;;EAwBA,kBAAItD,KAAK,CAAC8J,OAAN,KAAkB,IAAtB,EAA4B;EAC1BqF,gBAAAA,MAAM,CAACrF,OAAP,gBAAiB7H,6BAACoN,WAAD;EAAQ,kBAAA,IAAI,EAAC,OAAb;EAAqB,kBAAA,OAAO,EAAE,MAAM,KAAI,CAACvB,oBAAL,CAA0BxK,GAA1B;EAApC,gCACfrB,wDAAMA,6BAAC+H,oBAAD,OAAN,CADe,CAAjB;EAGD;;EACDN,cAAAA,UAAU,CAACxB,IAAX,CAAgBiH,MAAhB;EAxDmB;;EAuBrB,iBAAK,IAAIxL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoL,SAAS,CAACrD,MAA9B,EAAsC/H,CAAC,EAAvC,EAA2C;EAAA;EAkC1C;EACF;;EAED/B,UAAAA,GAAG,CAACsG,IAAJ,eAASjG,6BAACC,SAAD,CAAM,IAAN;EAAW,YAAA,GAAG,EAAEqM,MAAM,CAACgB,MAAvB;EAA+B,YAAA,OAAO,EAAE;EAAxC,0BACPtN;EAAK,YAAA,SAAS,EAAC;EAAf,0BACEA,6BAACuN,SAAD;EAAM,YAAA,IAAI,EAAC,OAAX;EAAmB,YAAA,KAAK,EAAEjB,MAAM,CAACkB,QAAP,CAAgBtN,IAA1C;EAAgD,YAAA,KAAK,eAAEF;EAAK,cAAA,SAAS,EAAC;EAAf,eACpD8M,SAAS,IAAI/O,KAAK,CAAC8J,OAAN,KAAkB,IAA/B,gBACC7H;EAAM,cAAA,SAAS,EAAC,0BAAhB;EAA2C,cAAA,OAAO,EAAE,MAAM,KAAKyL,aAAL,CAAmBmB,OAAO,GAAG,GAAV,GAAgBE,SAAS,CAACrD,MAA7C;EAA1D,4BACEzJ,wDAAMA,6BAAC8I,kBAAD,OAAN,CADF,CADD,GAIG,IALiD;EAAvD,0BAOE9I,6BAACuJ,UAAD;EACE,YAAA,IAAI,EAAC,OADP;EAEE,YAAA,UAAU,EAAE9B,UAFd;EAGE,YAAA,OAAO,EAAEkB,OAHX;EAIE,YAAA,aAAa,EAAC,QAJhB;EAKE,YAAA,UAAU,EAAE,KALd;EAME,YAAA,UAAU,EAAE;EACVa,cAAAA,KAAK,EAAE/B,UAAU,CAACgC,MADR;EAEVC,cAAAA,QAAQ,EAAEjC,UAAU,CAACgC,MAFX;EAGVE,cAAAA,gBAAgB,EAAE;EAHR,aANd;EAWE,YAAA,QAAQ;EAXV,YAPF,CADF,CADO,CAAT;EA0BD,SAzID,MA0IK;EACH,cAAI2C,MAAM,CAACU,QAAP,KAAoB,IAAxB,EAA8B;EAC5B,gBAAMC,KAAK,GAAG,EAAd;EAEAjB,YAAAA,QAAQ,CAACM,MAAD,EAASI,iBAAT,EAA4BC,QAA5B,EAAsCM,KAAtC,EAA6CL,OAA7C,CAAR;EAEAjN,YAAAA,GAAG,CAACsG,IAAJ,eAASjG;EAAK,cAAA,GAAG,EAAEsM,MAAM,CAACgB,MAAjB;EAAyB,cAAA,SAAS,EAAC;EAAnC,4BACPtN,6BAACuN,SAAD;EAAM,cAAA,IAAI,EAAC,OAAX;EAAmB,cAAA,KAAK,EAAEjB,MAAM,CAACpM;EAAjC,eACG+M,KADH,CADO,CAAT;EAKD,WAVD,MAWK,IAAIZ,IAAI,CAACzF,KAAT,EAAgB;EACnB,gBAAM1E,SAAQ,GAAGmK,IAAI,CAACzF,KAAL,CAAW7I,KAAK,CAACqN,SAAjB,CAAjB;EAEAzL,YAAAA,GAAG,CAACsG,IAAJ,eAASjG,6BAAC,SAAD;EACP,cAAA,MAAM,EAAE0M,iBADD;EAEP,cAAA,KAAK,EAAEC,QAFA;EAGP,cAAA,GAAG,EAAEL,MAAM,CAACgB,MAHL;EAIP,cAAA,MAAM,EAAEjP,MAJD;EAKP,cAAA,IAAI,EAAE,KAAKP,KAAL,CAAWkJ,IALV;EAMP,cAAA,QAAQ,EAAE,CAAC9I,MAAD,EAASE,KAAT,KAAmB,KAAK6M,QAAL,CAAc2B,OAAd,EAAuBxO,KAAvB,CANtB;EASP,cAAA,OAAO,EAAE,CAACwB,KAAD,EAAQC,OAAR,KAAoB;EAC3B,oBAAID,KAAK,KAAK,IAAd,EAAoB;EAClB,uBAAKyL,UAAL,CAAgBiB,MAAM,CAACgB,MAAvB,IAAiCzN,OAAjC;EACD,iBAFD,MAGK;EACH,sBAAMwN,GAAG,GAAG,KAAKhC,UAAL,CAAgBiB,MAAM,CAACgB,MAAvB,CAAZ;;EACA,sBAAID,GAAJ,EAAS;EACP,2BAAO,KAAKhC,UAAL,CAAgBiB,MAAM,CAACgB,MAAvB,CAAP;EACD;EACF;EACF;EAnBM,cAAT;EAqBD;EACF;EACF,OAzLD;EA0LA,aAAQ3N,GAAR;EACD,KAhMD;;EAkMA,QAAMA,GAAG,GAAG,EAAZ;EACAqM,IAAAA,QAAQ,CACNR,IAAI,CAACzM,OAAL,CAAab,MADP,EAENsN,IAAI,CAACiC,kBAAL,CAAwBvP,MAFlB,EAGN6I,KAHM,EAINpH,GAJM,CAAR;EAMA,WAAQA,GAAR;EACD;;EAEDG,EAAAA,MAAM,GAAG;EACP,QAAIkJ,MAAM,GAAG,EAAb;;EAEA,QAAI,KAAKjL,KAAL,CAAWiL,MAAX,KAAsB,YAA1B,EAAwC;EACtCA,MAAAA,MAAM,GAAG;EACPC,QAAAA,QAAQ,EAAE;EAAEC,UAAAA,IAAI,EAAE;EAAR,SADH;EAEPC,QAAAA,UAAU,EAAE;EAAED,UAAAA,IAAI,EAAE;EAAR;EAFL,OAAT;EAID;;EACD,wBAAQlJ,6BAACC,SAAD;EACN,MAAA,MAAM,EAAE,KAAKlC,KAAL,CAAWiL,MADb;EAEN,MAAA,GAAG,EAAE,KAAK4B;EAFJ,OAGF5B,MAHE;EAIN,MAAA,IAAI,EAAC;EAJC,QAKL,KAAKjL,KAAL,CAAWuN,QALN,CAAR;EAOD;;EA/TgD;;ECA5C,MAAMoC,kBAAN,SAAiCnN,iBAAjC,CAAmD;EACxDvC,EAAAA,KAAK,CAACF,KAAD,EAAQ;EACX,QAAMC,KAAK,GAAG;EACZiL,MAAAA,MAAM,EAAElL,KAAK,CAACkL,MADF;EAEZ9K,MAAAA,MAAM,EAAEJ,KAAK,CAACI,MAFF;EAGZ6I,MAAAA,KAAK,EAAEjJ,KAAK,CAACiJ,KAHD;EAIZrI,MAAAA,QAAQ,EAAEZ,KAAK,CAACY;EAJJ,KAAd;EAOA,WAAOX,KAAP;EACD;;EAED+B,EAAAA,MAAM,GAAG;EACP,wBAAQE,6BAAC,WAAD;EACN,MAAA,MAAM,EAAE,KAAKjC,KAAL,CAAWG,MADb;EAEN,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWgJ,KAFZ;EAGN,MAAA,QAAQ,EAAE,KAAKhJ,KAAL,CAAWW,QAHf;EAIN,MAAA,OAAO,EAAE,IAJH;EAKN,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWiL,MALb;EAMN,MAAA,SAAS,EAAC;EANJ,MAAR;EAQD;;EArBuD;;ECH1D,IAAM2E,QAAQ,GAAG,EAAjB;EACA,IAAMC,eAAe,GAAG,EAAxB;;EACA,KAAK,IAAIlM,CAAT,IAAc+I,KAAd,EAAqB;EACnBkD,EAAAA,QAAQ,CAACjM,CAAD,CAAR,GAAc+I,KAAK,CAAC/I,CAAD,CAAL,CAAS4B,WAAvB;;EACA,MAAI5B,CAAC,KAAK,OAAV,EAAmB;EACjBkM,IAAAA,eAAe,CAAClM,CAAD,CAAf,GAAqB+I,KAAK,CAAC/I,CAAD,CAAL,CAAS4B,WAA9B;EACD;EACF;;EAGD,IAAMuK,UAAU,GAAG;EACjBxM,EAAAA,GAAG,EAAE;EACHnB,IAAAA,IAAI,EAAE,mBADH;EAEH0G,IAAAA,KAAK,EAAE6D,KAAK,CAACrD,SAFV;EAGHjH,IAAAA,SAAS,EAAE,IAHR;EAIH2N,IAAAA,SAAS,EAAE;EAJR,GADY;EAOjBtF,EAAAA,IAAI,EAAE;EACJtI,IAAAA,IAAI,EAAE,YADF;EAEJ0G,IAAAA,KAAK,EAAE,QAFH;EAGJzG,IAAAA,SAAS,EAAE,IAHP;EAIJrB,IAAAA,QAAQ,EAAE;EACRiH,MAAAA,KAAK,EAAE4H;EADC,KAJN;EAOJG,IAAAA,SAAS,EAAE;EAPP,GAPW;EAgBjBC,EAAAA,GAAG,EAAE;EACH7N,IAAAA,IAAI,EAAE,aADH;EAEHC,IAAAA,SAAS,EAAE,KAFR;EAGHyG,IAAAA,KAAK,EAAE,QAHJ;EAIHkH,IAAAA,SAAS,EAAE;EAJR,GAhBY;EAsBjBE,EAAAA,QAAQ,EAAE;EACR9N,IAAAA,IAAI,EAAE,uBADE;EAERC,IAAAA,SAAS,EAAE,KAFH;EAGRyG,IAAAA,KAAK,EAAE,QAHC;EAIRqH,IAAAA,QAAQ,EAAE,CAJF;EAKRnP,IAAAA,QAAQ,EAAE;EACRoP,MAAAA,aAAa,EAAE;EADP,KALF;EAQRJ,IAAAA,SAAS,EAAE;EARH;EAtBO,CAAnB;AA0CA,EAAO,MAAMK,0BAAN,SAAyCnO,cAAK,CAACpC,SAA/C,CAAyD;EAC9DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;EACjB,UAAMA,KAAN;EAEA,SAAK8M,OAAL,GAAe5K,cAAK,CAAC6K,SAAN,EAAf;EACA,SAAK9M,KAAL,GAAa,KAAKC,KAAL,CAAWF,KAAX,EAAkB,IAAlB,CAAb;EACA,SAAKsQ,aAAL,GAAqBP,UAArB;EACD;;EAED5P,EAAAA,kBAAkB,CAACH,KAAD,EAAQ;EACxB,QAAIsD,OAAO,GAAG,KAAd;;EACA,QAAIrD,KAAK,gBAAQ,KAAKA,KAAb,CAAT;;EAEA,QAAI,KAAKD,KAAL,CAAWuQ,OAAX,KAAuBvQ,KAAK,CAACuQ,OAAjC,EAA0C;EACxC,WAAKD,aAAL,GAAqBP,UAArB;EACA9P,MAAAA,KAAK,GAAG,KAAKC,KAAL,CAAW,KAAKF,KAAhB,CAAR;EACAsD,MAAAA,OAAO,GAAG,IAAV;EACD;;EAED,QAAIA,OAAO,KAAK,IAAhB,EAAsB,KAAKjD,QAAL,CAAcJ,KAAd;EACvB;;EAEDC,EAAAA,KAAK,CAACF,KAAD,EAAQoG,KAAR,EAAe;EAQlB,QAAMnG,KAAK,GAAG;EACZuQ,MAAAA,OAAO,EAAE,KADG;EAEZC,MAAAA,QAAQ,EAAEzQ,KAAK,CAACM,KAFJ;EAGZ+O,MAAAA,IAAI,EAAE;EACJpP,QAAAA,KAAK,EAAE,SADH;EAEJ4E,QAAAA,KAAK,EAAE;EAFH,OAHM;EAOZvE,MAAAA,KAAK,EAAE,EAPK;EAQZiQ,MAAAA,OAAO,EAAEvQ,KAAK,CAACuQ,OARH;EASZrH,MAAAA,IAAI,EAAElJ,KAAK,CAACkJ,IATA;EAUZ3I,MAAAA,MAAM,EAAE;EAVI,KAAd;;EAaA,QAAIN,KAAK,CAACiJ,IAAN,IAAcjJ,KAAK,CAACiJ,IAAN,CAAWsG,MAA7B,EAAqC;EACnCvP,MAAAA,KAAK,CAACyQ,WAAN,GAAoBzQ,KAAK,CAACiJ,IAAN,CAAWsG,MAA/B;EACD,KAFD,MAGKvP,KAAK,CAACyQ,WAAN,GAAoB,EAApB;;EAEL,QAAI1Q,KAAK,CAACM,KAAV,EAAiB;EACf,UAAMqQ,GAAG,GAAG3Q,KAAK,CAACM,KAAlB;EAEAL,MAAAA,KAAK,CAACuQ,OAAN,GAAgB,IAAhB;;EAGA,UAAIG,GAAG,CAAC5B,OAAJ,KAAgB,IAAhB,IAAwB4B,GAAG,CAACzB,QAAJ,KAAiB,IAA7C,EAAmD;EACjDjP,QAAAA,KAAK,CAACK,KAAN,GAAc;EACZiD,UAAAA,GAAG,EAAEoN,GAAG,CAAChC,KADG;EAEZjE,UAAAA,IAAI,EAAEiG,GAAG,CAAC7H,KAAJ,CAAUzD,IAFJ;EAGZ4K,UAAAA,GAAG,EAAEU,GAAG,CAACvO,IAHG;EAIZwO,UAAAA,QAAQ,EAAED,GAAG,CAACtO,SAJF;EAKZwO,UAAAA,IAAI,EAAEF,GAAG,CAACG,KALE;EAMZC,UAAAA,KAAK,EAAEJ,GAAG,CAACK,MANC;EAOZtQ,UAAAA,OAAO,EAAEiQ,GAAG,CAAC3P,QAPD;EAQZkP,UAAAA,QAAQ,EAAES,GAAG,CAACX;EARF,SAAd;EAUD,OAXD,MAaK,IAAIW,GAAG,CAAC5B,OAAJ,KAAgB,IAAhB,IAAwB4B,GAAG,CAACzB,QAAJ,KAAiB,IAA7C,EAAmD;EACtDjP,UAAAA,KAAK,CAACK,KAAN,GAAc;EACZiD,YAAAA,GAAG,EAAEoN,GAAG,CAAChC,KADG;EAEZjE,YAAAA,IAAI,EAAE,OAFM;EAGZuG,YAAAA,OAAO,EAAE,QAHG;EAIZhB,YAAAA,GAAG,EAAEU,GAAG,CAACvO,IAJG;EAKZwO,YAAAA,QAAQ,EAAED,GAAG,CAACtO,SALF;EAMZwO,YAAAA,IAAI,EAAEF,GAAG,CAACG,KANE;EAOZC,YAAAA,KAAK,EAAEJ,GAAG,CAACK,MAPC;EAQZtQ,YAAAA,OAAO,EAAEiQ,GAAG,CAAC3P,QARD;EASZkP,YAAAA,QAAQ,EAAES,GAAG,CAACX;EATF,WAAd;EAWD,SAZI,MAcA,IAAIW,GAAG,CAAC5B,OAAJ,KAAgB,IAAhB,IAAwB4B,GAAG,CAACzB,QAAJ,KAAiB,IAA7C,EAAmD;EACtDjP,YAAAA,KAAK,CAACK,KAAN,GAAc;EACZiD,cAAAA,GAAG,EAAEoN,GAAG,CAAChC,KADG;EAEZjE,cAAAA,IAAI,EAAE,OAFM;EAGZuG,cAAAA,OAAO,EAAE,OAAON,GAAG,CAAC7H,KAAX,KAAqB,QAArB,GAAgC6H,GAAG,CAAC7H,KAApC,GAA4C6H,GAAG,CAAC7H,KAAJ,CAAUzD,IAHnD;EAIZ4K,cAAAA,GAAG,EAAEU,GAAG,CAACvO,IAJG;EAKZwO,cAAAA,QAAQ,EAAED,GAAG,CAACtO,SALF;EAMZwO,cAAAA,IAAI,EAAEF,GAAG,CAACG,KANE;EAOZC,cAAAA,KAAK,EAAEJ,GAAG,CAACK,MAPC;EAQZtQ,cAAAA,OAAO,EAAEiQ,GAAG,CAAC3P,QARD;EASZkP,cAAAA,QAAQ,EAAES,GAAG,CAACX;EATF,aAAd;EAWD,WAZI,MAcA,IAAIW,GAAG,CAAC5B,OAAJ,KAAgB,IAAhB,IAAwB4B,GAAG,CAACzB,QAAJ,KAAiB,IAA7C,EAAmD;EACtDjP,cAAAA,KAAK,CAACK,KAAN,GAAc;EACZiD,gBAAAA,GAAG,EAAEoN,GAAG,CAAChC,KADG;EAEZjE,gBAAAA,IAAI,EAAE,QAFM;EAGZuF,gBAAAA,GAAG,EAAEU,GAAG,CAACvO,IAHG;EAIZwO,gBAAAA,QAAQ,EAAED,GAAG,CAACtO,SAJF;EAKZwO,gBAAAA,IAAI,EAAEF,GAAG,CAACG,KALE;EAMZC,gBAAAA,KAAK,EAAEJ,GAAG,CAACK,MANC;EAOZtQ,gBAAAA,OAAO,EAAEiQ,GAAG,CAAC3P,QAPD;EAQZkP,gBAAAA,QAAQ,EAAES,GAAG,CAACX;EARF,eAAd;EAUD;EACF,KA3DD,MA6DK;EAEH/P,QAAAA,KAAK,CAACK,KAAN,GAAc,EAAd;EACD;;EAED,SAAK4Q,WAAL,CAAiBjR,KAAjB;EACAA,IAAAA,KAAK,CAACgJ,KAAN,CAAYkE,QAAZ,CAAqBlN,KAAK,CAACK,KAA3B;EACA,WAAQL,KAAR;EACD;;EAEDiR,EAAAA,WAAW,CAACjR,KAAD,EAAQkR,KAAR,EAAe;EACxB,QAAM7Q,KAAK,GAAGL,KAAK,CAACK,KAApB;EAEA,QAAM8Q,IAAI,GAAGzE,KAAK,CAACrM,KAAK,CAACoK,IAAP,CAAlB;;EACA,QAAI0G,IAAI,IAAIA,IAAI,KAAK,KAAKC,WAA1B,EAAuC;EAErC,UAAMC,UAAU,GAAG,IAAIF,IAAI,CAAC3L,KAAT,EAAnB;EAEA,UAAMmD,aAAa,GAAG0I,UAAU,CAAC1I,aAAX,EAAtB;EAEA,WAAK0H,aAAL,gBAA0BP,UAA1B;;EAGA,UAAIzP,KAAK,CAACoK,IAAN,KAAe,OAAnB,EAA4B;EAC1B,aAAK4F,aAAL,CAAmBW,OAAnB,GAA6B;EAC3B7O,UAAAA,IAAI,EAAE,mBADqB;EAE3B0G,UAAAA,KAAK,EAAE,QAFoB;EAG3BzG,UAAAA,SAAS,EAAE,IAHgB;EAI3BrB,UAAAA,QAAQ,EAAE;EACRmC,YAAAA,OAAO,EAAE7C,KAAK,CAAC2Q,OAAN,IAAiB,QADlB;EAERhJ,YAAAA,KAAK,EAAE6H;EAFC,WAJiB;EAQ3BE,UAAAA,SAAS,EAAE;EARgB,SAA7B;EAUD;;EAED,UAAIpH,aAAJ,EAAmB,KAAK0H,aAAL,CAAmB5P,OAAnB,gBACdkI,aADc;EAEjBxG,QAAAA,IAAI,EAAE;EAFW;EAMnBnC,MAAAA,KAAK,CAACoR,WAAN,GAAoBD,IAApB;EAEAnR,MAAAA,KAAK,CAACG,MAAN,GAAe,IAAIoM,cAAJ,CAAmB,OAAnB,CAAf;EACAvM,MAAAA,KAAK,CAACG,MAAN,CAAawM,OAAb,CAAqB,KAAK0D,aAA1B;EACArQ,MAAAA,KAAK,CAACgJ,KAAN,GAAc,IAAIiE,cAAJ,CAAkBjN,KAAK,CAACG,MAAxB,CAAd;EAED,KAlCD,MAmCK;EACHH,MAAAA,KAAK,CAACG,MAAN,GAAe,IAAIoM,cAAJ,CAAmB,OAAnB,CAAf;EACAvM,MAAAA,KAAK,CAACG,MAAN,CAAawM,OAAb,CAAqB,KAAK0D,aAA1B;EACArQ,MAAAA,KAAK,CAACgJ,KAAN,GAAc,IAAIiE,cAAJ,CAAkBjN,KAAK,CAACG,MAAxB,CAAd;EACD;EACF;;EAGDmR,EAAAA,WAAW,CAACjR,KAAD,EAAQ;EAEjB,QAAML,KAAK,GAAG;EACZG,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MADP;EAEZ6I,MAAAA,KAAK,EAAE,KAAKhJ,KAAL,CAAWgJ,KAFN;EAGZ3I,MAAAA,KAAK,eAAO,KAAKL,KAAL,CAAWK,KAAlB,EAA4BA,KAA5B;EAHO,KAAd;EAMA,SAAK4Q,WAAL,CAAiBjR,KAAjB;EACAA,IAAAA,KAAK,CAACgJ,KAAN,CAAYkE,QAAZ,CAAqBlN,KAAK,CAACK,KAA3B;EACA,SAAKD,QAAL,CAAcJ,KAAd;EAEAA,IAAAA,KAAK,CAACgJ,KAAN,CAAY1I,MAAZ,CAAoBwF,MAAD,IAAY;EAC7B,UAAM9F,KAAK,GAAG;EAAEoP,QAAAA,IAAI,EAAE;EAAR,OAAd;EACApP,MAAAA,KAAK,CAACM,MAAN,GAAe,IAAf;EAEAN,MAAAA,KAAK,CAAC6B,KAAN,GAAciE,MAAM,CAACjE,KAArB;;EAEA,UAAIiE,MAAM,CAACjE,KAAP,KAAiB,IAArB,EAA2B;EACzB7B,QAAAA,KAAK,CAACoP,IAAN,CAAWxK,KAAX,GAAmB,MAAnB;EACA5E,QAAAA,KAAK,CAACoP,IAAN,CAAWpP,KAAX,GAAmB,SAAnB;EACD,OAHD,MAIK;EACHA,QAAAA,KAAK,CAACoP,IAAN,CAAWxK,KAAX,GAAmB,OAAnB;EACA5E,QAAAA,KAAK,CAACoP,IAAN,CAAWpP,KAAX,GAAmB,QAAnB;EACD;;EAED,WAAKI,QAAL,CAAcJ,KAAd;EACD,KAhBD;EAkBD;;EAEDuR,EAAAA,QAAQ,GAAG;EACT,SAAKvR,KAAL,CAAWgJ,KAAX,CAAiB1I,MAAjB,CAAyBwF,MAAD,IAAY;EAClC,UAAM9F,KAAK,GAAG;EAAEoP,QAAAA,IAAI,EAAE;EAAR,OAAd;EACApP,MAAAA,KAAK,CAACM,MAAN,GAAe,IAAf;EAEAN,MAAAA,KAAK,CAAC6B,KAAN,GAAciE,MAAM,CAACjE,KAArB;;EAEA,UAAIiE,MAAM,CAACjE,KAAP,KAAiB,IAArB,EAA2B;EACzB7B,QAAAA,KAAK,CAACoP,IAAN,CAAWxK,KAAX,GAAmB,KAAnB;EACA5E,QAAAA,KAAK,CAACoP,IAAN,CAAWpP,KAAX,GAAmB,OAAnB;EACD,OAHD,MAIK;EACHA,QAAAA,KAAK,CAACoP,IAAN,CAAWxK,KAAX,GAAmB,OAAnB;EACA5E,QAAAA,KAAK,CAACoP,IAAN,CAAWpP,KAAX,GAAmB,QAAnB;EAEA,aAAKI,QAAL,CAAcJ,KAAd;EAGA,YAAMK,KAAK,GAAGyF,MAAM,CAACA,MAArB;EAEA,YAAI0L,MAAM,GAAG,EAAb;;EAGA,aAAK,IAAIlO,GAAT,IAAgBjD,KAAhB;EAAuBmR,UAAAA,MAAM,CAAC,MAAMlO,GAAP,CAAN,GAAoBjD,KAAK,CAACiD,GAAD,CAAzB;EAAvB;;EAGA,YAAMiL,MAAM,GAAG,KAAKvO,KAAL,CAAWyQ,WAAX,CAAuBgB,KAAvB,CAA6B,GAA7B,CAAf;EACAlD,QAAAA,MAAM,CAACmD,GAAP;EACAnD,QAAAA,MAAM,CAACrG,IAAP,CAAY7H,KAAK,CAACiD,GAAlB;EACA,YAAMqO,KAAK,GAAGpD,MAAM,CAACqD,IAAP,CAAY,GAAZ,CAAd;EACA,eAAOJ,MAAM,CAACK,IAAd;;EAKA,YAAIL,MAAM,CAAC3I,KAAP,KAAiB,OAAjB,IAA4B2I,MAAM,CAACM,QAAP,KAAoB,QAApD,EAA8D;EAE5D,cAAI,KAAK9R,KAAL,CAAWuQ,OAAX,KAAuB,IAA3B,EAAiC;EAG/B,gBAAI,KAAKxQ,KAAL,CAAWkJ,IAAX,CAAgBsG,MAApB,EAA4B;EAC1B,kBAAMwC,EAAE,GAAG5D,cAAK,CAAC6D,KAAN,CAAY,KAAKjS,KAAL,CAAWkJ,IAAvB,CAAX;;EACA,mBAAK,IAAItF,CAAT,IAAcoO,EAAE,CAACE,YAAjB,EAA+B;EAC7B,oBAAMrO,CAAC,GAAGmO,EAAE,CAACE,YAAH,CAAgBtO,CAAhB,CAAV;EACA6N,gBAAAA,MAAM,CAAC5N,CAAC,CAAC,CAAD,CAAF,CAAN,GAAeA,CAAC,CAAC,CAAD,CAAhB;EACD;EACF;EACF,WAVD,MAWK,IAAG,CAAC4N,MAAM,CAACrP,IAAX,EAAiBqP,MAAM,CAACrP,IAAP,GAAc,EAAd;;EAEtB,iBAAOqP,MAAM,CAAC3I,KAAd;EACA,iBAAO2I,MAAM,CAACM,QAAd;EACAN,UAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;EACD,SAlBD,MAoBK,IAAIA,MAAM,CAAC3I,KAAP,KAAiB,OAAjB,IAA4B2I,MAAM,CAACM,QAAP,KAAoB,QAApD,EAA8D;EACjEN,YAAAA,MAAM,CAAC3I,KAAP,GAAe2I,MAAM,CAACM,QAAtB;EACA,mBAAON,MAAM,CAACM,QAAd;EACAN,YAAAA,MAAM,GAAG,CAACA,MAAD,CAAT;EACD,WAJI,MAMA,IAAIA,MAAM,CAAC3I,KAAP,KAAiB,QAArB,EAA+B;EAElC,kBAAI,KAAK7I,KAAL,CAAWuQ,OAAX,KAAuB,IAA3B,EAAiC;EAG/B,oBAAI,KAAKxQ,KAAL,CAAWkJ,IAAX,CAAgBsG,MAApB,EAA4B;EAC1B,sBAAMwC,GAAE,GAAG5D,cAAK,CAAC6D,KAAN,CAAY,KAAKjS,KAAL,CAAWkJ,IAAvB,CAAX;;EACA,uBAAK,IAAItF,CAAT,IAAcoO,GAAE,CAACE,YAAjB,EAA+B;EAC7B,wBAAMrO,EAAC,GAAGmO,GAAE,CAACE,YAAH,CAAgBtO,CAAhB,CAAV;EACA6N,oBAAAA,MAAM,CAAC5N,EAAC,CAAC,CAAD,CAAF,CAAN,GAAeA,EAAC,CAAC,CAAD,CAAhB;EACD;EACF;EACF,eAVD,MAWK,IAAG,CAAC4N,MAAM,CAACrP,IAAX,EAAiBqP,MAAM,CAACrP,IAAP,GAAc,EAAd;;EAEtB,qBAAOqP,MAAM,CAAC3I,KAAd;EACD;;EAED,YAAI,KAAK7I,KAAL,CAAWuQ,OAAX,KAAuB,IAA3B,EAAiC;EAC/B,eAAKxQ,KAAL,CAAWmS,IAAX,CAAiB;EACf3B,YAAAA,OAAO,EAAE,IADM;EAEf4B,YAAAA,OAAO,EAAE,KAAKnS,KAAL,CAAWyQ,WAFL;EAGf2B,YAAAA,OAAO,EAAET,KAHM;EAIfrO,YAAAA,GAAG,EAAEjD,KAAK,CAACiD,GAJI;EAKfjD,YAAAA,KAAK,EAAEmR;EALQ,WAAjB;EAOD,SARD,MASK;EACH,eAAKzR,KAAL,CAAWmS,IAAX,CAAiB;EACf3B,YAAAA,OAAO,EAAE,KADM;EAEf6B,YAAAA,OAAO,EAAE,KAAKpS,KAAL,CAAWyQ,WAAX,GAAyB,GAAzB,GAA+BpQ,KAAK,CAACiD,GAF/B;EAGfA,YAAAA,GAAG,EAAEjD,KAAK,CAACiD,GAHI;EAIfjD,YAAAA,KAAK,EAAEmR;EAJQ,WAAjB;EAMD;EACF;EACF,KAhGD;EAkGD;;EAEDzP,EAAAA,MAAM,GAAG;AACP;EAGA,QAAM4I,QAAQ,GAAG,MAAM;EAErB,WAAK5K,KAAL,CAAW4K,QAAX,CAAoB,KAAK3K,KAAzB;EACD,KAHD;EASA,wBAAQiC,6BAACoJ,UAAD;EACN,MAAA,KAAK,eAAEpJ,yFAAmCA,6BAAC0C,QAAD;EAAK,QAAA,KAAK,EAAE,KAAK3E,KAAL,CAAWoP,IAAX,CAAgBxK;EAA5B,SAAoC,KAAK5E,KAAL,CAAWoP,IAAX,CAAgBpP,KAApD,CAAnC,CADD;EAEN,MAAA,QAAQ,MAFF;EAGN,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWsQ,OAHd;EAIN,MAAA,KAAK,EAAE,GAJD;EAKN,MAAA,IAAI,EAAE,KAAKiB,QAAL,CAAcjG,IAAd,CAAmB,IAAnB,CALA;EAMN,MAAA,QAAQ,EAAEX;EANJ,oBAQN1I,6BAAC,kBAAD;EACE,MAAA,GAAG,EAAE,KAAK4K,OADZ;EAEE,MAAA,MAAM,EAAE,KAAKwD,aAFf;EAGE,MAAA,KAAK,EAAE,KAAKrQ,KAAL,CAAWK,KAHpB;EAIE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWkJ,IAJnB;EAKE,MAAA,MAAM,EAAE,KAAKjJ,KAAL,CAAWM,MALrB;EAME,MAAA,QAAQ,EAAE,KAAKgR,WAAL,CAAiBhG,IAAjB,CAAsB,IAAtB;EANZ,MARM,CAAR;EAkBD;;EA1U6D;;EC5BzD,MAAM+G,qBAAN,SAAoC7P,iBAApC,CAAsD;EAE3DvC,EAAAA,KAAK,CAACF,KAAD,EAAQoG,KAAR,EAAe;EAClB,QAAMnG,KAAK,GAAG;EACZuJ,MAAAA,KAAK,EAAE,KADK;EAEZ+I,MAAAA,SAAS,EAAE,IAFC;EAGZC,MAAAA,gBAAgB,EAAE;EAHN,KAAd;;EAMA,SAAK5R,QAAL,GAAgB,MAAI,EAApB;;EACA,QAAGZ,KAAK,CAACY,QAAT,EAAmB,KAAKA,QAAL,GAAgBZ,KAAK,CAACY,QAAtB;EAGnBX,IAAAA,KAAK,CAACG,MAAN,GAAe,IAAIoM,cAAJ,CAAmB,MAAnB,CAAf;EACAvM,IAAAA,KAAK,CAACG,MAAN,CAAawM,OAAb,CAAqB5M,KAAK,CAACI,MAA3B;EAEAH,IAAAA,KAAK,CAACuS,gBAAN,GAAyB,KAAKC,gBAAL,CAAsBxS,KAAK,CAACG,MAA5B,CAAzB;EAEA,SAAKyK,OAAL,GAAe,CACb;EACEC,MAAAA,KAAK,EAAE,KADT;EAEEC,MAAAA,SAAS,EAAE,MAFb;EAGExH,MAAAA,GAAG,EAAE;EAHP,KADa,EAMb;EACEuH,MAAAA,KAAK,EAAE,aADT;EAEEC,MAAAA,SAAS,EAAE,KAFb;EAGExH,MAAAA,GAAG,EAAE;EAHP,KANa,EAWb;EACEuH,MAAAA,KAAK,eAAE5I;EAAK,QAAA,SAAS,EAAC;EAAf,sBACLA;EAAM,QAAA,SAAS,EAAC,0BAAhB;EAA2C,QAAA,OAAO,EAAE,MAAM,KAAKwQ,WAAL;EAA1D,sBACExQ,gEAAUA,6BAAC8I,kBAAD,OAAV,CADF,CADK,CADT;EAMED,MAAAA,SAAS,EAAE,SANb;EAOExH,MAAAA,GAAG,EAAE,SAPP;EAQE0H,MAAAA,KAAK,EAAE;EART,KAXa,CAAf;EAuBA,WAAOhL,KAAP;EACD;;EAED0S,EAAAA,YAAY,GAAG;EACb,QAAMC,EAAE,GAAG,KAAK3S,KAAL,CAAWG,MAAX,CAAkByS,MAAlB,EAAX;EAIA,SAAKjS,QAAL,CAAcgS,EAAd;EACD;;EAEDE,EAAAA,WAAW,CAACC,GAAD,EAAM;EAEf,QAAIA,GAAG,CAACvC,OAAJ,KAAgB,IAApB,EAA0B;EACxB,UAAMwC,MAAM,GAAG,KAAK/S,KAAL,CAAWG,MAAX,CAAkB6S,SAAlB,CAA4BF,GAAG,CAACX,OAAhC,CAAf;EAGA,WAAKnS,KAAL,CAAWG,MAAX,CAAkB8S,YAAlB,CAA+BH,GAAG,CAACX,OAAnC;EAGA,WAAKnS,KAAL,CAAWG,MAAX,CAAkB+S,SAAlB,CAA4BJ,GAAG,CAACV,OAAhC,EAAyCU,GAAG,CAACzS,KAA7C;EAEA8S,MAAAA,iBAAY,CAACC,OAAb,CAAqB;EACnBtR,QAAAA,OAAO,EAAE,eADU;EAEnByD,QAAAA,WAAW,gBAAcuN,GAAG,CAACX,OAAlB;EAFQ,OAArB;EAID,KAbD,MAgBK;EAEH,aAAKnS,KAAL,CAAWG,MAAX,CAAkB+S,SAAlB,CAA4BJ,GAAG,CAACV,OAAhC,EAAyCU,GAAG,CAACzS,KAA7C;EAEA8S,QAAAA,iBAAY,CAACC,OAAb,CAAqB;EACnBtR,UAAAA,OAAO,EAAE,aADU;EAEnByD,UAAAA,WAAW,gBAAcuN,GAAG,CAACV,OAAlB;EAFQ,SAArB;EAID;;EAED,SAAKM,YAAL;EAEA,SAAKtS,QAAL,CAAc;EACZmJ,MAAAA,KAAK,EAAE,KADK;EAEZ8J,MAAAA,YAAY,EAAE,IAFF;EAGZf,MAAAA,SAAS,EAAE,IAHC;EAIZC,MAAAA,gBAAgB,EAAE,KAAKC,gBAAL,CAAsB,KAAKxS,KAAL,CAAWG,MAAjC;EAJN,KAAd;EAMD;;EAEDmT,EAAAA,UAAU,CAAChF,IAAD,EAAO;EACf,SAAKtO,KAAL,CAAWG,MAAX,CAAkB8S,YAAlB,CAA+B3E,IAAI,CAACiB,MAApC;EAEA,SAAKmD,YAAL;EAEA,SAAKtS,QAAL,CAAc;EACZmS,MAAAA,gBAAgB,EAAE,KAAKC,gBAAL,CAAsB,KAAKxS,KAAL,CAAWG,MAAjC;EADN,KAAd;EAIAgT,IAAAA,iBAAY,CAACC,OAAb,CAAqB;EACnBtR,MAAAA,OAAO,EAAE,eADU;EAEnByD,MAAAA,WAAW,gBAAc+I,IAAI,CAACiB,MAAnB;EAFQ,KAArB;EAID;;EAEDkD,EAAAA,WAAW,CAAC3P,IAAD,EAAO;EAChBA,IAAAA,IAAI,GAAGA,IAAI,IAAI,GAAf;EAEA,QAAMiQ,MAAM,GAAG,KAAK/S,KAAL,CAAWG,MAAX,CAAkB6S,SAAlB,CAA4BlQ,IAA5B,KAAqC,KAAK9C,KAAL,CAAWG,MAAX,CAAkBa,OAAlB,CAA0Bb,MAA9E;EAEA,QAAMH,KAAK,GAAG;EACZuJ,MAAAA,KAAK,EAAE,IADK;EAEZ8J,MAAAA,YAAY,EAAE,IAFF;EAGZf,MAAAA,SAAS,EAAES;EAHC,KAAd;EAMA,SAAK3S,QAAL,CAAcJ,KAAd;EACD;;EAEDuT,EAAAA,YAAY,CAACjF,IAAD,EAAO;EACjB,QAAMxL,IAAI,GAAGwL,IAAI,CAACiB,MAAL,IAAe,GAA5B;EAEA,QAAMwD,MAAM,GAAG,KAAK/S,KAAL,CAAWG,MAAX,CAAkB6S,SAAlB,CAA4BlQ,IAA5B,KAAqC,KAAK9C,KAAL,CAAWG,MAAX,CAAkBa,OAAlB,CAA0Bb,MAA9E;EAEA,QAAMH,KAAK,GAAG;EACZuJ,MAAAA,KAAK,EAAE,IADK;EAEZ8J,MAAAA,YAAY,EAAE/E,IAFF;EAGZgE,MAAAA,SAAS,EAAES;EAHC,KAAd;EAMA,SAAK3S,QAAL,CAAcJ,KAAd;EACD;;EAEDwS,EAAAA,gBAAgB,CAAC/E,IAAD,EAAO;EACrB,QAAM+F,IAAI,GAAG,IAAb;;EACA,aAASC,qBAAT,CAA+BtT,MAA/B,EAAuCuT,IAAvC,EAA6C;EAC3C,UAAI,CAACA,IAAL,EACEA,IAAI,GAAG,EAAP;EACF,UAAMC,OAAO,GAAG,EAAhB;EACAxF,MAAAA,cAAK,CAACC,WAAN,CAAkBjO,MAAlB,EAA0B,CAACkO,KAAD,EAAQC,IAAR,KAAiB;EACzC,YAAIxL,IAAI,GAAG4Q,IAAI,GAAG,GAAP,GAAapF,IAAI,CAACI,KAA7B;EACAJ,QAAAA,IAAI,CAACsF,MAAL,GAAc9Q,IAAd;;EAGA,YAAIwJ,KAAK,CAACkC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;EACvBxL,UAAAA,IAAI,GAAG4Q,IAAI,GAAG,GAAP,GAAapF,IAAI,CAAC,CAAD,CAAJ,CAAQI,KAA5B;EACAJ,UAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQsF,MAAR,GAAiB9Q,IAAjB;EACAwL,UAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQQ,OAAR,GAAkB,IAAlB;EAEA,cAAI+E,SAAS,gBAAG5R,6BAAC6R,YAAD;EAAS,YAAA,KAAK,EAAC;EAAf,0BACd7R,6BAAC0C,QAAD;EAAK,YAAA,KAAK,EAAC;EAAX,0BAAqB1C,6BAAC8R,2BAAD,OAArB,CADc,CAAhB;;EAIA,cAAI,WAAWzF,IAAI,CAAC,CAAD,CAAnB,EAAwB;EACtB,gBAAM5J,QAAQ,GAAG4J,IAAI,CAAC,CAAD,CAAJ,CAAQzF,KAAR,CAAcpD,IAA/B;EACAoO,YAAAA,SAAS,gBAAG5R,6BAAC,QAAD,OAAZ;EACD,WAHD,MAIK;EACHqM,YAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQW,QAAR,GAAmB,IAAnB;EACD;;EAED0E,UAAAA,OAAO,CAACzL,IAAR,CAAa;EACXI,YAAAA,GAAG,EAAEgG,IAAI,CAAC,CAAD,CADE;EAEXhL,YAAAA,GAAG,EAAER,IAFM;EAGX0J,YAAAA,IAAI,eAAEvK,uDACJA,6BAAC6R,YAAD;EAAS,cAAA,KAAK,EAAC;EAAf,4BACE7R,6BAAC0C,QAAD;EAAK,cAAA,KAAK,EAAC;EAAX,4BAAqB1C,6BAAC+R,kBAAD,OAArB,CADF,CADI,EAIHH,SAJG,eAKJ5R,6CAASqM,IAAI,CAAC,CAAD,CAAJ,CAAQI,KAAjB,CALI,CAHK;EAUXsB,YAAAA,GAAG,EAAE1B,IAAI,CAAC,CAAD,CAAJ,CAAQnM,IAVF;EAWXH,YAAAA,QAAQ,EAAE,EAAE,WAAWsM,IAAI,CAAC,CAAD,CAAjB,IAAwBmF,qBAAqB,CAACnF,IAAI,CAAC,CAAD,CAAL,EAAUxL,IAAV,CAA7C,GAA+D,IAX9D;EAYXgH,YAAAA,OAAO,eAAE7H;EAAK,cAAA,SAAS,EAAC;EAAf,4BACPA,6BAACgS,eAAD;EAAY,cAAA,KAAK,eAAEhS,6FAAuCA,6CAASa,IAAT,CAAvC,CAAnB;EAA0F,cAAA,SAAS,EAAE,MAAM0Q,IAAI,CAACF,UAAL,CAAgBhF,IAAI,CAAC,CAAD,CAApB,CAA3G;EAAqI,cAAA,MAAM,EAAC,KAA5I;EAAkJ,cAAA,UAAU,EAAC;EAA7J,4BACErM;EAAM,cAAA,SAAS,EAAC;EAAhB,4BACEA,wDAAMA,6BAAC+H,oBAAD,OAAN,CADF,CADF,CADO,eAQP/H;EAAM,cAAA,SAAS,EAAC,0BAAhB;EAA2C,cAAA,OAAO,EAAE,MAAMuR,IAAI,CAACD,YAAL,CAAkBjF,IAAI,CAAC,CAAD,CAAtB;EAA1D,4BACErM,wDAAMA,6BAACiI,kBAAD,OAAN,CADF,CARO,EAYN,EAAE,WAAWoE,IAAI,CAAC,CAAD,CAAjB,iBACCrM;EAAM,cAAA,SAAS,EAAC,0BAAhB;EAA2C,cAAA,OAAO,EAAE,MAAMuR,IAAI,CAACf,WAAL,CAAiB3P,IAAjB;EAA1D,4BACEb,wDAAMA,6BAAC8I,kBAAD,OAAN,CADF,CADD,GAIG,IAhBG;EAZE,WAAb;EA+BD,SAhDD,MAkDK,IAAI,OAAOuD,IAAP,KAAgB,QAAhB,IAA4B,CAACA,IAAI,CAACzF,KAAtC,EAA6C;EAChDyF,YAAAA,IAAI,CAACW,QAAL,GAAgB,IAAhB;EACA0E,YAAAA,OAAO,CAACzL,IAAR,CAAa;EACXI,cAAAA,GAAG,EAAEgG,IADM;EAEXhL,cAAAA,GAAG,EAAER,IAFM;EAGX0J,cAAAA,IAAI,eAAEvK,uDACJA,6BAAC6R,YAAD;EAAS,gBAAA,KAAK,EAAC;EAAf,8BACE7R,6BAAC0C,QAAD;EAAK,gBAAA,KAAK,EAAC;EAAX,8BAAqB1C,6BAAC8R,2BAAD,OAArB,CADF,CADI,eAIJ9R,6CAASqM,IAAI,CAACI,KAAd,CAJI,CAHK;EASXsB,cAAAA,GAAG,EAAE1B,IAAI,CAACnM,IATC;EAUXH,cAAAA,QAAQ,EAAEyR,qBAAqB,CAACnF,IAAD,EAAOxL,IAAP,CAVpB;EAWXgH,cAAAA,OAAO,eAAE7H;EAAK,gBAAA,SAAS,EAAC;EAAf,8BACPA,6BAACgS,eAAD;EAAY,gBAAA,KAAK,eAAEhS,0FAAoCA,6CAASa,IAAT,CAApC,CAAnB;EAAuF,gBAAA,SAAS,EAAE,MAAM0Q,IAAI,CAACF,UAAL,CAAgBhF,IAAhB,CAAxG;EAA+H,gBAAA,MAAM,EAAC,KAAtI;EAA4I,gBAAA,UAAU,EAAC;EAAvJ,8BACErM;EAAM,gBAAA,SAAS,EAAC;EAAhB,8BACEA,wDAAMA,6BAAC+H,oBAAD,OAAN,CADF,CADF,CADO,eAOP/H;EAAM,gBAAA,SAAS,EAAC,0BAAhB;EAA2C,gBAAA,OAAO,EAAE,MAAMuR,IAAI,CAACD,YAAL,CAAkBjF,IAAlB;EAA1D,8BACErM,wDAAMA,6BAACiI,kBAAD,OAAN,CADF,CAPO,eAWPjI;EAAM,gBAAA,SAAS,EAAC,0BAAhB;EAA2C,gBAAA,OAAO,EAAE,MAAMuR,IAAI,CAACf,WAAL,CAAiB3P,IAAjB;EAA1D,8BACEb,wDAAMA,6BAAC8I,kBAAD,OAAN,CADF,CAXO;EAXE,aAAb;EA2BD,WA7BI,MA8BA;EACH,gBAAMrG,SAAQ,GAAG4J,IAAI,CAACzF,KAAL,CAAWpD,IAA5B;EACAkO,YAAAA,OAAO,CAACzL,IAAR,CAAa;EACXI,cAAAA,GAAG,EAAEgG,IADM;EAEXhL,cAAAA,GAAG,EAAER,IAFM;EAGX0J,cAAAA,IAAI,eAAEvK,uDACJA,6BAAC,SAAD,OADI,OACUqM,IAAI,CAACI,KADf,CAHK;EAMXsB,cAAAA,GAAG,EAAE1B,IAAI,CAACnM,IANC;EAOX2H,cAAAA,OAAO,eAAE7H;EAAK,gBAAA,SAAS,EAAC;EAAf,8BACPA,6BAACgS,eAAD;EAAY,gBAAA,KAAK,eAAEhS,mFAA6BA,6CAASa,IAAT,CAA7B,CAAnB;EAAgF,gBAAA,SAAS,EAAE,MAAM0Q,IAAI,CAACF,UAAL,CAAgBhF,IAAhB,CAAjG;EAEE,gBAAA,MAAM,EAAC,KAFT;EAEe,gBAAA,UAAU,EAAC;EAF1B,8BAGErM;EAAM,gBAAA,SAAS,EAAC;EAAhB,8BACEA,wDAAMA,6BAAC+H,oBAAD,OAAN,CADF,CAHF,CADO,eASP/H;EAAM,gBAAA,SAAS,EAAC,0BAAhB;EAA2C,gBAAA,OAAO,EAAE,MAAMuR,IAAI,CAACD,YAAL,CAAkBjF,IAAlB;EAA1D,8BACErM,wDAAMA,6BAACiI,kBAAD,OAAN,CADF,CATO;EAPE,aAAb;EAqBD;EACF,OA7GD;EA8GA,aAAQyJ,OAAR;EACD;;EAED,QAAIvJ,IAAI,GAAG,IAAX;;EACA,QAAIqD,IAAJ,EAAU;EACRrD,MAAAA,IAAI,GAAGqJ,qBAAqB,CAAChG,IAAI,CAACzM,OAAL,CAAab,MAAd,CAA5B;EACA,aAAQiK,IAAR;EACD;;EAED,WAAQ,EAAR;EACD;;EAEDrI,EAAAA,MAAM,GAAG;EACP,QAAMmS,GAAG,GAAG,KAAKlU,KAAL,CAAWuS,gBAAvB;EAEA,wBAAQtQ,uDACNA,6BAAC,0BAAD;EACE,MAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWsS,SADnB;EAEE,MAAA,OAAO,EAAE,KAAKtS,KAAL,CAAWuJ,KAFtB;EAGE,MAAA,KAAK,EAAE,KAAKvJ,KAAL,CAAWqT,YAHpB;EAIE,MAAA,QAAQ,EAAE,MAAM,KAAKjT,QAAL,CAAc;EAAEmJ,QAAAA,KAAK,EAAE;EAAT,OAAd,CAJlB;EAKE,MAAA,IAAI,EAAE,KAAKsJ,WAAL,CAAiBvH,IAAjB,CAAsB,IAAtB;EALR,MADM,eASNrJ,6BAACuJ,UAAD;EAAO,MAAA,OAAO,EAAE,KAAKZ,OAArB;EAA8B,MAAA,UAAU,EAAEsJ,GAA1C;EAA+C,MAAA,IAAI,EAAC,OAApD;EAA4D,MAAA,UAAU,EAAE;EACtEzI,QAAAA,KAAK,EAAEyI,GAAG,CAACxI,MAD2D;EAEtEC,QAAAA,QAAQ,EAAEuI,GAAG,CAACxI,MAFwD;EAGtEE,QAAAA,gBAAgB,EAAE;EAHoD,OAAxE;EAIG,MAAA,UAAU,EAAE;EAAEuI,QAAAA,oBAAoB,EAAE;EAAxB;EAJf,MATM,CAAR;EAeD;;EAvR0D;;ECrBtD,MAAMC,oBAAN,SAAmC5R,iBAAnC,CAAqD;EAC1DvC,EAAAA,KAAK,CAACF,KAAD,EAAQ;EACX,QAAMC,KAAK,GAAG;EACZiL,MAAAA,MAAM,EAAElL,KAAK,CAACkL,MADF;EAEZ9K,MAAAA,MAAM,EAAEJ,KAAK,CAACI,MAFF;EAGZ6I,MAAAA,KAAK,EAAEjJ,KAAK,CAACiJ;EAHD,KAAd;EAMA,WAAOhJ,KAAP;EACD;;EAED+B,EAAAA,MAAM,GAAG;EACP,wBAAQE,6BAAC,WAAD;EACN,MAAA,MAAM,EAAE,KAAKjC,KAAL,CAAWG,MADb;EAEN,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWgJ,KAFZ;EAGN,MAAA,OAAO,EAAE,KAHH;EAIN,MAAA,MAAM,EAAE,KAAKhJ,KAAL,CAAWiL,MAJb;EAKN,MAAA,SAAS,EAAC;EALJ,MAAR;EAOD;;EAnByD;;;;;;;;;;;;ECJrD,MAAM7G,KAAN,SAAoB4E,cAApB,CAA0B;AAGjC,MAAaqL,MAAM,GAAGlU,MAAf;AAGP,MAAauM,KAAK,GAAGrH,KAAd;;;;;;;;;;"}